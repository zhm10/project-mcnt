{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RawDataUrlModule = require(\"../asset/RawDataUrlModule\");\nconst {\n  getDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst memoize = require(\"../util/memoize\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").GetConditionFn} GetConditionFn */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst getIgnoredRawDataUrlModule = memoize(() => {\n  return new RawDataUrlModule(\"data:,\", `ignored-asset`, `(ignored asset)`);\n});\nclass URLDependency extends ModuleDependency {\n  /**\n   * @param {string} request request\n   * @param {Range} range range of the arguments of new URL( |> ... <| )\n   * @param {Range} outerRange range of the full |> new URL(...) <|\n   * @param {boolean=} relative use relative urls instead of absolute with base uri\n   */\n  constructor(request, range, outerRange, relative) {\n    super(request);\n    this.range = range;\n    this.outerRange = outerRange;\n    this.relative = relative || false;\n    /** @type {Set<string> | boolean | undefined} */\n    this.usedByExports = undefined;\n  }\n  get type() {\n    return \"new URL()\";\n  }\n  get category() {\n    return \"url\";\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {null | false | GetConditionFn} function to determine if the connection is active\n   */\n  getCondition(moduleGraph) {\n    return getDependencyUsedByExportsCondition(this, this.usedByExports, moduleGraph);\n  }\n\n  /**\n   * @param {string} context context directory\n   * @returns {Module | null} a module\n   */\n  createIgnoredModule(context) {\n    return getIgnoredRawDataUrlModule();\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.outerRange);\n    write(this.relative);\n    write(this.usedByExports);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.outerRange = read();\n    this.relative = read();\n    this.usedByExports = read();\n    super.deserialize(context);\n  }\n}\nURLDependency.Template = class URLDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const {\n      chunkGraph,\n      moduleGraph,\n      runtimeRequirements,\n      runtimeTemplate,\n      runtime\n    } = templateContext;\n    const dep = /** @type {URLDependency} */dependency;\n    const connection = moduleGraph.getConnection(dep);\n    // Skip rendering depending when dependency is conditional\n    if (connection && !connection.isTargetActive(runtime)) {\n      source.replace(dep.outerRange[0], dep.outerRange[1] - 1, \"/* unused asset import */ undefined\");\n      return;\n    }\n    runtimeRequirements.add(RuntimeGlobals.require);\n    if (dep.relative) {\n      runtimeRequirements.add(RuntimeGlobals.relativeUrl);\n      source.replace(dep.outerRange[0], dep.outerRange[1] - 1, `/* asset import */ new ${RuntimeGlobals.relativeUrl}(${runtimeTemplate.moduleRaw({\n        chunkGraph,\n        module: moduleGraph.getModule(dep),\n        request: dep.request,\n        runtimeRequirements,\n        weak: false\n      })})`);\n    } else {\n      runtimeRequirements.add(RuntimeGlobals.baseURI);\n      source.replace(dep.range[0], dep.range[1] - 1, `/* asset import */ ${runtimeTemplate.moduleRaw({\n        chunkGraph,\n        module: moduleGraph.getModule(dep),\n        request: dep.request,\n        runtimeRequirements,\n        weak: false\n      })}, ${RuntimeGlobals.baseURI}`);\n    }\n  }\n};\nmakeSerializable(URLDependency, \"webpack/lib/dependencies/URLDependency\");\nmodule.exports = URLDependency;","map":{"version":3,"names":["RuntimeGlobals","require","RawDataUrlModule","getDependencyUsedByExportsCondition","makeSerializable","memoize","ModuleDependency","getIgnoredRawDataUrlModule","URLDependency","constructor","request","range","outerRange","relative","usedByExports","undefined","type","category","getCondition","moduleGraph","createIgnoredModule","context","serialize","write","deserialize","read","Template","URLDependencyTemplate","apply","dependency","source","templateContext","chunkGraph","runtimeRequirements","runtimeTemplate","runtime","dep","connection","getConnection","isTargetActive","replace","add","relativeUrl","moduleRaw","module","getModule","weak","baseURI","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/dependencies/URLDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RawDataUrlModule = require(\"../asset/RawDataUrlModule\");\nconst {\n\tgetDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst memoize = require(\"../util/memoize\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").GetConditionFn} GetConditionFn */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst getIgnoredRawDataUrlModule = memoize(() => {\n\treturn new RawDataUrlModule(\"data:,\", `ignored-asset`, `(ignored asset)`);\n});\n\nclass URLDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {Range} range range of the arguments of new URL( |> ... <| )\n\t * @param {Range} outerRange range of the full |> new URL(...) <|\n\t * @param {boolean=} relative use relative urls instead of absolute with base uri\n\t */\n\tconstructor(request, range, outerRange, relative) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.outerRange = outerRange;\n\t\tthis.relative = relative || false;\n\t\t/** @type {Set<string> | boolean | undefined} */\n\t\tthis.usedByExports = undefined;\n\t}\n\n\tget type() {\n\t\treturn \"new URL()\";\n\t}\n\n\tget category() {\n\t\treturn \"url\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | GetConditionFn} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn getDependencyUsedByExportsCondition(\n\t\t\tthis,\n\t\t\tthis.usedByExports,\n\t\t\tmoduleGraph\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module | null} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\treturn getIgnoredRawDataUrlModule();\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.outerRange);\n\t\twrite(this.relative);\n\t\twrite(this.usedByExports);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.outerRange = read();\n\t\tthis.relative = read();\n\t\tthis.usedByExports = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nURLDependency.Template = class URLDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst {\n\t\t\tchunkGraph,\n\t\t\tmoduleGraph,\n\t\t\truntimeRequirements,\n\t\t\truntimeTemplate,\n\t\t\truntime\n\t\t} = templateContext;\n\t\tconst dep = /** @type {URLDependency} */ (dependency);\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) {\n\t\t\tsource.replace(\n\t\t\t\tdep.outerRange[0],\n\t\t\t\tdep.outerRange[1] - 1,\n\t\t\t\t\"/* unused asset import */ undefined\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\n\t\tif (dep.relative) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.relativeUrl);\n\t\t\tsource.replace(\n\t\t\t\tdep.outerRange[0],\n\t\t\t\tdep.outerRange[1] - 1,\n\t\t\t\t`/* asset import */ new ${\n\t\t\t\t\tRuntimeGlobals.relativeUrl\n\t\t\t\t}(${runtimeTemplate.moduleRaw({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\trequest: dep.request,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\tweak: false\n\t\t\t\t})})`\n\t\t\t);\n\t\t} else {\n\t\t\truntimeRequirements.add(RuntimeGlobals.baseURI);\n\n\t\t\tsource.replace(\n\t\t\t\tdep.range[0],\n\t\t\t\tdep.range[1] - 1,\n\t\t\t\t`/* asset import */ ${runtimeTemplate.moduleRaw({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\trequest: dep.request,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\tweak: false\n\t\t\t\t})}, ${RuntimeGlobals.baseURI}`\n\t\t\t);\n\t\t}\n\t}\n};\n\nmakeSerializable(URLDependency, \"webpack/lib/dependencies/URLDependency\");\n\nmodule.exports = URLDependency;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}