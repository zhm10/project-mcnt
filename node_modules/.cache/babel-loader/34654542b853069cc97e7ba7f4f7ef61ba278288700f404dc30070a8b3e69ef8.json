{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst parseJson = require(\"json-parse-even-better-errors\");\nconst {\n  getContext,\n  runLoaders\n} = require(\"loader-runner\");\nconst querystring = require(\"querystring\");\nconst {\n  HookMap,\n  SyncHook,\n  AsyncSeriesBailHook\n} = require(\"tapable\");\nconst {\n  CachedSource,\n  OriginalSource,\n  RawSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"./Compilation\");\nconst HookWebpackError = require(\"./HookWebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO\n} = require(\"./ModuleTypeConstants\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\nconst WebpackError = require(\"./WebpackError\");\nconst formatLocation = require(\"./formatLocation\");\nconst LazySet = require(\"./util/LazySet\");\nconst {\n  isSubset\n} = require(\"./util/SetHelpers\");\nconst {\n  getScheme\n} = require(\"./util/URLAbsoluteSpecifier\");\nconst {\n  compareLocations,\n  concatComparators,\n  compareSelect,\n  keepOriginalOrder\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst {\n  createFakeHook\n} = require(\"./util/deprecation\");\nconst {\n  join\n} = require(\"./util/fs\");\nconst {\n  contextify,\n  absolutify,\n  makePathsRelative\n} = require(\"./util/identifier\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Generator\")} Generator */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").KnownBuildInfo} KnownBuildInfo */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"./Module\").UnsafeCacheData} UnsafeCacheData */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"./ModuleTypeConstants\").JavaScriptModuleTypes} JavaScriptModuleTypes */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {{[k: string]: any}} ParserOptions */\n/** @typedef {{[k: string]: any}} GeneratorOptions */\n\n/** @typedef {UnsafeCacheData & { parser: undefined | Parser, parserOptions: undefined | ParserOptions, generator: undefined | Generator, generatorOptions: undefined | GeneratorOptions }} NormalModuleUnsafeCacheData */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\nconst getInvalidDependenciesModuleWarning = memoize(() => require(\"./InvalidDependenciesModuleWarning\"));\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n  if (source.startsWith(\"webpack://\")) return source;\n  return `webpack://${makePathsRelative(context, source, associatedObjectForCache)}`;\n};\n\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n  if (!Array.isArray(sourceMap.sources)) return sourceMap;\n  const {\n    sourceRoot\n  } = sourceMap;\n  /** @type {function(string): string} */\n  const mapper = !sourceRoot ? source => source : sourceRoot.endsWith(\"/\") ? source => source.startsWith(\"/\") ? `${sourceRoot.slice(0, -1)}${source}` : `${sourceRoot}${source}` : source => source.startsWith(\"/\") ? `${sourceRoot}${source}` : `${sourceRoot}/${source}`;\n  const newSources = sourceMap.sources.map(source => contextifySourceUrl(context, mapper(source), associatedObjectForCache));\n  return {\n    ...sourceMap,\n    file: \"x\",\n    sourceRoot: undefined,\n    sources: newSources\n  };\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\nconst asString = input => {\n  if (Buffer.isBuffer(input)) {\n    return input.toString(\"utf-8\");\n  }\n  return input;\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\nconst asBuffer = input => {\n  if (!Buffer.isBuffer(input)) {\n    return Buffer.from(input, \"utf-8\");\n  }\n  return input;\n};\nclass NonErrorEmittedError extends WebpackError {\n  constructor(error) {\n    super();\n    this.name = \"NonErrorEmittedError\";\n    this.message = \"(Emitted value instead of an instance of Error) \" + error;\n  }\n}\nmakeSerializable(NonErrorEmittedError, \"webpack/lib/NormalModule\", \"NonErrorEmittedError\");\n\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {JavaScriptModuleTypes | \"\"} type module type. When deserializing, this is set to an empty string \"\".\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {ParserOptions=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {GeneratorOptions=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\nclass NormalModule extends Module {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {NormalModuleCompilationHooks} the attached hooks\n   */\n  static getCompilationHooks(compilation) {\n    if (!(compilation instanceof Compilation)) {\n      throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n    }\n    let hooks = compilationHooksMap.get(compilation);\n    if (hooks === undefined) {\n      hooks = {\n        loader: new SyncHook([\"loaderContext\", \"module\"]),\n        beforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n        beforeParse: new SyncHook([\"module\"]),\n        beforeSnapshot: new SyncHook([\"module\"]),\n        // TODO webpack 6 deprecate\n        readResourceForScheme: new HookMap(scheme => {\n          const hook = hooks.readResource.for(scheme);\n          return createFakeHook( /** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */{\n            tap: (options, fn) => hook.tap(options, loaderContext => fn(loaderContext.resource, loaderContext._module)),\n            tapAsync: (options, fn) => hook.tapAsync(options, (loaderContext, callback) => fn(loaderContext.resource, loaderContext._module, callback)),\n            tapPromise: (options, fn) => hook.tapPromise(options, loaderContext => fn(loaderContext.resource, loaderContext._module))\n          });\n        }),\n        readResource: new HookMap(() => new AsyncSeriesBailHook([\"loaderContext\"])),\n        needBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n      };\n      compilationHooksMap.set(compilation, /** @type {NormalModuleCompilationHooks} */hooks);\n    }\n    return /** @type {NormalModuleCompilationHooks} */hooks;\n  }\n\n  /**\n   * @param {NormalModuleCreateData} options options object\n   */\n  constructor({\n    layer,\n    type,\n    request,\n    userRequest,\n    rawRequest,\n    loaders,\n    resource,\n    resourceResolveData,\n    context,\n    matchResource,\n    parser,\n    parserOptions,\n    generator,\n    generatorOptions,\n    resolveOptions\n  }) {\n    super(type, context || getContext(resource), layer);\n\n    // Info from Factory\n    /** @type {string} */\n    this.request = request;\n    /** @type {string} */\n    this.userRequest = userRequest;\n    /** @type {string} */\n    this.rawRequest = rawRequest;\n    /** @type {boolean} */\n    this.binary = /^(asset|webassembly)\\b/.test(type);\n    /** @type {undefined | Parser} */\n    this.parser = parser;\n    /** @type {undefined | ParserOptions} */\n    this.parserOptions = parserOptions;\n    /** @type {undefined | Generator} */\n    this.generator = generator;\n    /** @type {undefined | GeneratorOptions} */\n    this.generatorOptions = generatorOptions;\n    /** @type {string} */\n    this.resource = resource;\n    this.resourceResolveData = resourceResolveData;\n    /** @type {string | undefined} */\n    this.matchResource = matchResource;\n    /** @type {LoaderItem[]} */\n    this.loaders = loaders;\n    if (resolveOptions !== undefined) {\n      // already declared in super class\n      this.resolveOptions = resolveOptions;\n    }\n\n    // Info from Build\n    /** @type {WebpackError | null} */\n    this.error = null;\n    /**\n     * @private\n     * @type {Source | null}\n     */\n    this._source = null;\n    /**\n     * @private\n     * @type {Map<string, number> | undefined}\n     **/\n    this._sourceSizes = undefined;\n    /**\n     * @private\n     * @type {undefined | SourceTypes}\n     **/\n    this._sourceTypes = undefined;\n\n    // Cache\n    this._lastSuccessfulBuildMeta = {};\n    this._forceBuild = true;\n    this._isEvaluatingSideEffects = false;\n    /** @type {WeakSet<ModuleGraph> | undefined} */\n    this._addedSideEffectsBailout = undefined;\n    /** @type {Map<string, any>} */\n    this._codeGeneratorData = new Map();\n  }\n\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n  identifier() {\n    if (this.layer === null) {\n      if (this.type === JAVASCRIPT_MODULE_TYPE_AUTO) {\n        return this.request;\n      } else {\n        return `${this.type}|${this.request}`;\n      }\n    } else {\n      return `${this.type}|${this.request}|${this.layer}`;\n    }\n  }\n\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n  readableIdentifier(requestShortener) {\n    return requestShortener.shorten(this.userRequest);\n  }\n\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n  libIdent(options) {\n    let ident = contextify(options.context, this.userRequest, options.associatedObjectForCache);\n    if (this.layer) ident = `(${this.layer})/${ident}`;\n    return ident;\n  }\n\n  /**\n   * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n   */\n  nameForCondition() {\n    const resource = this.matchResource || this.resource;\n    const idx = resource.indexOf(\"?\");\n    if (idx >= 0) return resource.slice(0, idx);\n    return resource;\n  }\n\n  /**\n   * Assuming this module is in the cache. Update the (cached) module with\n   * the fresh module from the factory. Usually updates internal references\n   * and properties.\n   * @param {Module} module fresh module\n   * @returns {void}\n   */\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m = /** @type {NormalModule} */module;\n    this.binary = m.binary;\n    this.request = m.request;\n    this.userRequest = m.userRequest;\n    this.rawRequest = m.rawRequest;\n    this.parser = m.parser;\n    this.parserOptions = m.parserOptions;\n    this.generator = m.generator;\n    this.generatorOptions = m.generatorOptions;\n    this.resource = m.resource;\n    this.resourceResolveData = m.resourceResolveData;\n    this.context = m.context;\n    this.matchResource = m.matchResource;\n    this.loaders = m.loaders;\n  }\n\n  /**\n   * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n   */\n  cleanupForCache() {\n    // Make sure to cache types and sizes before cleanup when this module has been built\n    // They are accessed by the stats and we don't want them to crash after cleanup\n    // TODO reconsider this for webpack 6\n    if (this.buildInfo) {\n      if (this._sourceTypes === undefined) this.getSourceTypes();\n      for (const type of ( /** @type {SourceTypes} */this._sourceTypes)) {\n        this.size(type);\n      }\n    }\n    super.cleanupForCache();\n    this.parser = undefined;\n    this.parserOptions = undefined;\n    this.generator = undefined;\n    this.generatorOptions = undefined;\n  }\n\n  /**\n   * Module should be unsafe cached. Get data that's needed for that.\n   * This data will be passed to restoreFromUnsafeCache later.\n   * @returns {UnsafeCacheData} cached data\n   */\n  getUnsafeCacheData() {\n    const data = /** @type {NormalModuleUnsafeCacheData} */\n    super.getUnsafeCacheData();\n    data.parserOptions = this.parserOptions;\n    data.generatorOptions = this.generatorOptions;\n    return data;\n  }\n\n  /**\n   * restore unsafe cache data\n   * @param {NormalModuleUnsafeCacheData} unsafeCacheData data from getUnsafeCacheData\n   * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n   */\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n\n  /**\n   * restore unsafe cache data\n   * @param {object} unsafeCacheData data from getUnsafeCacheData\n   * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n   */\n  _restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    super._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n    this.parserOptions = unsafeCacheData.parserOptions;\n    this.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n    this.generatorOptions = unsafeCacheData.generatorOptions;\n    this.generator = normalModuleFactory.getGenerator(this.type, this.generatorOptions);\n    // we assume the generator behaves identically and keep cached sourceTypes/Sizes\n  }\n\n  /**\n   * @param {string} context the compilation context\n   * @param {string} name the asset name\n   * @param {string | Buffer} content the content\n   * @param {(string | SourceMap)=} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n  createSourceForAsset(context, name, content, sourceMap, associatedObjectForCache) {\n    if (sourceMap) {\n      if (typeof sourceMap === \"string\" && (this.useSourceMap || this.useSimpleSourceMap)) {\n        return new OriginalSource(content, contextifySourceUrl(context, sourceMap, associatedObjectForCache));\n      }\n      if (this.useSourceMap) {\n        return new SourceMapSource(content, name, contextifySourceMap(context, /** @type {SourceMap} */sourceMap, associatedObjectForCache));\n      }\n    }\n    return new RawSource(content);\n  }\n\n  /**\n   * @private\n   * @template T\n   * @param {ResolverWithOptions} resolver a resolver\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {InputFileSystem} fs file system from reading\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @returns {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext<T>} loader context\n   */\n  _createLoaderContext(resolver, options, compilation, fs, hooks) {\n    const {\n      requestShortener\n    } = compilation.runtimeTemplate;\n    const getCurrentLoaderName = () => {\n      const currentLoader = this.getCurrentLoader(loaderContext);\n      if (!currentLoader) return \"(not in loader scope)\";\n      return requestShortener.shorten(currentLoader.loader);\n    };\n    /**\n     * @returns {ResolveContext} resolve context\n     */\n    const getResolveContext = () => {\n      return {\n        fileDependencies: {\n          add: d => /** @type {TODO} */loaderContext.addDependency(d)\n        },\n        contextDependencies: {\n          add: d => /** @type {TODO} */loaderContext.addContextDependency(d)\n        },\n        missingDependencies: {\n          add: d => /** @type {TODO} */loaderContext.addMissingDependency(d)\n        }\n      };\n    };\n    const getAbsolutify = memoize(() => absolutify.bindCache(compilation.compiler.root));\n    const getAbsolutifyInContext = memoize(() => absolutify.bindContextCache(this.context, compilation.compiler.root));\n    const getContextify = memoize(() => contextify.bindCache(compilation.compiler.root));\n    const getContextifyInContext = memoize(() => contextify.bindContextCache(this.context, compilation.compiler.root));\n    const utils = {\n      /**\n       * @param {string} context context\n       * @param {string} request request\n       * @returns {string} result\n       */\n      absolutify: (context, request) => {\n        return context === this.context ? getAbsolutifyInContext()(request) : getAbsolutify()(context, request);\n      },\n      /**\n       * @param {string} context context\n       * @param {string} request request\n       * @returns {string} result\n       */\n      contextify: (context, request) => {\n        return context === this.context ? getContextifyInContext()(request) : getContextify()(context, request);\n      },\n      /**\n       * @param {(string | typeof import(\"./util/Hash\"))=} type type\n       * @returns {Hash} hash\n       */\n      createHash: type => {\n        return createHash(type || compilation.outputOptions.hashFunction);\n      }\n    };\n    /** @type {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext<T>} */\n    const loaderContext = {\n      version: 2,\n      getOptions: schema => {\n        const loader = this.getCurrentLoader(loaderContext);\n        let {\n          options\n        } = /** @type {LoaderItem} */loader;\n        if (typeof options === \"string\") {\n          if (options.startsWith(\"{\") && options.endsWith(\"}\")) {\n            try {\n              options = parseJson(options);\n            } catch (e) {\n              throw new Error(`Cannot parse string options: ${e.message}`);\n            }\n          } else {\n            options = querystring.parse(options, \"&\", \"=\", {\n              maxKeys: 0\n            });\n          }\n        }\n        if (options === null || options === undefined) {\n          options = {};\n        }\n        if (schema) {\n          let name = \"Loader\";\n          let baseDataPath = \"options\";\n          let match;\n          if (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n            [, name, baseDataPath] = match;\n          }\n          getValidate()(schema, options, {\n            name,\n            baseDataPath\n          });\n        }\n        return options;\n      },\n      emitWarning: warning => {\n        if (!(warning instanceof Error)) {\n          warning = new NonErrorEmittedError(warning);\n        }\n        this.addWarning(new ModuleWarning(warning, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      emitError: error => {\n        if (!(error instanceof Error)) {\n          error = new NonErrorEmittedError(error);\n        }\n        this.addError(new ModuleError(error, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      getLogger: name => {\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        return compilation.getLogger(() => [currentLoader && currentLoader.loader, name, this.identifier()].filter(Boolean).join(\"|\"));\n      },\n      resolve(context, request, callback) {\n        resolver.resolve({}, context, request, getResolveContext(), callback);\n      },\n      getResolve(options) {\n        const child = options ? resolver.withOptions(options) : resolver;\n        return (context, request, callback) => {\n          if (callback) {\n            child.resolve({}, context, request, getResolveContext(), callback);\n          } else {\n            return new Promise((resolve, reject) => {\n              child.resolve({}, context, request, getResolveContext(), (err, result) => {\n                if (err) reject(err);else resolve(result);\n              });\n            });\n          }\n        };\n      },\n      emitFile: (name, content, sourceMap, assetInfo) => {\n        const buildInfo = /** @type {BuildInfo} */this.buildInfo;\n        if (!buildInfo.assets) {\n          buildInfo.assets = Object.create(null);\n          buildInfo.assetsInfo = new Map();\n        }\n        const assets = /** @type {NonNullable<KnownBuildInfo[\"assets\"]>} */\n        buildInfo.assets;\n        const assetsInfo = /** @type {NonNullable<KnownBuildInfo[\"assetsInfo\"]>} */\n        buildInfo.assetsInfo;\n        assets[name] = this.createSourceForAsset( /** @type {string} */options.context, name, content, sourceMap, compilation.compiler.root);\n        assetsInfo.set(name, assetInfo);\n      },\n      addBuildDependency: dep => {\n        const buildInfo = /** @type {BuildInfo} */this.buildInfo;\n        if (buildInfo.buildDependencies === undefined) {\n          buildInfo.buildDependencies = new LazySet();\n        }\n        buildInfo.buildDependencies.add(dep);\n      },\n      utils,\n      rootContext: ( /** @type {string} */options.context),\n      webpack: true,\n      sourceMap: !!this.useSourceMap,\n      mode: options.mode || \"production\",\n      _module: this,\n      _compilation: compilation,\n      _compiler: compilation.compiler,\n      fs: fs\n    };\n    Object.assign(loaderContext, options.loader);\n    hooks.loader.call(loaderContext, this);\n    return loaderContext;\n  }\n\n  // TODO remove `loaderContext` in webpack@6\n  /**\n   * @param {TODO} loaderContext loader context\n   * @param {number} index index\n   * @returns {LoaderItem | null} loader\n   */\n  getCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n    if (this.loaders && this.loaders.length && index < this.loaders.length && index >= 0 && this.loaders[index]) {\n      return this.loaders[index];\n    }\n    return null;\n  }\n\n  /**\n   * @param {string} context the compilation context\n   * @param {string | Buffer} content the content\n   * @param {(string | SourceMapSource)=} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n  createSource(context, content, sourceMap, associatedObjectForCache) {\n    if (Buffer.isBuffer(content)) {\n      return new RawSource(content);\n    }\n\n    // if there is no identifier return raw source\n    if (!this.identifier) {\n      return new RawSource(content);\n    }\n\n    // from here on we assume we have an identifier\n    const identifier = this.identifier();\n    if (this.useSourceMap && sourceMap) {\n      return new SourceMapSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache), contextifySourceMap(context, /** @type {TODO} */sourceMap, associatedObjectForCache));\n    }\n    if (this.useSourceMap || this.useSimpleSourceMap) {\n      return new OriginalSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache));\n    }\n    return new RawSource(content);\n  }\n\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @param {function((WebpackError | null)=): void} callback callback function\n   * @returns {void}\n   */\n  _doBuild(options, compilation, resolver, fs, hooks, callback) {\n    const loaderContext = this._createLoaderContext(resolver, options, compilation, fs, hooks);\n    const processResult = (err, result) => {\n      if (err) {\n        if (!(err instanceof Error)) {\n          err = new NonErrorEmittedError(err);\n        }\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        const error = new ModuleBuildError(err, {\n          from: currentLoader && compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader)\n        });\n        return callback(error);\n      }\n      const source = result[0];\n      const sourceMap = result.length >= 1 ? result[1] : null;\n      const extraInfo = result.length >= 2 ? result[2] : null;\n      if (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n        const currentLoader = this.getCurrentLoader(loaderContext, 0);\n        const err = new Error(`Final loader (${currentLoader ? compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader) : \"unknown\"}) didn't return a Buffer or String`);\n        const error = new ModuleBuildError(err);\n        return callback(error);\n      }\n      this._source = this.createSource( /** @type {string} */options.context, this.binary ? asBuffer(source) : asString(source), sourceMap, compilation.compiler.root);\n      if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n      this._ast = typeof extraInfo === \"object\" && extraInfo !== null && extraInfo.webpackAST !== undefined ? extraInfo.webpackAST : null;\n      return callback();\n    };\n    const buildInfo = /** @type {BuildInfo} */this.buildInfo;\n    buildInfo.fileDependencies = new LazySet();\n    buildInfo.contextDependencies = new LazySet();\n    buildInfo.missingDependencies = new LazySet();\n    buildInfo.cacheable = true;\n    try {\n      hooks.beforeLoaders.call(this.loaders, this, loaderContext);\n    } catch (err) {\n      processResult(err);\n      return;\n    }\n    if (this.loaders.length > 0) {\n      /** @type {BuildInfo} */\n      this.buildInfo.buildDependencies = new LazySet();\n    }\n    runLoaders({\n      resource: this.resource,\n      loaders: this.loaders,\n      context: loaderContext,\n      processResource: (loaderContext, resourcePath, callback) => {\n        const resource = loaderContext.resource;\n        const scheme = getScheme(resource);\n        hooks.readResource.for(scheme).callAsync(loaderContext, (err, result) => {\n          if (err) return callback(err);\n          if (typeof result !== \"string\" && !result) {\n            return callback(new UnhandledSchemeError(scheme, resource));\n          }\n          return callback(null, result);\n        });\n      }\n    }, (err, result) => {\n      // Cleanup loaderContext to avoid leaking memory in ICs\n      loaderContext._compilation = loaderContext._compiler = loaderContext._module =\n      // eslint-disable-next-line no-warning-comments\n      // @ts-ignore\n      loaderContext.fs = undefined;\n      if (!result) {\n        /** @type {BuildInfo} */\n        this.buildInfo.cacheable = false;\n        return processResult(err || new Error(\"No result from loader-runner processing\"), null);\n      }\n      const buildInfo = /** @type {BuildInfo} */this.buildInfo;\n      const fileDependencies = /** @type {NonNullable<KnownBuildInfo[\"fileDependencies\"]>} */\n      buildInfo.fileDependencies;\n      const contextDependencies = /** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n      buildInfo.contextDependencies;\n      const missingDependencies = /** @type {NonNullable<KnownBuildInfo[\"missingDependencies\"]>} */\n      buildInfo.missingDependencies;\n      fileDependencies.addAll(result.fileDependencies);\n      contextDependencies.addAll(result.contextDependencies);\n      missingDependencies.addAll(result.missingDependencies);\n      for (const loader of this.loaders) {\n        const buildDependencies = /** @type {NonNullable<KnownBuildInfo[\"buildDependencies\"]>} */\n        buildInfo.buildDependencies;\n        buildDependencies.add(loader.loader);\n      }\n      buildInfo.cacheable = buildInfo.cacheable && result.cacheable;\n      processResult(err, result.result);\n    });\n  }\n\n  /**\n   * @param {WebpackError} error the error\n   * @returns {void}\n   */\n  markModuleAsErrored(error) {\n    // Restore build meta from successful build to keep importing state\n    this.buildMeta = {\n      ...this._lastSuccessfulBuildMeta\n    };\n    this.error = error;\n    this.addError(error);\n  }\n\n  /**\n   * @param {TODO} rule rule\n   * @param {string} content content\n   * @returns {boolean} result\n   */\n  applyNoParseRule(rule, content) {\n    // must start with \"rule\" if rule is a string\n    if (typeof rule === \"string\") {\n      return content.startsWith(rule);\n    }\n    if (typeof rule === \"function\") {\n      return rule(content);\n    }\n    // we assume rule is a regexp\n    return rule.test(content);\n  }\n\n  /**\n   * @param {TODO} noParseRule no parse rule\n   * @param {string} request request\n   * @returns {boolean} check if module should not be parsed, returns \"true\" if the module should !not! be parsed, returns \"false\" if the module !must! be parsed\n   */\n  shouldPreventParsing(noParseRule, request) {\n    // if no noParseRule exists, return false\n    // the module !must! be parsed.\n    if (!noParseRule) {\n      return false;\n    }\n\n    // we only have one rule to check\n    if (!Array.isArray(noParseRule)) {\n      // returns \"true\" if the module is !not! to be parsed\n      return this.applyNoParseRule(noParseRule, request);\n    }\n    for (let i = 0; i < noParseRule.length; i++) {\n      const rule = noParseRule[i];\n      // early exit on first truthy match\n      // this module is !not! to be parsed\n      if (this.applyNoParseRule(rule, request)) {\n        return true;\n      }\n    }\n    // no match found, so this module !should! be parsed\n    return false;\n  }\n\n  /**\n   * @param {Compilation} compilation compilation\n   * @private\n   */\n  _initBuildHash(compilation) {\n    const hash = createHash(compilation.outputOptions.hashFunction);\n    if (this._source) {\n      hash.update(\"source\");\n      this._source.updateHash(hash);\n    }\n    hash.update(\"meta\");\n    hash.update(JSON.stringify(this.buildMeta));\n    /** @type {BuildInfo} */\n    this.buildInfo.hash = /** @type {string} */hash.digest(\"hex\");\n  }\n\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n  build(options, compilation, resolver, fs, callback) {\n    this._forceBuild = false;\n    this._source = null;\n    if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n    this._sourceTypes = undefined;\n    this._ast = null;\n    this.error = null;\n    this.clearWarningsAndErrors();\n    this.clearDependenciesAndBlocks();\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: false,\n      parsed: true,\n      fileDependencies: undefined,\n      contextDependencies: undefined,\n      missingDependencies: undefined,\n      buildDependencies: undefined,\n      valueDependencies: undefined,\n      hash: undefined,\n      assets: undefined,\n      assetsInfo: undefined\n    };\n    const startTime = compilation.compiler.fsStartTime || Date.now();\n    const hooks = NormalModule.getCompilationHooks(compilation);\n    return this._doBuild(options, compilation, resolver, fs, hooks, err => {\n      // if we have an error mark module as failed and exit\n      if (err) {\n        this.markModuleAsErrored(err);\n        this._initBuildHash(compilation);\n        return callback();\n      }\n\n      /**\n       * @param {Error} e error\n       * @returns {void}\n       */\n      const handleParseError = e => {\n        const source = /** @type {Source} */this._source.source();\n        const loaders = this.loaders.map(item => contextify( /** @type {string} */options.context, item.loader, compilation.compiler.root));\n        const error = new ModuleParseError(source, e, loaders, this.type);\n        this.markModuleAsErrored(error);\n        this._initBuildHash(compilation);\n        return callback();\n      };\n      const handleParseResult = () => {\n        this.dependencies.sort(concatComparators(compareSelect(a => a.loc, compareLocations), keepOriginalOrder(this.dependencies)));\n        this._initBuildHash(compilation);\n        this._lastSuccessfulBuildMeta = /** @type {BuildMeta} */\n        this.buildMeta;\n        return handleBuildDone();\n      };\n      const handleBuildDone = () => {\n        try {\n          hooks.beforeSnapshot.call(this);\n        } catch (err) {\n          this.markModuleAsErrored(err);\n          return callback();\n        }\n        const snapshotOptions = compilation.options.snapshot.module;\n        const {\n          cacheable\n        } = /** @type {BuildInfo} */this.buildInfo;\n        if (!cacheable || !snapshotOptions) {\n          return callback();\n        }\n        // add warning for all non-absolute paths in fileDependencies, etc\n        // This makes it easier to find problems with watching and/or caching\n        /** @type {undefined | Set<string>} */\n        let nonAbsoluteDependencies = undefined;\n        /**\n         * @param {LazySet<string>} deps deps\n         */\n        const checkDependencies = deps => {\n          for (const dep of deps) {\n            if (!ABSOLUTE_PATH_REGEX.test(dep)) {\n              if (nonAbsoluteDependencies === undefined) nonAbsoluteDependencies = new Set();\n              nonAbsoluteDependencies.add(dep);\n              deps.delete(dep);\n              try {\n                const depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n                const absolute = join(compilation.fileSystemInfo.fs, this.context, depWithoutGlob);\n                if (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n                  (depWithoutGlob !== dep ? ( /** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n\n                  /** @type {BuildInfo} */this.buildInfo.contextDependencies) : deps).add(absolute);\n                }\n              } catch (e) {\n                // ignore\n              }\n            }\n          }\n        };\n        const buildInfo = /** @type {BuildInfo} */this.buildInfo;\n        const fileDependencies = /** @type {NonNullable<KnownBuildInfo[\"fileDependencies\"]>} */\n        buildInfo.fileDependencies;\n        const contextDependencies = /** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n        buildInfo.contextDependencies;\n        const missingDependencies = /** @type {NonNullable<KnownBuildInfo[\"missingDependencies\"]>} */\n        buildInfo.missingDependencies;\n        checkDependencies(fileDependencies);\n        checkDependencies(missingDependencies);\n        checkDependencies(contextDependencies);\n        if (nonAbsoluteDependencies !== undefined) {\n          const InvalidDependenciesModuleWarning = getInvalidDependenciesModuleWarning();\n          this.addWarning(new InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies));\n        }\n        // convert file/context/missingDependencies into filesystem snapshot\n        compilation.fileSystemInfo.createSnapshot(startTime, fileDependencies, contextDependencies, missingDependencies, snapshotOptions, (err, snapshot) => {\n          if (err) {\n            this.markModuleAsErrored(err);\n            return;\n          }\n          buildInfo.fileDependencies = undefined;\n          buildInfo.contextDependencies = undefined;\n          buildInfo.missingDependencies = undefined;\n          buildInfo.snapshot = snapshot;\n          return callback();\n        });\n      };\n      try {\n        hooks.beforeParse.call(this);\n      } catch (err) {\n        this.markModuleAsErrored(err);\n        this._initBuildHash(compilation);\n        return callback();\n      }\n\n      // check if this module should !not! be parsed.\n      // if so, exit here;\n      const noParseRule = options.module && options.module.noParse;\n      if (this.shouldPreventParsing(noParseRule, this.request)) {\n        // We assume that we need module and exports\n        /** @type {BuildInfo} */\n        this.buildInfo.parsed = false;\n        this._initBuildHash(compilation);\n        return handleBuildDone();\n      }\n      try {\n        const source = /** @type {Source} */this._source.source();\n        /** @type {Parser} */\n        this.parser.parse(this._ast || source, {\n          source,\n          current: this,\n          module: this,\n          compilation: compilation,\n          options: options\n        });\n      } catch (e) {\n        handleParseError( /** @type {Error} */e);\n        return;\n      }\n      handleParseResult();\n    });\n  }\n\n  /**\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n  getConcatenationBailoutReason(context) {\n    return /** @type {Generator} */this.generator.getConcatenationBailoutReason(this, context);\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n   */\n  getSideEffectsConnectionState(moduleGraph) {\n    if (this.factoryMeta !== undefined) {\n      if (this.factoryMeta.sideEffectFree) return false;\n      if (this.factoryMeta.sideEffectFree === false) return true;\n    }\n    if (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n      if (this._isEvaluatingSideEffects) return ModuleGraphConnection.CIRCULAR_CONNECTION;\n      this._isEvaluatingSideEffects = true;\n      /** @type {ConnectionState} */\n      let current = false;\n      for (const dep of this.dependencies) {\n        const state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n        if (state === true) {\n          if (this._addedSideEffectsBailout === undefined ? (this._addedSideEffectsBailout = new WeakSet(), true) : !this._addedSideEffectsBailout.has(moduleGraph)) {\n            this._addedSideEffectsBailout.add(moduleGraph);\n            moduleGraph.getOptimizationBailout(this).push(() => `Dependency (${dep.type}) with side effects at ${formatLocation(dep.loc)}`);\n          }\n          this._isEvaluatingSideEffects = false;\n          return true;\n        } else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n          current = ModuleGraphConnection.addConnectionStates(current, state);\n        }\n      }\n      this._isEvaluatingSideEffects = false;\n      // When caching is implemented here, make sure to not cache when\n      // at least one circular connection was in the loop above\n      return current;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @returns {SourceTypes} types available (do not mutate)\n   */\n  getSourceTypes() {\n    if (this._sourceTypes === undefined) {\n      this._sourceTypes = /** @type {Generator} */this.generator.getTypes(this);\n    }\n    return this._sourceTypes;\n  }\n\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n  codeGeneration({\n    dependencyTemplates,\n    runtimeTemplate,\n    moduleGraph,\n    chunkGraph,\n    runtime,\n    runtimes,\n    concatenationScope,\n    codeGenerationResults,\n    sourceTypes\n  }) {\n    /** @type {Set<string>} */\n    const runtimeRequirements = new Set();\n    const {\n      parsed\n    } = /** @type {BuildInfo} */this.buildInfo;\n    if (!parsed) {\n      runtimeRequirements.add(RuntimeGlobals.module);\n      runtimeRequirements.add(RuntimeGlobals.exports);\n      runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n    }\n\n    /** @type {function(): Map<string, any>} */\n    const getData = () => {\n      return this._codeGeneratorData;\n    };\n    const sources = new Map();\n    for (const type of sourceTypes || chunkGraph.getModuleSourceTypes(this)) {\n      const source = this.error ? new RawSource(\"throw new Error(\" + JSON.stringify(this.error.message) + \");\") : /** @type {Generator} */this.generator.generate(this, {\n        dependencyTemplates,\n        runtimeTemplate,\n        moduleGraph,\n        chunkGraph,\n        runtimeRequirements,\n        runtime,\n        runtimes,\n        concatenationScope,\n        codeGenerationResults,\n        getData,\n        type\n      });\n      if (source) {\n        sources.set(type, new CachedSource(source));\n      }\n    }\n\n    /** @type {CodeGenerationResult} */\n    const resultEntry = {\n      sources,\n      runtimeRequirements,\n      data: this._codeGeneratorData\n    };\n    return resultEntry;\n  }\n\n  /**\n   * @returns {Source | null} the original source for the module before webpack transformation\n   */\n  originalSource() {\n    return this._source;\n  }\n\n  /**\n   * @returns {void}\n   */\n  invalidateBuild() {\n    this._forceBuild = true;\n  }\n\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n  needBuild(context, callback) {\n    const {\n      fileSystemInfo,\n      compilation,\n      valueCacheVersions\n    } = context;\n    // build if enforced\n    if (this._forceBuild) return callback(null, true);\n\n    // always try to build in case of an error\n    if (this.error) return callback(null, true);\n    const {\n      cacheable,\n      snapshot,\n      valueDependencies\n    } = /** @type {BuildInfo} */this.buildInfo;\n\n    // always build when module is not cacheable\n    if (!cacheable) return callback(null, true);\n\n    // build when there is no snapshot to check\n    if (!snapshot) return callback(null, true);\n\n    // build when valueDependencies have changed\n    if (valueDependencies) {\n      if (!valueCacheVersions) return callback(null, true);\n      for (const [key, value] of valueDependencies) {\n        if (value === undefined) return callback(null, true);\n        const current = valueCacheVersions.get(key);\n        if (value !== current && (typeof value === \"string\" || typeof current === \"string\" || current === undefined || !isSubset(value, current))) {\n          return callback(null, true);\n        }\n      }\n    }\n\n    // check snapshot for validity\n    fileSystemInfo.checkSnapshotValid(snapshot, (err, valid) => {\n      if (err) return callback(err);\n      if (!valid) return callback(null, true);\n      const hooks = NormalModule.getCompilationHooks(compilation);\n      hooks.needBuild.callAsync(this, context, (err, needBuild) => {\n        if (err) {\n          return callback(HookWebpackError.makeWebpackError(err, \"NormalModule.getCompilationHooks().needBuild\"));\n        }\n        callback(null, !!needBuild);\n      });\n    });\n  }\n\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n  size(type) {\n    const cachedSize = this._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n    if (cachedSize !== undefined) {\n      return cachedSize;\n    }\n    const size = Math.max(1, /** @type {Generator} */this.generator.getSize(this, type));\n    if (this._sourceSizes === undefined) {\n      this._sourceSizes = new Map();\n    }\n    this._sourceSizes.set(type, size);\n    return size;\n  }\n\n  /**\n   * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n   * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n   * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n   * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n   */\n  addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies) {\n    const {\n      snapshot,\n      buildDependencies: buildDeps\n    } = /** @type {BuildInfo} */this.buildInfo;\n    if (snapshot) {\n      fileDependencies.addAll(snapshot.getFileIterable());\n      contextDependencies.addAll(snapshot.getContextIterable());\n      missingDependencies.addAll(snapshot.getMissingIterable());\n    } else {\n      const {\n        fileDependencies: fileDeps,\n        contextDependencies: contextDeps,\n        missingDependencies: missingDeps\n      } = /** @type {BuildInfo} */this.buildInfo;\n      if (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n      if (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n      if (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n    }\n    if (buildDeps !== undefined) {\n      buildDependencies.addAll(buildDeps);\n    }\n  }\n\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n  updateHash(hash, context) {\n    hash.update( /** @type {BuildInfo} */this.buildInfo.hash);\n    this.generator.updateHash(hash, {\n      module: this,\n      ...context\n    });\n    super.updateHash(hash, context);\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    // deserialize\n    write(this._source);\n    write(this.error);\n    write(this._lastSuccessfulBuildMeta);\n    write(this._forceBuild);\n    write(this._codeGeneratorData);\n    super.serialize(context);\n  }\n  static deserialize(context) {\n    const obj = new NormalModule({\n      // will be deserialized by Module\n      layer: null,\n      type: \"\",\n      // will be filled by updateCacheModule\n      resource: \"\",\n      context: \"\",\n      request: null,\n      userRequest: null,\n      rawRequest: null,\n      loaders: null,\n      matchResource: null,\n      parser: null,\n      parserOptions: null,\n      generator: null,\n      generatorOptions: null,\n      resolveOptions: null\n    });\n    obj.deserialize(context);\n    return obj;\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this._source = read();\n    this.error = read();\n    this._lastSuccessfulBuildMeta = read();\n    this._forceBuild = read();\n    this._codeGeneratorData = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\nmodule.exports = NormalModule;","map":{"version":3,"names":["parseJson","require","getContext","runLoaders","querystring","HookMap","SyncHook","AsyncSeriesBailHook","CachedSource","OriginalSource","RawSource","SourceMapSource","Compilation","HookWebpackError","Module","ModuleBuildError","ModuleError","ModuleGraphConnection","ModuleParseError","JAVASCRIPT_MODULE_TYPE_AUTO","ModuleWarning","RuntimeGlobals","UnhandledSchemeError","WebpackError","formatLocation","LazySet","isSubset","getScheme","compareLocations","concatComparators","compareSelect","keepOriginalOrder","createHash","createFakeHook","join","contextify","absolutify","makePathsRelative","makeSerializable","memoize","getInvalidDependenciesModuleWarning","getValidate","validate","ABSOLUTE_PATH_REGEX","contextifySourceUrl","context","source","associatedObjectForCache","startsWith","contextifySourceMap","sourceMap","Array","isArray","sources","sourceRoot","mapper","endsWith","slice","newSources","map","file","undefined","asString","input","Buffer","isBuffer","toString","asBuffer","from","NonErrorEmittedError","constructor","error","name","message","compilationHooksMap","WeakMap","NormalModule","getCompilationHooks","compilation","TypeError","hooks","get","loader","beforeLoaders","beforeParse","beforeSnapshot","readResourceForScheme","scheme","hook","readResource","for","tap","options","fn","loaderContext","resource","_module","tapAsync","callback","tapPromise","needBuild","set","layer","type","request","userRequest","rawRequest","loaders","resourceResolveData","matchResource","parser","parserOptions","generator","generatorOptions","resolveOptions","binary","test","_source","_sourceSizes","_sourceTypes","_lastSuccessfulBuildMeta","_forceBuild","_isEvaluatingSideEffects","_addedSideEffectsBailout","_codeGeneratorData","Map","identifier","readableIdentifier","requestShortener","shorten","libIdent","ident","nameForCondition","idx","indexOf","updateCacheModule","module","m","cleanupForCache","buildInfo","getSourceTypes","size","getUnsafeCacheData","data","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getParser","getGenerator","createSourceForAsset","content","useSourceMap","useSimpleSourceMap","_createLoaderContext","resolver","fs","runtimeTemplate","getCurrentLoaderName","currentLoader","getCurrentLoader","getResolveContext","fileDependencies","add","d","addDependency","contextDependencies","addContextDependency","missingDependencies","addMissingDependency","getAbsolutify","bindCache","compiler","root","getAbsolutifyInContext","bindContextCache","getContextify","getContextifyInContext","utils","outputOptions","hashFunction","version","getOptions","schema","e","Error","parse","maxKeys","baseDataPath","match","title","exec","emitWarning","warning","addWarning","emitError","addError","getLogger","filter","Boolean","resolve","getResolve","child","withOptions","Promise","reject","err","result","emitFile","assetInfo","assets","Object","create","assetsInfo","addBuildDependency","dep","buildDependencies","rootContext","webpack","mode","_compilation","_compiler","assign","call","index","loaderIndex","length","createSource","_doBuild","processResult","extraInfo","clear","_ast","webpackAST","cacheable","processResource","resourcePath","callAsync","addAll","markModuleAsErrored","buildMeta","applyNoParseRule","rule","shouldPreventParsing","noParseRule","i","_initBuildHash","hash","update","updateHash","JSON","stringify","digest","build","clearWarningsAndErrors","clearDependenciesAndBlocks","parsed","valueDependencies","startTime","fsStartTime","Date","now","handleParseError","item","handleParseResult","dependencies","sort","a","loc","handleBuildDone","snapshotOptions","snapshot","nonAbsoluteDependencies","checkDependencies","deps","Set","delete","depWithoutGlob","replace","absolute","fileSystemInfo","InvalidDependenciesModuleWarning","createSnapshot","noParse","current","getConcatenationBailoutReason","getSideEffectsConnectionState","moduleGraph","factoryMeta","sideEffectFree","CIRCULAR_CONNECTION","state","getModuleEvaluationSideEffectsState","WeakSet","has","getOptimizationBailout","push","addConnectionStates","getTypes","codeGeneration","dependencyTemplates","chunkGraph","runtime","runtimes","concatenationScope","codeGenerationResults","sourceTypes","runtimeRequirements","exports","thisAsExports","getData","getModuleSourceTypes","generate","resultEntry","originalSource","invalidateBuild","valueCacheVersions","key","value","checkSnapshotValid","valid","makeWebpackError","cachedSize","Math","max","getSize","addCacheDependencies","buildDeps","getFileIterable","getContextIterable","getMissingIterable","fileDeps","contextDeps","missingDeps","serialize","write","deserialize","obj","read"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/NormalModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst parseJson = require(\"json-parse-even-better-errors\");\nconst { getContext, runLoaders } = require(\"loader-runner\");\nconst querystring = require(\"querystring\");\nconst { HookMap, SyncHook, AsyncSeriesBailHook } = require(\"tapable\");\nconst {\n\tCachedSource,\n\tOriginalSource,\n\tRawSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"./Compilation\");\nconst HookWebpackError = require(\"./HookWebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst { JAVASCRIPT_MODULE_TYPE_AUTO } = require(\"./ModuleTypeConstants\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\nconst WebpackError = require(\"./WebpackError\");\nconst formatLocation = require(\"./formatLocation\");\nconst LazySet = require(\"./util/LazySet\");\nconst { isSubset } = require(\"./util/SetHelpers\");\nconst { getScheme } = require(\"./util/URLAbsoluteSpecifier\");\nconst {\n\tcompareLocations,\n\tconcatComparators,\n\tcompareSelect,\n\tkeepOriginalOrder\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst { createFakeHook } = require(\"./util/deprecation\");\nconst { join } = require(\"./util/fs\");\nconst {\n\tcontextify,\n\tabsolutify,\n\tmakePathsRelative\n} = require(\"./util/identifier\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Generator\")} Generator */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").KnownBuildInfo} KnownBuildInfo */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"./Module\").UnsafeCacheData} UnsafeCacheData */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"./ModuleTypeConstants\").JavaScriptModuleTypes} JavaScriptModuleTypes */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {{[k: string]: any}} ParserOptions */\n/** @typedef {{[k: string]: any}} GeneratorOptions */\n\n/** @typedef {UnsafeCacheData & { parser: undefined | Parser, parserOptions: undefined | ParserOptions, generator: undefined | Generator, generatorOptions: undefined | GeneratorOptions }} NormalModuleUnsafeCacheData */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\nconst getInvalidDependenciesModuleWarning = memoize(() =>\n\trequire(\"./InvalidDependenciesModuleWarning\")\n);\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\n\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n\tif (source.startsWith(\"webpack://\")) return source;\n\treturn `webpack://${makePathsRelative(\n\t\tcontext,\n\t\tsource,\n\t\tassociatedObjectForCache\n\t)}`;\n};\n\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n\tif (!Array.isArray(sourceMap.sources)) return sourceMap;\n\tconst { sourceRoot } = sourceMap;\n\t/** @type {function(string): string} */\n\tconst mapper = !sourceRoot\n\t\t? source => source\n\t\t: sourceRoot.endsWith(\"/\")\n\t\t\t? source =>\n\t\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t\t? `${sourceRoot.slice(0, -1)}${source}`\n\t\t\t\t\t\t: `${sourceRoot}${source}`\n\t\t\t: source =>\n\t\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t\t? `${sourceRoot}${source}`\n\t\t\t\t\t\t: `${sourceRoot}/${source}`;\n\tconst newSources = sourceMap.sources.map(source =>\n\t\tcontextifySourceUrl(context, mapper(source), associatedObjectForCache)\n\t);\n\treturn {\n\t\t...sourceMap,\n\t\tfile: \"x\",\n\t\tsourceRoot: undefined,\n\t\tsources: newSources\n\t};\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\nconst asString = input => {\n\tif (Buffer.isBuffer(input)) {\n\t\treturn input.toString(\"utf-8\");\n\t}\n\treturn input;\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\nconst asBuffer = input => {\n\tif (!Buffer.isBuffer(input)) {\n\t\treturn Buffer.from(input, \"utf-8\");\n\t}\n\treturn input;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n\tconstructor(error) {\n\t\tsuper();\n\n\t\tthis.name = \"NonErrorEmittedError\";\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\n\t}\n}\n\nmakeSerializable(\n\tNonErrorEmittedError,\n\t\"webpack/lib/NormalModule\",\n\t\"NonErrorEmittedError\"\n);\n\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {JavaScriptModuleTypes | \"\"} type module type. When deserializing, this is set to an empty string \"\".\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {ParserOptions=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {GeneratorOptions=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass NormalModule extends Module {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {NormalModuleCompilationHooks} the attached hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tloader: new SyncHook([\"loaderContext\", \"module\"]),\n\t\t\t\tbeforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n\t\t\t\tbeforeParse: new SyncHook([\"module\"]),\n\t\t\t\tbeforeSnapshot: new SyncHook([\"module\"]),\n\t\t\t\t// TODO webpack 6 deprecate\n\t\t\t\treadResourceForScheme: new HookMap(scheme => {\n\t\t\t\t\tconst hook = hooks.readResource.for(scheme);\n\t\t\t\t\treturn createFakeHook(\n\t\t\t\t\t\t/** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */ ({\n\t\t\t\t\t\t\ttap: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tap(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapAsync: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapAsync(options, (loaderContext, callback) =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module, callback)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapPromise: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapPromise(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treadResource: new HookMap(\n\t\t\t\t\t() => new AsyncSeriesBailHook([\"loaderContext\"])\n\t\t\t\t),\n\t\t\t\tneedBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(\n\t\t\t\tcompilation,\n\t\t\t\t/** @type {NormalModuleCompilationHooks} */ (hooks)\n\t\t\t);\n\t\t}\n\t\treturn /** @type {NormalModuleCompilationHooks} */ (hooks);\n\t}\n\n\t/**\n\t * @param {NormalModuleCreateData} options options object\n\t */\n\tconstructor({\n\t\tlayer,\n\t\ttype,\n\t\trequest,\n\t\tuserRequest,\n\t\trawRequest,\n\t\tloaders,\n\t\tresource,\n\t\tresourceResolveData,\n\t\tcontext,\n\t\tmatchResource,\n\t\tparser,\n\t\tparserOptions,\n\t\tgenerator,\n\t\tgeneratorOptions,\n\t\tresolveOptions\n\t}) {\n\t\tsuper(type, context || getContext(resource), layer);\n\n\t\t// Info from Factory\n\t\t/** @type {string} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t\t/** @type {string} */\n\t\tthis.rawRequest = rawRequest;\n\t\t/** @type {boolean} */\n\t\tthis.binary = /^(asset|webassembly)\\b/.test(type);\n\t\t/** @type {undefined | Parser} */\n\t\tthis.parser = parser;\n\t\t/** @type {undefined | ParserOptions} */\n\t\tthis.parserOptions = parserOptions;\n\t\t/** @type {undefined | Generator} */\n\t\tthis.generator = generator;\n\t\t/** @type {undefined | GeneratorOptions} */\n\t\tthis.generatorOptions = generatorOptions;\n\t\t/** @type {string} */\n\t\tthis.resource = resource;\n\t\tthis.resourceResolveData = resourceResolveData;\n\t\t/** @type {string | undefined} */\n\t\tthis.matchResource = matchResource;\n\t\t/** @type {LoaderItem[]} */\n\t\tthis.loaders = loaders;\n\t\tif (resolveOptions !== undefined) {\n\t\t\t// already declared in super class\n\t\t\tthis.resolveOptions = resolveOptions;\n\t\t}\n\n\t\t// Info from Build\n\t\t/** @type {WebpackError | null} */\n\t\tthis.error = null;\n\t\t/**\n\t\t * @private\n\t\t * @type {Source | null}\n\t\t */\n\t\tthis._source = null;\n\t\t/**\n\t\t * @private\n\t\t * @type {Map<string, number> | undefined}\n\t\t **/\n\t\tthis._sourceSizes = undefined;\n\t\t/**\n\t\t * @private\n\t\t * @type {undefined | SourceTypes}\n\t\t **/\n\t\tthis._sourceTypes = undefined;\n\n\t\t// Cache\n\t\tthis._lastSuccessfulBuildMeta = {};\n\t\tthis._forceBuild = true;\n\t\tthis._isEvaluatingSideEffects = false;\n\t\t/** @type {WeakSet<ModuleGraph> | undefined} */\n\t\tthis._addedSideEffectsBailout = undefined;\n\t\t/** @type {Map<string, any>} */\n\t\tthis._codeGeneratorData = new Map();\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\tif (this.layer === null) {\n\t\t\tif (this.type === JAVASCRIPT_MODULE_TYPE_AUTO) {\n\t\t\t\treturn this.request;\n\t\t\t} else {\n\t\t\t\treturn `${this.type}|${this.request}`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${this.type}|${this.request}|${this.layer}`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.userRequest);\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\tlet ident = contextify(\n\t\t\toptions.context,\n\t\t\tthis.userRequest,\n\t\t\toptions.associatedObjectForCache\n\t\t);\n\t\tif (this.layer) ident = `(${this.layer})/${ident}`;\n\t\treturn ident;\n\t}\n\n\t/**\n\t * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n\t */\n\tnameForCondition() {\n\t\tconst resource = this.matchResource || this.resource;\n\t\tconst idx = resource.indexOf(\"?\");\n\t\tif (idx >= 0) return resource.slice(0, idx);\n\t\treturn resource;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Update the (cached) module with\n\t * the fresh module from the factory. Usually updates internal references\n\t * and properties.\n\t * @param {Module} module fresh module\n\t * @returns {void}\n\t */\n\tupdateCacheModule(module) {\n\t\tsuper.updateCacheModule(module);\n\t\tconst m = /** @type {NormalModule} */ (module);\n\t\tthis.binary = m.binary;\n\t\tthis.request = m.request;\n\t\tthis.userRequest = m.userRequest;\n\t\tthis.rawRequest = m.rawRequest;\n\t\tthis.parser = m.parser;\n\t\tthis.parserOptions = m.parserOptions;\n\t\tthis.generator = m.generator;\n\t\tthis.generatorOptions = m.generatorOptions;\n\t\tthis.resource = m.resource;\n\t\tthis.resourceResolveData = m.resourceResolveData;\n\t\tthis.context = m.context;\n\t\tthis.matchResource = m.matchResource;\n\t\tthis.loaders = m.loaders;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n\t */\n\tcleanupForCache() {\n\t\t// Make sure to cache types and sizes before cleanup when this module has been built\n\t\t// They are accessed by the stats and we don't want them to crash after cleanup\n\t\t// TODO reconsider this for webpack 6\n\t\tif (this.buildInfo) {\n\t\t\tif (this._sourceTypes === undefined) this.getSourceTypes();\n\t\t\tfor (const type of /** @type {SourceTypes} */ (this._sourceTypes)) {\n\t\t\t\tthis.size(type);\n\t\t\t}\n\t\t}\n\t\tsuper.cleanupForCache();\n\t\tthis.parser = undefined;\n\t\tthis.parserOptions = undefined;\n\t\tthis.generator = undefined;\n\t\tthis.generatorOptions = undefined;\n\t}\n\n\t/**\n\t * Module should be unsafe cached. Get data that's needed for that.\n\t * This data will be passed to restoreFromUnsafeCache later.\n\t * @returns {UnsafeCacheData} cached data\n\t */\n\tgetUnsafeCacheData() {\n\t\tconst data =\n\t\t\t/** @type {NormalModuleUnsafeCacheData} */\n\t\t\t(super.getUnsafeCacheData());\n\t\tdata.parserOptions = this.parserOptions;\n\t\tdata.generatorOptions = this.generatorOptions;\n\t\treturn data;\n\t}\n\n\t/**\n\t * restore unsafe cache data\n\t * @param {NormalModuleUnsafeCacheData} unsafeCacheData data from getUnsafeCacheData\n\t * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n\t */\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * restore unsafe cache data\n\t * @param {object} unsafeCacheData data from getUnsafeCacheData\n\t * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n\t */\n\t_restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tsuper._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t\tthis.parserOptions = unsafeCacheData.parserOptions;\n\t\tthis.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n\t\tthis.generatorOptions = unsafeCacheData.generatorOptions;\n\t\tthis.generator = normalModuleFactory.getGenerator(\n\t\t\tthis.type,\n\t\t\tthis.generatorOptions\n\t\t);\n\t\t// we assume the generator behaves identically and keep cached sourceTypes/Sizes\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string} name the asset name\n\t * @param {string | Buffer} content the content\n\t * @param {(string | SourceMap)=} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSourceForAsset(\n\t\tcontext,\n\t\tname,\n\t\tcontent,\n\t\tsourceMap,\n\t\tassociatedObjectForCache\n\t) {\n\t\tif (sourceMap) {\n\t\t\tif (\n\t\t\t\ttypeof sourceMap === \"string\" &&\n\t\t\t\t(this.useSourceMap || this.useSimpleSourceMap)\n\t\t\t) {\n\t\t\t\treturn new OriginalSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tcontextifySourceUrl(context, sourceMap, associatedObjectForCache)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.useSourceMap) {\n\t\t\t\treturn new SourceMapSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tname,\n\t\t\t\t\tcontextifySourceMap(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t/** @type {SourceMap} */ (sourceMap),\n\t\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @private\n\t * @template T\n\t * @param {ResolverWithOptions} resolver a resolver\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {InputFileSystem} fs file system from reading\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @returns {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext<T>} loader context\n\t */\n\t_createLoaderContext(resolver, options, compilation, fs, hooks) {\n\t\tconst { requestShortener } = compilation.runtimeTemplate;\n\t\tconst getCurrentLoaderName = () => {\n\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\tif (!currentLoader) return \"(not in loader scope)\";\n\t\t\treturn requestShortener.shorten(currentLoader.loader);\n\t\t};\n\t\t/**\n\t\t * @returns {ResolveContext} resolve context\n\t\t */\n\t\tconst getResolveContext = () => {\n\t\t\treturn {\n\t\t\t\tfileDependencies: {\n\t\t\t\t\tadd: d => /** @type {TODO} */ (loaderContext).addDependency(d)\n\t\t\t\t},\n\t\t\t\tcontextDependencies: {\n\t\t\t\t\tadd: d => /** @type {TODO} */ (loaderContext).addContextDependency(d)\n\t\t\t\t},\n\t\t\t\tmissingDependencies: {\n\t\t\t\t\tadd: d => /** @type {TODO} */ (loaderContext).addMissingDependency(d)\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst getAbsolutify = memoize(() =>\n\t\t\tabsolutify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getAbsolutifyInContext = memoize(() =>\n\t\t\tabsolutify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst getContextify = memoize(() =>\n\t\t\tcontextify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getContextifyInContext = memoize(() =>\n\t\t\tcontextify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst utils = {\n\t\t\t/**\n\t\t\t * @param {string} context context\n\t\t\t * @param {string} request request\n\t\t\t * @returns {string} result\n\t\t\t */\n\t\t\tabsolutify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getAbsolutifyInContext()(request)\n\t\t\t\t\t: getAbsolutify()(context, request);\n\t\t\t},\n\t\t\t/**\n\t\t\t * @param {string} context context\n\t\t\t * @param {string} request request\n\t\t\t * @returns {string} result\n\t\t\t */\n\t\t\tcontextify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getContextifyInContext()(request)\n\t\t\t\t\t: getContextify()(context, request);\n\t\t\t},\n\t\t\t/**\n\t\t\t * @param {(string | typeof import(\"./util/Hash\"))=} type type\n\t\t\t * @returns {Hash} hash\n\t\t\t */\n\t\t\tcreateHash: type => {\n\t\t\t\treturn createHash(type || compilation.outputOptions.hashFunction);\n\t\t\t}\n\t\t};\n\t\t/** @type {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext<T>} */\n\t\tconst loaderContext = {\n\t\t\tversion: 2,\n\t\t\tgetOptions: schema => {\n\t\t\t\tconst loader = this.getCurrentLoader(loaderContext);\n\n\t\t\t\tlet { options } = /** @type {LoaderItem} */ (loader);\n\n\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\tif (options.startsWith(\"{\") && options.endsWith(\"}\")) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toptions = parseJson(options);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new Error(`Cannot parse string options: ${e.message}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions = querystring.parse(options, \"&\", \"=\", {\n\t\t\t\t\t\t\tmaxKeys: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options === null || options === undefined) {\n\t\t\t\t\toptions = {};\n\t\t\t\t}\n\n\t\t\t\tif (schema) {\n\t\t\t\t\tlet name = \"Loader\";\n\t\t\t\t\tlet baseDataPath = \"options\";\n\t\t\t\t\tlet match;\n\t\t\t\t\tif (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n\t\t\t\t\t\t[, name, baseDataPath] = match;\n\t\t\t\t\t}\n\t\t\t\t\tgetValidate()(schema, options, {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tbaseDataPath\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t},\n\t\t\temitWarning: warning => {\n\t\t\t\tif (!(warning instanceof Error)) {\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\n\t\t\t\t}\n\t\t\t\tthis.addWarning(\n\t\t\t\t\tnew ModuleWarning(warning, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\temitError: error => {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\terror = new NonErrorEmittedError(error);\n\t\t\t\t}\n\t\t\t\tthis.addError(\n\t\t\t\t\tnew ModuleError(error, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLogger: name => {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\treturn compilation.getLogger(() =>\n\t\t\t\t\t[currentLoader && currentLoader.loader, name, this.identifier()]\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t.join(\"|\")\n\t\t\t\t);\n\t\t\t},\n\t\t\tresolve(context, request, callback) {\n\t\t\t\tresolver.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t},\n\t\t\tgetResolve(options) {\n\t\t\t\tconst child = options ? resolver.withOptions(options) : resolver;\n\t\t\t\treturn (context, request, callback) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tchild.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchild.resolve(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tgetResolveContext(),\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\temitFile: (name, content, sourceMap, assetInfo) => {\n\t\t\t\tconst buildInfo = /** @type {BuildInfo} */ (this.buildInfo);\n\n\t\t\t\tif (!buildInfo.assets) {\n\t\t\t\t\tbuildInfo.assets = Object.create(null);\n\t\t\t\t\tbuildInfo.assetsInfo = new Map();\n\t\t\t\t}\n\n\t\t\t\tconst assets =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"assets\"]>} */\n\t\t\t\t\t(buildInfo.assets);\n\t\t\t\tconst assetsInfo =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"assetsInfo\"]>} */\n\t\t\t\t\t(buildInfo.assetsInfo);\n\n\t\t\t\tassets[name] = this.createSourceForAsset(\n\t\t\t\t\t/** @type {string} */ (options.context),\n\t\t\t\t\tname,\n\t\t\t\t\tcontent,\n\t\t\t\t\tsourceMap,\n\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t);\n\t\t\t\tassetsInfo.set(name, assetInfo);\n\t\t\t},\n\t\t\taddBuildDependency: dep => {\n\t\t\t\tconst buildInfo = /** @type {BuildInfo} */ (this.buildInfo);\n\n\t\t\t\tif (buildInfo.buildDependencies === undefined) {\n\t\t\t\t\tbuildInfo.buildDependencies = new LazySet();\n\t\t\t\t}\n\t\t\t\tbuildInfo.buildDependencies.add(dep);\n\t\t\t},\n\t\t\tutils,\n\t\t\trootContext: /** @type {string} */ (options.context),\n\t\t\twebpack: true,\n\t\t\tsourceMap: !!this.useSourceMap,\n\t\t\tmode: options.mode || \"production\",\n\t\t\t_module: this,\n\t\t\t_compilation: compilation,\n\t\t\t_compiler: compilation.compiler,\n\t\t\tfs: fs\n\t\t};\n\n\t\tObject.assign(loaderContext, options.loader);\n\n\t\thooks.loader.call(loaderContext, this);\n\n\t\treturn loaderContext;\n\t}\n\n\t// TODO remove `loaderContext` in webpack@6\n\t/**\n\t * @param {TODO} loaderContext loader context\n\t * @param {number} index index\n\t * @returns {LoaderItem | null} loader\n\t */\n\tgetCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n\t\tif (\n\t\t\tthis.loaders &&\n\t\t\tthis.loaders.length &&\n\t\t\tindex < this.loaders.length &&\n\t\t\tindex >= 0 &&\n\t\t\tthis.loaders[index]\n\t\t) {\n\t\t\treturn this.loaders[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string | Buffer} content the content\n\t * @param {(string | SourceMapSource)=} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSource(context, content, sourceMap, associatedObjectForCache) {\n\t\tif (Buffer.isBuffer(content)) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// if there is no identifier return raw source\n\t\tif (!this.identifier) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// from here on we assume we have an identifier\n\t\tconst identifier = this.identifier();\n\n\t\tif (this.useSourceMap && sourceMap) {\n\t\t\treturn new SourceMapSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache),\n\t\t\t\tcontextifySourceMap(\n\t\t\t\t\tcontext,\n\t\t\t\t\t/** @type {TODO} */ (sourceMap),\n\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\treturn new OriginalSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache)\n\t\t\t);\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @param {function((WebpackError | null)=): void} callback callback function\n\t * @returns {void}\n\t */\n\t_doBuild(options, compilation, resolver, fs, hooks, callback) {\n\t\tconst loaderContext = this._createLoaderContext(\n\t\t\tresolver,\n\t\t\toptions,\n\t\t\tcompilation,\n\t\t\tfs,\n\t\t\thooks\n\t\t);\n\n\t\tconst processResult = (err, result) => {\n\t\t\tif (err) {\n\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\terr = new NonErrorEmittedError(err);\n\t\t\t\t}\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\tconst error = new ModuleBuildError(err, {\n\t\t\t\t\tfrom:\n\t\t\t\t\t\tcurrentLoader &&\n\t\t\t\t\t\tcompilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tconst source = result[0];\n\t\t\tconst sourceMap = result.length >= 1 ? result[1] : null;\n\t\t\tconst extraInfo = result.length >= 2 ? result[2] : null;\n\n\t\t\tif (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext, 0);\n\t\t\t\tconst err = new Error(\n\t\t\t\t\t`Final loader (${\n\t\t\t\t\t\tcurrentLoader\n\t\t\t\t\t\t\t? compilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: \"unknown\"\n\t\t\t\t\t}) didn't return a Buffer or String`\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleBuildError(err);\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tthis._source = this.createSource(\n\t\t\t\t/** @type {string} */ (options.context),\n\t\t\t\tthis.binary ? asBuffer(source) : asString(source),\n\t\t\t\tsourceMap,\n\t\t\t\tcompilation.compiler.root\n\t\t\t);\n\t\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\t\tthis._ast =\n\t\t\t\ttypeof extraInfo === \"object\" &&\n\t\t\t\textraInfo !== null &&\n\t\t\t\textraInfo.webpackAST !== undefined\n\t\t\t\t\t? extraInfo.webpackAST\n\t\t\t\t\t: null;\n\t\t\treturn callback();\n\t\t};\n\n\t\tconst buildInfo = /** @type {BuildInfo} */ (this.buildInfo);\n\n\t\tbuildInfo.fileDependencies = new LazySet();\n\t\tbuildInfo.contextDependencies = new LazySet();\n\t\tbuildInfo.missingDependencies = new LazySet();\n\t\tbuildInfo.cacheable = true;\n\n\t\ttry {\n\t\t\thooks.beforeLoaders.call(this.loaders, this, loaderContext);\n\t\t} catch (err) {\n\t\t\tprocessResult(err);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.loaders.length > 0) {\n\t\t\t/** @type {BuildInfo} */\n\t\t\t(this.buildInfo).buildDependencies = new LazySet();\n\t\t}\n\n\t\trunLoaders(\n\t\t\t{\n\t\t\t\tresource: this.resource,\n\t\t\t\tloaders: this.loaders,\n\t\t\t\tcontext: loaderContext,\n\t\t\t\tprocessResource: (loaderContext, resourcePath, callback) => {\n\t\t\t\t\tconst resource = loaderContext.resource;\n\t\t\t\t\tconst scheme = getScheme(resource);\n\t\t\t\t\thooks.readResource\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.callAsync(loaderContext, (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (typeof result !== \"string\" && !result) {\n\t\t\t\t\t\t\t\treturn callback(new UnhandledSchemeError(scheme, resource));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\t// Cleanup loaderContext to avoid leaking memory in ICs\n\t\t\t\tloaderContext._compilation =\n\t\t\t\t\tloaderContext._compiler =\n\t\t\t\t\tloaderContext._module =\n\t\t\t\t\t// eslint-disable-next-line no-warning-comments\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tloaderContext.fs =\n\t\t\t\t\t\tundefined;\n\n\t\t\t\tif (!result) {\n\t\t\t\t\t/** @type {BuildInfo} */\n\t\t\t\t\t(this.buildInfo).cacheable = false;\n\t\t\t\t\treturn processResult(\n\t\t\t\t\t\terr || new Error(\"No result from loader-runner processing\"),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst buildInfo = /** @type {BuildInfo} */ (this.buildInfo);\n\n\t\t\t\tconst fileDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"fileDependencies\"]>} */\n\t\t\t\t\t(buildInfo.fileDependencies);\n\t\t\t\tconst contextDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n\t\t\t\t\t(buildInfo.contextDependencies);\n\t\t\t\tconst missingDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"missingDependencies\"]>} */\n\t\t\t\t\t(buildInfo.missingDependencies);\n\n\t\t\t\tfileDependencies.addAll(result.fileDependencies);\n\t\t\t\tcontextDependencies.addAll(result.contextDependencies);\n\t\t\t\tmissingDependencies.addAll(result.missingDependencies);\n\t\t\t\tfor (const loader of this.loaders) {\n\t\t\t\t\tconst buildDependencies =\n\t\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"buildDependencies\"]>} */\n\t\t\t\t\t\t(buildInfo.buildDependencies);\n\n\t\t\t\t\tbuildDependencies.add(loader.loader);\n\t\t\t\t}\n\t\t\t\tbuildInfo.cacheable = buildInfo.cacheable && result.cacheable;\n\t\t\t\tprocessResult(err, result.result);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {WebpackError} error the error\n\t * @returns {void}\n\t */\n\tmarkModuleAsErrored(error) {\n\t\t// Restore build meta from successful build to keep importing state\n\t\tthis.buildMeta = { ...this._lastSuccessfulBuildMeta };\n\t\tthis.error = error;\n\t\tthis.addError(error);\n\t}\n\n\t/**\n\t * @param {TODO} rule rule\n\t * @param {string} content content\n\t * @returns {boolean} result\n\t */\n\tapplyNoParseRule(rule, content) {\n\t\t// must start with \"rule\" if rule is a string\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn content.startsWith(rule);\n\t\t}\n\n\t\tif (typeof rule === \"function\") {\n\t\t\treturn rule(content);\n\t\t}\n\t\t// we assume rule is a regexp\n\t\treturn rule.test(content);\n\t}\n\n\t/**\n\t * @param {TODO} noParseRule no parse rule\n\t * @param {string} request request\n\t * @returns {boolean} check if module should not be parsed, returns \"true\" if the module should !not! be parsed, returns \"false\" if the module !must! be parsed\n\t */\n\tshouldPreventParsing(noParseRule, request) {\n\t\t// if no noParseRule exists, return false\n\t\t// the module !must! be parsed.\n\t\tif (!noParseRule) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// we only have one rule to check\n\t\tif (!Array.isArray(noParseRule)) {\n\t\t\t// returns \"true\" if the module is !not! to be parsed\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\n\t\t}\n\n\t\tfor (let i = 0; i < noParseRule.length; i++) {\n\t\t\tconst rule = noParseRule[i];\n\t\t\t// early exit on first truthy match\n\t\t\t// this module is !not! to be parsed\n\t\t\tif (this.applyNoParseRule(rule, request)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// no match found, so this module !should! be parsed\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation compilation\n\t * @private\n\t */\n\t_initBuildHash(compilation) {\n\t\tconst hash = createHash(compilation.outputOptions.hashFunction);\n\t\tif (this._source) {\n\t\t\thash.update(\"source\");\n\t\t\tthis._source.updateHash(hash);\n\t\t}\n\t\thash.update(\"meta\");\n\t\thash.update(JSON.stringify(this.buildMeta));\n\t\t/** @type {BuildInfo} */\n\t\t(this.buildInfo).hash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis._forceBuild = false;\n\t\tthis._source = null;\n\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\tthis._sourceTypes = undefined;\n\t\tthis._ast = null;\n\t\tthis.error = null;\n\t\tthis.clearWarningsAndErrors();\n\t\tthis.clearDependenciesAndBlocks();\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: false,\n\t\t\tparsed: true,\n\t\t\tfileDependencies: undefined,\n\t\t\tcontextDependencies: undefined,\n\t\t\tmissingDependencies: undefined,\n\t\t\tbuildDependencies: undefined,\n\t\t\tvalueDependencies: undefined,\n\t\t\thash: undefined,\n\t\t\tassets: undefined,\n\t\t\tassetsInfo: undefined\n\t\t};\n\n\t\tconst startTime = compilation.compiler.fsStartTime || Date.now();\n\n\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\n\t\treturn this._doBuild(options, compilation, resolver, fs, hooks, err => {\n\t\t\t// if we have an error mark module as failed and exit\n\t\t\tif (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {Error} e error\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tconst handleParseError = e => {\n\t\t\t\tconst source = /** @type {Source} */ (this._source).source();\n\t\t\t\tconst loaders = this.loaders.map(item =>\n\t\t\t\t\tcontextify(\n\t\t\t\t\t\t/** @type {string} */ (options.context),\n\t\t\t\t\t\titem.loader,\n\t\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleParseError(source, e, loaders, this.type);\n\t\t\t\tthis.markModuleAsErrored(error);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\tconst handleParseResult = () => {\n\t\t\t\tthis.dependencies.sort(\n\t\t\t\t\tconcatComparators(\n\t\t\t\t\t\tcompareSelect(a => a.loc, compareLocations),\n\t\t\t\t\t\tkeepOriginalOrder(this.dependencies)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\tthis._lastSuccessfulBuildMeta =\n\t\t\t\t\t/** @type {BuildMeta} */\n\t\t\t\t\t(this.buildMeta);\n\t\t\t\treturn handleBuildDone();\n\t\t\t};\n\n\t\t\tconst handleBuildDone = () => {\n\t\t\t\ttry {\n\t\t\t\t\thooks.beforeSnapshot.call(this);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst snapshotOptions = compilation.options.snapshot.module;\n\t\t\t\tconst { cacheable } = /** @type {BuildInfo} */ (this.buildInfo);\n\t\t\t\tif (!cacheable || !snapshotOptions) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\t// add warning for all non-absolute paths in fileDependencies, etc\n\t\t\t\t// This makes it easier to find problems with watching and/or caching\n\t\t\t\t/** @type {undefined | Set<string>} */\n\t\t\t\tlet nonAbsoluteDependencies = undefined;\n\t\t\t\t/**\n\t\t\t\t * @param {LazySet<string>} deps deps\n\t\t\t\t */\n\t\t\t\tconst checkDependencies = deps => {\n\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\tif (!ABSOLUTE_PATH_REGEX.test(dep)) {\n\t\t\t\t\t\t\tif (nonAbsoluteDependencies === undefined)\n\t\t\t\t\t\t\t\tnonAbsoluteDependencies = new Set();\n\t\t\t\t\t\t\tnonAbsoluteDependencies.add(dep);\n\t\t\t\t\t\t\tdeps.delete(dep);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n\t\t\t\t\t\t\t\tconst absolute = join(\n\t\t\t\t\t\t\t\t\tcompilation.fileSystemInfo.fs,\n\t\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\t\tdepWithoutGlob\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n\t\t\t\t\t\t\t\t\t(depWithoutGlob !== dep\n\t\t\t\t\t\t\t\t\t\t? /** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t/** @type {BuildInfo} */ (this.buildInfo)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.contextDependencies\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t: deps\n\t\t\t\t\t\t\t\t\t).add(absolute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst buildInfo = /** @type {BuildInfo} */ (this.buildInfo);\n\t\t\t\tconst fileDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"fileDependencies\"]>} */\n\t\t\t\t\t(buildInfo.fileDependencies);\n\t\t\t\tconst contextDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"contextDependencies\"]>} */\n\t\t\t\t\t(buildInfo.contextDependencies);\n\t\t\t\tconst missingDependencies =\n\t\t\t\t\t/** @type {NonNullable<KnownBuildInfo[\"missingDependencies\"]>} */\n\t\t\t\t\t(buildInfo.missingDependencies);\n\t\t\t\tcheckDependencies(fileDependencies);\n\t\t\t\tcheckDependencies(missingDependencies);\n\t\t\t\tcheckDependencies(contextDependencies);\n\t\t\t\tif (nonAbsoluteDependencies !== undefined) {\n\t\t\t\t\tconst InvalidDependenciesModuleWarning =\n\t\t\t\t\t\tgetInvalidDependenciesModuleWarning();\n\t\t\t\t\tthis.addWarning(\n\t\t\t\t\t\tnew InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// convert file/context/missingDependencies into filesystem snapshot\n\t\t\t\tcompilation.fileSystemInfo.createSnapshot(\n\t\t\t\t\tstartTime,\n\t\t\t\t\tfileDependencies,\n\t\t\t\t\tcontextDependencies,\n\t\t\t\t\tmissingDependencies,\n\t\t\t\t\tsnapshotOptions,\n\t\t\t\t\t(err, snapshot) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuildInfo.fileDependencies = undefined;\n\t\t\t\t\t\tbuildInfo.contextDependencies = undefined;\n\t\t\t\t\t\tbuildInfo.missingDependencies = undefined;\n\t\t\t\t\t\tbuildInfo.snapshot = snapshot;\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\thooks.beforeParse.call(this);\n\t\t\t} catch (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// check if this module should !not! be parsed.\n\t\t\t// if so, exit here;\n\t\t\tconst noParseRule = options.module && options.module.noParse;\n\t\t\tif (this.shouldPreventParsing(noParseRule, this.request)) {\n\t\t\t\t// We assume that we need module and exports\n\t\t\t\t/** @type {BuildInfo} */\n\t\t\t\t(this.buildInfo).parsed = false;\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn handleBuildDone();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst source = /** @type {Source} */ (this._source).source();\n\t\t\t\t/** @type {Parser} */\n\t\t\t\t(this.parser).parse(this._ast || source, {\n\t\t\t\t\tsource,\n\t\t\t\t\tcurrent: this,\n\t\t\t\t\tmodule: this,\n\t\t\t\t\tcompilation: compilation,\n\t\t\t\t\toptions: options\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\thandleParseError(/** @type {Error} */ (e));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleParseResult();\n\t\t});\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(context) {\n\t\treturn /** @type {Generator} */ (\n\t\t\tthis.generator\n\t\t).getConcatenationBailoutReason(this, context);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n\t */\n\tgetSideEffectsConnectionState(moduleGraph) {\n\t\tif (this.factoryMeta !== undefined) {\n\t\t\tif (this.factoryMeta.sideEffectFree) return false;\n\t\t\tif (this.factoryMeta.sideEffectFree === false) return true;\n\t\t}\n\t\tif (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n\t\t\tif (this._isEvaluatingSideEffects)\n\t\t\t\treturn ModuleGraphConnection.CIRCULAR_CONNECTION;\n\t\t\tthis._isEvaluatingSideEffects = true;\n\t\t\t/** @type {ConnectionState} */\n\t\t\tlet current = false;\n\t\t\tfor (const dep of this.dependencies) {\n\t\t\t\tconst state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n\t\t\t\tif (state === true) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._addedSideEffectsBailout === undefined\n\t\t\t\t\t\t\t? ((this._addedSideEffectsBailout = new WeakSet()), true)\n\t\t\t\t\t\t\t: !this._addedSideEffectsBailout.has(moduleGraph)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._addedSideEffectsBailout.add(moduleGraph);\n\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t.getOptimizationBailout(this)\n\t\t\t\t\t\t\t.push(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t`Dependency (${\n\t\t\t\t\t\t\t\t\t\tdep.type\n\t\t\t\t\t\t\t\t\t}) with side effects at ${formatLocation(dep.loc)}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n\t\t\t\t\tcurrent = ModuleGraphConnection.addConnectionStates(current, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t// When caching is implemented here, make sure to not cache when\n\t\t\t// at least one circular connection was in the loop above\n\t\t\treturn current;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {SourceTypes} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\tif (this._sourceTypes === undefined) {\n\t\t\tthis._sourceTypes = /** @type {Generator} */ (this.generator).getTypes(\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t\treturn this._sourceTypes;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\tdependencyTemplates,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\truntimes,\n\t\tconcatenationScope,\n\t\tcodeGenerationResults,\n\t\tsourceTypes\n\t}) {\n\t\t/** @type {Set<string>} */\n\t\tconst runtimeRequirements = new Set();\n\n\t\tconst { parsed } = /** @type {BuildInfo} */ (this.buildInfo);\n\n\t\tif (!parsed) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t}\n\n\t\t/** @type {function(): Map<string, any>} */\n\t\tconst getData = () => {\n\t\t\treturn this._codeGeneratorData;\n\t\t};\n\n\t\tconst sources = new Map();\n\t\tfor (const type of sourceTypes || chunkGraph.getModuleSourceTypes(this)) {\n\t\t\tconst source = this.error\n\t\t\t\t? new RawSource(\n\t\t\t\t\t\t\"throw new Error(\" + JSON.stringify(this.error.message) + \");\"\n\t\t\t\t\t)\n\t\t\t\t: /** @type {Generator} */ (this.generator).generate(this, {\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntimeRequirements,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\truntimes,\n\t\t\t\t\t\tconcatenationScope,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tgetData,\n\t\t\t\t\t\ttype\n\t\t\t\t\t});\n\n\t\t\tif (source) {\n\t\t\t\tsources.set(type, new CachedSource(source));\n\t\t\t}\n\t\t}\n\n\t\t/** @type {CodeGenerationResult} */\n\t\tconst resultEntry = {\n\t\t\tsources,\n\t\t\truntimeRequirements,\n\t\t\tdata: this._codeGeneratorData\n\t\t};\n\t\treturn resultEntry;\n\t}\n\n\t/**\n\t * @returns {Source | null} the original source for the module before webpack transformation\n\t */\n\toriginalSource() {\n\t\treturn this._source;\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tinvalidateBuild() {\n\t\tthis._forceBuild = true;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tconst { fileSystemInfo, compilation, valueCacheVersions } = context;\n\t\t// build if enforced\n\t\tif (this._forceBuild) return callback(null, true);\n\n\t\t// always try to build in case of an error\n\t\tif (this.error) return callback(null, true);\n\n\t\tconst { cacheable, snapshot, valueDependencies } =\n\t\t\t/** @type {BuildInfo} */ (this.buildInfo);\n\n\t\t// always build when module is not cacheable\n\t\tif (!cacheable) return callback(null, true);\n\n\t\t// build when there is no snapshot to check\n\t\tif (!snapshot) return callback(null, true);\n\n\t\t// build when valueDependencies have changed\n\t\tif (valueDependencies) {\n\t\t\tif (!valueCacheVersions) return callback(null, true);\n\t\t\tfor (const [key, value] of valueDependencies) {\n\t\t\t\tif (value === undefined) return callback(null, true);\n\t\t\t\tconst current = valueCacheVersions.get(key);\n\t\t\t\tif (\n\t\t\t\t\tvalue !== current &&\n\t\t\t\t\t(typeof value === \"string\" ||\n\t\t\t\t\t\ttypeof current === \"string\" ||\n\t\t\t\t\t\tcurrent === undefined ||\n\t\t\t\t\t\t!isSubset(value, current))\n\t\t\t\t) {\n\t\t\t\t\treturn callback(null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check snapshot for validity\n\t\tfileSystemInfo.checkSnapshotValid(snapshot, (err, valid) => {\n\t\t\tif (err) return callback(err);\n\t\t\tif (!valid) return callback(null, true);\n\t\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\t\t\thooks.needBuild.callAsync(this, context, (err, needBuild) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tHookWebpackError.makeWebpackError(\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\"NormalModule.getCompilationHooks().needBuild\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcallback(null, !!needBuild);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\tconst cachedSize =\n\t\t\tthis._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n\t\tif (cachedSize !== undefined) {\n\t\t\treturn cachedSize;\n\t\t}\n\t\tconst size = Math.max(\n\t\t\t1,\n\t\t\t/** @type {Generator} */ (this.generator).getSize(this, type)\n\t\t);\n\t\tif (this._sourceSizes === undefined) {\n\t\t\tthis._sourceSizes = new Map();\n\t\t}\n\t\tthis._sourceSizes.set(type, size);\n\t\treturn size;\n\t}\n\n\t/**\n\t * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n\t * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n\t * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n\t * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n\t */\n\taddCacheDependencies(\n\t\tfileDependencies,\n\t\tcontextDependencies,\n\t\tmissingDependencies,\n\t\tbuildDependencies\n\t) {\n\t\tconst { snapshot, buildDependencies: buildDeps } =\n\t\t\t/** @type {BuildInfo} */ (this.buildInfo);\n\t\tif (snapshot) {\n\t\t\tfileDependencies.addAll(snapshot.getFileIterable());\n\t\t\tcontextDependencies.addAll(snapshot.getContextIterable());\n\t\t\tmissingDependencies.addAll(snapshot.getMissingIterable());\n\t\t} else {\n\t\t\tconst {\n\t\t\t\tfileDependencies: fileDeps,\n\t\t\t\tcontextDependencies: contextDeps,\n\t\t\t\tmissingDependencies: missingDeps\n\t\t\t} = /** @type {BuildInfo} */ (this.buildInfo);\n\t\t\tif (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n\t\t\tif (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n\t\t\tif (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n\t\t}\n\t\tif (buildDeps !== undefined) {\n\t\t\tbuildDependencies.addAll(buildDeps);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(/** @type {BuildInfo} */ (this.buildInfo).hash);\n\t\tthis.generator.updateHash(hash, {\n\t\t\tmodule: this,\n\t\t\t...context\n\t\t});\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\t// deserialize\n\t\twrite(this._source);\n\t\twrite(this.error);\n\t\twrite(this._lastSuccessfulBuildMeta);\n\t\twrite(this._forceBuild);\n\t\twrite(this._codeGeneratorData);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst obj = new NormalModule({\n\t\t\t// will be deserialized by Module\n\t\t\tlayer: null,\n\t\t\ttype: \"\",\n\t\t\t// will be filled by updateCacheModule\n\t\t\tresource: \"\",\n\t\t\tcontext: \"\",\n\t\t\trequest: null,\n\t\t\tuserRequest: null,\n\t\t\trawRequest: null,\n\t\t\tloaders: null,\n\t\t\tmatchResource: null,\n\t\t\tparser: null,\n\t\t\tparserOptions: null,\n\t\t\tgenerator: null,\n\t\t\tgeneratorOptions: null,\n\t\t\tresolveOptions: null\n\t\t});\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis._source = read();\n\t\tthis.error = read();\n\t\tthis._lastSuccessfulBuildMeta = read();\n\t\tthis._forceBuild = read();\n\t\tthis._codeGeneratorData = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\n\nmodule.exports = NormalModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}