{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass CreateScriptUrlRuntimeModule extends HelperRuntimeModule {\n  constructor() {\n    super(\"trusted types script url\");\n  }\n\n  /**\n   * @returns {string | null} runtime code\n   */\n  generate() {\n    const compilation = /** @type {Compilation} */this.compilation;\n    const {\n      runtimeTemplate,\n      outputOptions\n    } = compilation;\n    const {\n      trustedTypes\n    } = outputOptions;\n    const fn = RuntimeGlobals.createScriptUrl;\n    return Template.asString(`${fn} = ${runtimeTemplate.returningFunction(trustedTypes ? `${RuntimeGlobals.getTrustedTypesPolicy}().createScriptURL(url)` : \"url\", \"url\")};`);\n  }\n}\nmodule.exports = CreateScriptUrlRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","Template","HelperRuntimeModule","CreateScriptUrlRuntimeModule","constructor","generate","compilation","runtimeTemplate","outputOptions","trustedTypes","fn","createScriptUrl","asString","returningFunction","getTrustedTypesPolicy","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/runtime/CreateScriptUrlRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass CreateScriptUrlRuntimeModule extends HelperRuntimeModule {\n\tconstructor() {\n\t\tsuper(\"trusted types script url\");\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst { runtimeTemplate, outputOptions } = compilation;\n\t\tconst { trustedTypes } = outputOptions;\n\t\tconst fn = RuntimeGlobals.createScriptUrl;\n\n\t\treturn Template.asString(\n\t\t\t`${fn} = ${runtimeTemplate.returningFunction(\n\t\t\t\ttrustedTypes\n\t\t\t\t\t? `${RuntimeGlobals.getTrustedTypesPolicy}().createScriptURL(url)`\n\t\t\t\t\t: \"url\",\n\t\t\t\t\"url\"\n\t\t\t)};`\n\t\t);\n\t}\n}\n\nmodule.exports = CreateScriptUrlRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,MAAME,mBAAmB,GAAGF,OAAO,CAAC,uBAAuB,CAAC;;AAE5D;;AAEA,MAAMG,4BAA4B,SAASD,mBAAmB,CAAC;EAC9DE,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,0BAA0B,CAAC;EAClC;;EAEA;AACD;AACA;EACCC,QAAQA,CAAA,EAAG;IACV,MAAMC,WAAW,GAAG,0BAA4B,IAAI,CAACA,WAAY;IACjE,MAAM;MAAEC,eAAe;MAAEC;IAAc,CAAC,GAAGF,WAAW;IACtD,MAAM;MAAEG;IAAa,CAAC,GAAGD,aAAa;IACtC,MAAME,EAAE,GAAGX,cAAc,CAACY,eAAe;IAEzC,OAAOV,QAAQ,CAACW,QAAQ,CACvB,GAAGF,EAAE,MAAMH,eAAe,CAACM,iBAAiB,CAC3CJ,YAAY,GACT,GAAGV,cAAc,CAACe,qBAAqB,yBAAyB,GAChE,KAAK,EACR,KACD,CAAC,GACF,CAAC;EACF;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGb,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}