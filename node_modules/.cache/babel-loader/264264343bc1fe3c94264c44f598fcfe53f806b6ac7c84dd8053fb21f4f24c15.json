{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource,\n  OriginalSource\n} = require(\"webpack-sources\");\nconst ExternalModule = require(\"../ExternalModule\");\nconst Template = require(\"../Template\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdCommentObject} LibraryCustomUmdCommentObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryName} LibraryName */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string|undefined} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n  const accessors = Array.isArray(accessor) ? accessor : [accessor];\n  return accessors.map((_, idx) => {\n    const a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n    if (idx === 0 && base === undefined) return `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n    return `${a} = ${a} || {}`;\n  }).join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdLibraryPluginName */\n\n/**\n * @typedef {Object} UmdLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean=} optionalAmdExternalAsGlobal\n */\n\n/**\n * @typedef {Object} UmdLibraryPluginParsed\n * @property {string | string[]} name\n * @property {LibraryCustomUmdObject} names\n * @property {string | LibraryCustomUmdCommentObject} auxiliaryComment\n * @property {boolean} namedDefine\n */\n\n/**\n * @typedef {UmdLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<UmdLibraryPluginParsed>}\n */\nclass UmdLibraryPlugin extends AbstractLibraryPlugin {\n  /**\n   * @param {UmdLibraryPluginOptions} options the plugin option\n   */\n  constructor(options) {\n    super({\n      pluginName: \"UmdLibraryPlugin\",\n      type: options.type\n    });\n    this.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n  }\n\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n  parseOptions(library) {\n    /** @type {LibraryName} */\n    let name;\n    /** @type {LibraryCustomUmdObject} */\n    let names;\n    if (typeof library.name === \"object\" && !Array.isArray(library.name)) {\n      name = library.name.root || library.name.amd || library.name.commonjs;\n      names = library.name;\n    } else {\n      name = library.name;\n      const singleName = Array.isArray(name) ? name[0] : name;\n      names = {\n        commonjs: singleName,\n        root: library.name,\n        amd: singleName\n      };\n    }\n    return {\n      name,\n      names,\n      auxiliaryComment: library.auxiliaryComment,\n      namedDefine: library.umdNamedDefine\n    };\n  }\n\n  /**\n   * @param {Source} source source\n   * @param {RenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n  render(source, {\n    chunkGraph,\n    runtimeTemplate,\n    chunk,\n    moduleGraph\n  }, {\n    options,\n    compilation\n  }) {\n    const modules = chunkGraph.getChunkModules(chunk).filter(m => m instanceof ExternalModule && (m.externalType === \"umd\" || m.externalType === \"umd2\"));\n    let externals = /** @type {ExternalModule[]} */modules;\n    /** @type {ExternalModule[]} */\n    const optionalExternals = [];\n    /** @type {ExternalModule[]} */\n    let requiredExternals = [];\n    if (this.optionalAmdExternalAsGlobal) {\n      for (const m of externals) {\n        if (m.isOptional(moduleGraph)) {\n          optionalExternals.push(m);\n        } else {\n          requiredExternals.push(m);\n        }\n      }\n      externals = requiredExternals.concat(optionalExternals);\n    } else {\n      requiredExternals = externals;\n    }\n\n    /**\n     * @param {string} str the string to replace\n     * @returns {string} the replaced keys\n     */\n    const replaceKeys = str => {\n      return compilation.getPath(str, {\n        chunk\n      });\n    };\n    const externalsDepsArray = modules => {\n      return `[${replaceKeys(modules.map(m => JSON.stringify(typeof m.request === \"object\" ? m.request.amd : m.request)).join(\", \"))}]`;\n    };\n    const externalsRootArray = modules => {\n      return replaceKeys(modules.map(m => {\n        let request = m.request;\n        if (typeof request === \"object\") request = request.root;\n        return `root${accessorToObjectAccess([].concat(request))}`;\n      }).join(\", \"));\n    };\n\n    /**\n     * @param {string} type the type\n     * @returns {string} external require array\n     */\n    const externalsRequireArray = type => {\n      return replaceKeys(externals.map(m => {\n        let expr;\n        let request = m.request;\n        if (typeof request === \"object\") {\n          request = /** @type {Record<string, string | string[]>} */\n          request[type];\n        }\n        if (request === undefined) {\n          throw new Error(\"Missing external configuration for type:\" + type);\n        }\n        if (Array.isArray(request)) {\n          expr = `require(${JSON.stringify(request[0])})${accessorToObjectAccess(request.slice(1))}`;\n        } else {\n          expr = `require(${JSON.stringify(request)})`;\n        }\n        if (m.isOptional(moduleGraph)) {\n          expr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n        }\n        return expr;\n      }).join(\", \"));\n    };\n\n    /**\n     * @param {ExternalModule[]} modules external modules\n     * @returns {string} arguments\n     */\n    const externalsArguments = modules => {\n      return modules.map(m => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${chunkGraph.getModuleId(m)}`)}__`).join(\", \");\n    };\n    const libraryName = library => {\n      return JSON.stringify(replaceKeys([].concat(library).pop()));\n    };\n    let amdFactory;\n    if (optionalExternals.length > 0) {\n      const wrapperArguments = externalsArguments(requiredExternals);\n      const factoryArguments = requiredExternals.length > 0 ? externalsArguments(requiredExternals) + \", \" + externalsRootArray(optionalExternals) : externalsRootArray(optionalExternals);\n      amdFactory = `function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` + `\t\t\treturn factory(${factoryArguments});\\n` + \"\t\t}\";\n    } else {\n      amdFactory = \"factory\";\n    }\n    const {\n      auxiliaryComment,\n      namedDefine,\n      names\n    } = options;\n\n    /**\n     * @param {keyof LibraryCustomUmdCommentObject} type type\n     * @returns {string} comment\n     */\n    const getAuxiliaryComment = type => {\n      if (auxiliaryComment) {\n        if (typeof auxiliaryComment === \"string\") return \"\\t//\" + auxiliaryComment + \"\\n\";\n        if (auxiliaryComment[type]) return \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n      }\n      return \"\";\n    };\n    return new ConcatSource(new OriginalSource(\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" + getAuxiliaryComment(\"commonjs2\") + \"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" + \"\t\tmodule.exports = factory(\" + externalsRequireArray(\"commonjs2\") + \");\\n\" + getAuxiliaryComment(\"amd\") + \"\telse if(typeof define === 'function' && define.amd)\\n\" + (requiredExternals.length > 0 ? names.amd && namedDefine === true ? \"\t\tdefine(\" + libraryName(names.amd) + \", \" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : \"\t\tdefine(\" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : names.amd && namedDefine === true ? \"\t\tdefine(\" + libraryName(names.amd) + \", [], \" + amdFactory + \");\\n\" : \"\t\tdefine([], \" + amdFactory + \");\\n\") + (names.root || names.commonjs ? getAuxiliaryComment(\"commonjs\") + \"\telse if(typeof exports === 'object')\\n\" + \"\t\texports[\" + libraryName(names.commonjs || names.root) + \"] = factory(\" + externalsRequireArray(\"commonjs\") + \");\\n\" + getAuxiliaryComment(\"root\") + \"\telse\\n\" + \"\t\t\" + replaceKeys(accessorAccess(\"root\", /** @type {string | string[]} */names.root || ( /** @type {string} */names.commonjs))) + \" = factory(\" + externalsRootArray(externals) + \");\\n\" : \"\telse {\\n\" + (externals.length > 0 ? \"\t\tvar a = typeof exports === 'object' ? factory(\" + externalsRequireArray(\"commonjs\") + \") : factory(\" + externalsRootArray(externals) + \");\\n\" : \"\t\tvar a = factory();\\n\") + \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" + \"\t}\\n\") + `})(${runtimeTemplate.outputOptions.globalObject}, ${runtimeTemplate.supportsArrowFunction() ? `(${externalsArguments(externals)}) =>` : `function(${externalsArguments(externals)})`} {\\nreturn `, \"webpack/universalModuleDefinition\"), source, \";\\n})\");\n  }\n}\nmodule.exports = UmdLibraryPlugin;","map":{"version":3,"names":["ConcatSource","OriginalSource","require","ExternalModule","Template","AbstractLibraryPlugin","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","joinWith","accessors","Array","isArray","_","idx","slice","length","undefined","UmdLibraryPlugin","constructor","options","pluginName","type","optionalAmdExternalAsGlobal","parseOptions","library","name","names","root","amd","commonjs","singleName","auxiliaryComment","namedDefine","umdNamedDefine","render","source","chunkGraph","runtimeTemplate","chunk","moduleGraph","compilation","modules","getChunkModules","filter","m","externalType","externals","optionalExternals","requiredExternals","isOptional","push","concat","replaceKeys","str","getPath","externalsDepsArray","request","externalsRootArray","externalsRequireArray","expr","Error","externalsArguments","toIdentifier","getModuleId","libraryName","pop","amdFactory","wrapperArguments","factoryArguments","getAuxiliaryComment","outputOptions","globalObject","supportsArrowFunction","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/library/UmdLibraryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, OriginalSource } = require(\"webpack-sources\");\nconst ExternalModule = require(\"../ExternalModule\");\nconst Template = require(\"../Template\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdCommentObject} LibraryCustomUmdCommentObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryName} LibraryName */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string|undefined} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n\tconst accessors = Array.isArray(accessor) ? accessor : [accessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined)\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdLibraryPluginName */\n\n/**\n * @typedef {Object} UmdLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean=} optionalAmdExternalAsGlobal\n */\n\n/**\n * @typedef {Object} UmdLibraryPluginParsed\n * @property {string | string[]} name\n * @property {LibraryCustomUmdObject} names\n * @property {string | LibraryCustomUmdCommentObject} auxiliaryComment\n * @property {boolean} namedDefine\n */\n\n/**\n * @typedef {UmdLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<UmdLibraryPluginParsed>}\n */\nclass UmdLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * @param {UmdLibraryPluginOptions} options the plugin option\n\t */\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tpluginName: \"UmdLibraryPlugin\",\n\t\t\ttype: options.type\n\t\t});\n\n\t\tthis.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\t/** @type {LibraryName} */\n\t\tlet name;\n\t\t/** @type {LibraryCustomUmdObject} */\n\t\tlet names;\n\t\tif (typeof library.name === \"object\" && !Array.isArray(library.name)) {\n\t\t\tname = library.name.root || library.name.amd || library.name.commonjs;\n\t\t\tnames = library.name;\n\t\t} else {\n\t\t\tname = library.name;\n\t\t\tconst singleName = Array.isArray(name) ? name[0] : name;\n\t\t\tnames = {\n\t\t\t\tcommonjs: singleName,\n\t\t\t\troot: library.name,\n\t\t\t\tamd: singleName\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tname,\n\t\t\tnames,\n\t\t\tauxiliaryComment: library.auxiliaryComment,\n\t\t\tnamedDefine: library.umdNamedDefine\n\t\t};\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trender(\n\t\tsource,\n\t\t{ chunkGraph, runtimeTemplate, chunk, moduleGraph },\n\t\t{ options, compilation }\n\t) {\n\t\tconst modules = chunkGraph\n\t\t\t.getChunkModules(chunk)\n\t\t\t.filter(\n\t\t\t\tm =>\n\t\t\t\t\tm instanceof ExternalModule &&\n\t\t\t\t\t(m.externalType === \"umd\" || m.externalType === \"umd2\")\n\t\t\t);\n\t\tlet externals = /** @type {ExternalModule[]} */ (modules);\n\t\t/** @type {ExternalModule[]} */\n\t\tconst optionalExternals = [];\n\t\t/** @type {ExternalModule[]} */\n\t\tlet requiredExternals = [];\n\t\tif (this.optionalAmdExternalAsGlobal) {\n\t\t\tfor (const m of externals) {\n\t\t\t\tif (m.isOptional(moduleGraph)) {\n\t\t\t\t\toptionalExternals.push(m);\n\t\t\t\t} else {\n\t\t\t\t\trequiredExternals.push(m);\n\t\t\t\t}\n\t\t\t}\n\t\t\texternals = requiredExternals.concat(optionalExternals);\n\t\t} else {\n\t\t\trequiredExternals = externals;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} str the string to replace\n\t\t * @returns {string} the replaced keys\n\t\t */\n\t\tconst replaceKeys = str => {\n\t\t\treturn compilation.getPath(str, {\n\t\t\t\tchunk\n\t\t\t});\n\t\t};\n\n\t\tconst externalsDepsArray = modules => {\n\t\t\treturn `[${replaceKeys(\n\t\t\t\tmodules\n\t\t\t\t\t.map(m =>\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.join(\", \")\n\t\t\t)}]`;\n\t\t};\n\n\t\tconst externalsRootArray = modules => {\n\t\t\treturn replaceKeys(\n\t\t\t\tmodules\n\t\t\t\t\t.map(m => {\n\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\tif (typeof request === \"object\") request = request.root;\n\t\t\t\t\t\treturn `root${accessorToObjectAccess([].concat(request))}`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\", \")\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t * @param {string} type the type\n\t\t * @returns {string} external require array\n\t\t */\n\t\tconst externalsRequireArray = type => {\n\t\t\treturn replaceKeys(\n\t\t\t\texternals\n\t\t\t\t\t.map(m => {\n\t\t\t\t\t\tlet expr;\n\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\tif (typeof request === \"object\") {\n\t\t\t\t\t\t\trequest =\n\t\t\t\t\t\t\t\t/** @type {Record<string, string | string[]>} */\n\t\t\t\t\t\t\t\t(request)[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (request === undefined) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"Missing external configuration for type:\" + type\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\t\texpr = `require(${JSON.stringify(\n\t\t\t\t\t\t\t\trequest[0]\n\t\t\t\t\t\t\t)})${accessorToObjectAccess(request.slice(1))}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texpr = `require(${JSON.stringify(request)})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.isOptional(moduleGraph)) {\n\t\t\t\t\t\t\texpr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn expr;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\", \")\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t * @param {ExternalModule[]} modules external modules\n\t\t * @returns {string} arguments\n\t\t */\n\t\tconst externalsArguments = modules => {\n\t\t\treturn modules\n\t\t\t\t.map(\n\t\t\t\t\tm =>\n\t\t\t\t\t\t`__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t\t\t\t\t\t`${chunkGraph.getModuleId(m)}`\n\t\t\t\t\t\t)}__`\n\t\t\t\t)\n\t\t\t\t.join(\", \");\n\t\t};\n\n\t\tconst libraryName = library => {\n\t\t\treturn JSON.stringify(replaceKeys([].concat(library).pop()));\n\t\t};\n\n\t\tlet amdFactory;\n\t\tif (optionalExternals.length > 0) {\n\t\t\tconst wrapperArguments = externalsArguments(requiredExternals);\n\t\t\tconst factoryArguments =\n\t\t\t\trequiredExternals.length > 0\n\t\t\t\t\t? externalsArguments(requiredExternals) +\n\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\texternalsRootArray(optionalExternals)\n\t\t\t\t\t: externalsRootArray(optionalExternals);\n\t\t\tamdFactory =\n\t\t\t\t`function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` +\n\t\t\t\t`\t\t\treturn factory(${factoryArguments});\\n` +\n\t\t\t\t\"\t\t}\";\n\t\t} else {\n\t\t\tamdFactory = \"factory\";\n\t\t}\n\n\t\tconst { auxiliaryComment, namedDefine, names } = options;\n\n\t\t/**\n\t\t * @param {keyof LibraryCustomUmdCommentObject} type type\n\t\t * @returns {string} comment\n\t\t */\n\t\tconst getAuxiliaryComment = type => {\n\t\t\tif (auxiliaryComment) {\n\t\t\t\tif (typeof auxiliaryComment === \"string\")\n\t\t\t\t\treturn \"\\t//\" + auxiliaryComment + \"\\n\";\n\t\t\t\tif (auxiliaryComment[type])\n\t\t\t\t\treturn \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\treturn new ConcatSource(\n\t\t\tnew OriginalSource(\n\t\t\t\t\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" +\n\t\t\t\t\tgetAuxiliaryComment(\"commonjs2\") +\n\t\t\t\t\t\"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" +\n\t\t\t\t\t\"\t\tmodule.exports = factory(\" +\n\t\t\t\t\texternalsRequireArray(\"commonjs2\") +\n\t\t\t\t\t\");\\n\" +\n\t\t\t\t\tgetAuxiliaryComment(\"amd\") +\n\t\t\t\t\t\"\telse if(typeof define === 'function' && define.amd)\\n\" +\n\t\t\t\t\t(requiredExternals.length > 0\n\t\t\t\t\t\t? names.amd && namedDefine === true\n\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\tlibraryName(names.amd) +\n\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\texternalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\tamdFactory +\n\t\t\t\t\t\t\t\t\");\\n\"\n\t\t\t\t\t\t\t: \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\texternalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t\", \" +\n\t\t\t\t\t\t\t\tamdFactory +\n\t\t\t\t\t\t\t\t\");\\n\"\n\t\t\t\t\t\t: names.amd && namedDefine === true\n\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\tlibraryName(names.amd) +\n\t\t\t\t\t\t\t\t\", [], \" +\n\t\t\t\t\t\t\t\tamdFactory +\n\t\t\t\t\t\t\t\t\");\\n\"\n\t\t\t\t\t\t\t: \"\t\tdefine([], \" + amdFactory + \");\\n\") +\n\t\t\t\t\t(names.root || names.commonjs\n\t\t\t\t\t\t? getAuxiliaryComment(\"commonjs\") +\n\t\t\t\t\t\t\t\"\telse if(typeof exports === 'object')\\n\" +\n\t\t\t\t\t\t\t\"\t\texports[\" +\n\t\t\t\t\t\t\tlibraryName(names.commonjs || names.root) +\n\t\t\t\t\t\t\t\"] = factory(\" +\n\t\t\t\t\t\t\texternalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t\");\\n\" +\n\t\t\t\t\t\t\tgetAuxiliaryComment(\"root\") +\n\t\t\t\t\t\t\t\"\telse\\n\" +\n\t\t\t\t\t\t\t\"\t\t\" +\n\t\t\t\t\t\t\treplaceKeys(\n\t\t\t\t\t\t\t\taccessorAccess(\n\t\t\t\t\t\t\t\t\t\"root\",\n\t\t\t\t\t\t\t\t\t/** @type {string | string[]} */ (names.root) ||\n\t\t\t\t\t\t\t\t\t\t/** @type {string} */ (names.commonjs)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\" = factory(\" +\n\t\t\t\t\t\t\texternalsRootArray(externals) +\n\t\t\t\t\t\t\t\");\\n\"\n\t\t\t\t\t\t: \"\telse {\\n\" +\n\t\t\t\t\t\t\t(externals.length > 0\n\t\t\t\t\t\t\t\t? \"\t\tvar a = typeof exports === 'object' ? factory(\" +\n\t\t\t\t\t\t\t\t\texternalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t\t\t\") : factory(\" +\n\t\t\t\t\t\t\t\t\texternalsRootArray(externals) +\n\t\t\t\t\t\t\t\t\t\");\\n\"\n\t\t\t\t\t\t\t\t: \"\t\tvar a = factory();\\n\") +\n\t\t\t\t\t\t\t\"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" +\n\t\t\t\t\t\t\t\"\t}\\n\") +\n\t\t\t\t\t`})(${runtimeTemplate.outputOptions.globalObject}, ${\n\t\t\t\t\t\truntimeTemplate.supportsArrowFunction()\n\t\t\t\t\t\t\t? `(${externalsArguments(externals)}) =>`\n\t\t\t\t\t\t\t: `function(${externalsArguments(externals)})`\n\t\t\t\t\t} {\\nreturn `,\n\t\t\t\t\"webpack/universalModuleDefinition\"\n\t\t\t),\n\t\t\tsource,\n\t\t\t\";\\n})\"\n\t\t);\n\t}\n}\n\nmodule.exports = UmdLibraryPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}