{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst CachedConstDependency = require(\"./CachedConstDependency\");\nconst ExternalModuleInitFragment = require(\"./ExternalModuleInitFragment\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nclass ExternalModuleDependency extends CachedConstDependency {\n  /**\n   * @param {string} module module\n   * @param {{ name: string, value: string }[]} importSpecifiers import specifiers\n   * @param {string | undefined} defaultImport default import\n   * @param {string} expression expression\n   * @param {Range} range range\n   * @param {string} identifier identifier\n   */\n  constructor(module, importSpecifiers, defaultImport, expression, range, identifier) {\n    super(expression, range, identifier);\n    this.importedModule = module;\n    this.specifiers = importSpecifiers;\n    this.default = defaultImport;\n  }\n\n  /**\n   * @returns {string} hash update\n   */\n  _createHashUpdate() {\n    return `${this.importedModule}${JSON.stringify(this.specifiers)}${this.default || \"null\"}${super._createHashUpdate()}`;\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    super.serialize(context);\n    const {\n      write\n    } = context;\n    write(this.importedModule);\n    write(this.specifiers);\n    write(this.default);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    super.deserialize(context);\n    const {\n      read\n    } = context;\n    this.importedModule = read();\n    this.specifiers = read();\n    this.default = read();\n  }\n}\nmakeSerializable(ExternalModuleDependency, \"webpack/lib/dependencies/ExternalModuleDependency\");\nExternalModuleDependency.Template = class ExternalModuleDependencyTemplate extends CachedConstDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    super.apply(dependency, source, templateContext);\n    const dep = /** @type {ExternalModuleDependency} */dependency;\n    const {\n      chunkInitFragments\n    } = templateContext;\n    chunkInitFragments.push(new ExternalModuleInitFragment(dep.importedModule, dep.specifiers, dep.default));\n  }\n};\nmodule.exports = ExternalModuleDependency;","map":{"version":3,"names":["makeSerializable","require","CachedConstDependency","ExternalModuleInitFragment","ExternalModuleDependency","constructor","module","importSpecifiers","defaultImport","expression","range","identifier","importedModule","specifiers","default","_createHashUpdate","JSON","stringify","serialize","context","write","deserialize","read","Template","ExternalModuleDependencyTemplate","apply","dependency","source","templateContext","dep","chunkInitFragments","push","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/dependencies/ExternalModuleDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst CachedConstDependency = require(\"./CachedConstDependency\");\nconst ExternalModuleInitFragment = require(\"./ExternalModuleInitFragment\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nclass ExternalModuleDependency extends CachedConstDependency {\n\t/**\n\t * @param {string} module module\n\t * @param {{ name: string, value: string }[]} importSpecifiers import specifiers\n\t * @param {string | undefined} defaultImport default import\n\t * @param {string} expression expression\n\t * @param {Range} range range\n\t * @param {string} identifier identifier\n\t */\n\tconstructor(\n\t\tmodule,\n\t\timportSpecifiers,\n\t\tdefaultImport,\n\t\texpression,\n\t\trange,\n\t\tidentifier\n\t) {\n\t\tsuper(expression, range, identifier);\n\n\t\tthis.importedModule = module;\n\t\tthis.specifiers = importSpecifiers;\n\t\tthis.default = defaultImport;\n\t}\n\n\t/**\n\t * @returns {string} hash update\n\t */\n\t_createHashUpdate() {\n\t\treturn `${this.importedModule}${JSON.stringify(this.specifiers)}${\n\t\t\tthis.default || \"null\"\n\t\t}${super._createHashUpdate()}`;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tsuper.serialize(context);\n\t\tconst { write } = context;\n\t\twrite(this.importedModule);\n\t\twrite(this.specifiers);\n\t\twrite(this.default);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tsuper.deserialize(context);\n\t\tconst { read } = context;\n\t\tthis.importedModule = read();\n\t\tthis.specifiers = read();\n\t\tthis.default = read();\n\t}\n}\n\nmakeSerializable(\n\tExternalModuleDependency,\n\t\"webpack/lib/dependencies/ExternalModuleDependency\"\n);\n\nExternalModuleDependency.Template = class ExternalModuleDependencyTemplate extends (\n\tCachedConstDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tsuper.apply(dependency, source, templateContext);\n\t\tconst dep = /** @type {ExternalModuleDependency} */ (dependency);\n\t\tconst { chunkInitFragments } = templateContext;\n\n\t\tchunkInitFragments.push(\n\t\t\tnew ExternalModuleInitFragment(\n\t\t\t\tdep.importedModule,\n\t\t\t\tdep.specifiers,\n\t\t\t\tdep.default\n\t\t\t)\n\t\t);\n\t}\n};\n\nmodule.exports = ExternalModuleDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAME,0BAA0B,GAAGF,OAAO,CAAC,8BAA8B,CAAC;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,wBAAwB,SAASF,qBAAqB,CAAC;EAC5D;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCG,WAAWA,CACVC,MAAM,EACNC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,EACVC,KAAK,EACLC,UAAU,EACT;IACD,KAAK,CAACF,UAAU,EAAEC,KAAK,EAAEC,UAAU,CAAC;IAEpC,IAAI,CAACC,cAAc,GAAGN,MAAM;IAC5B,IAAI,CAACO,UAAU,GAAGN,gBAAgB;IAClC,IAAI,CAACO,OAAO,GAAGN,aAAa;EAC7B;;EAEA;AACD;AACA;EACCO,iBAAiBA,CAAA,EAAG;IACnB,OAAO,GAAG,IAAI,CAACH,cAAc,GAAGI,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,UAAU,CAAC,GAC9D,IAAI,CAACC,OAAO,IAAI,MAAM,GACpB,KAAK,CAACC,iBAAiB,CAAC,CAAC,EAAE;EAC/B;;EAEA;AACD;AACA;EACCG,SAASA,CAACC,OAAO,EAAE;IAClB,KAAK,CAACD,SAAS,CAACC,OAAO,CAAC;IACxB,MAAM;MAAEC;IAAM,CAAC,GAAGD,OAAO;IACzBC,KAAK,CAAC,IAAI,CAACR,cAAc,CAAC;IAC1BQ,KAAK,CAAC,IAAI,CAACP,UAAU,CAAC;IACtBO,KAAK,CAAC,IAAI,CAACN,OAAO,CAAC;EACpB;;EAEA;AACD;AACA;EACCO,WAAWA,CAACF,OAAO,EAAE;IACpB,KAAK,CAACE,WAAW,CAACF,OAAO,CAAC;IAC1B,MAAM;MAAEG;IAAK,CAAC,GAAGH,OAAO;IACxB,IAAI,CAACP,cAAc,GAAGU,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACT,UAAU,GAAGS,IAAI,CAAC,CAAC;IACxB,IAAI,CAACR,OAAO,GAAGQ,IAAI,CAAC,CAAC;EACtB;AACD;AAEAtB,gBAAgB,CACfI,wBAAwB,EACxB,mDACD,CAAC;AAEDA,wBAAwB,CAACmB,QAAQ,GAAG,MAAMC,gCAAgC,SACzEtB,qBAAqB,CAACqB,QAAQ,CAC7B;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAKA,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IAC1C,KAAK,CAACH,KAAK,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,CAAC;IAChD,MAAMC,GAAG,GAAG,uCAAyCH,UAAW;IAChE,MAAM;MAAEI;IAAmB,CAAC,GAAGF,eAAe;IAE9CE,kBAAkB,CAACC,IAAI,CACtB,IAAI5B,0BAA0B,CAC7B0B,GAAG,CAACjB,cAAc,EAClBiB,GAAG,CAAChB,UAAU,EACdgB,GAAG,CAACf,OACL,CACD,CAAC;EACF;AACD,CAAC;AAEDR,MAAM,CAAC0B,OAAO,GAAG5B,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}