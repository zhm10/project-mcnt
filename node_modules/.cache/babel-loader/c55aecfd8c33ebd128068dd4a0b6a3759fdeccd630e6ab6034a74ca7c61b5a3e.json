{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\nconst DATA_URI_CONTENT_LENGTH = 16;\nconst MAX_MODULE_IDENTIFIER_LENGTH = 80;\n\n/**\n * @param {number} n a number\n * @param {string} singular singular\n * @param {string} plural plural\n * @returns {string} if n is 1, singular, else plural\n */\nconst plural = (n, singular, plural) => n === 1 ? singular : plural;\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, {\n  formatSize = n => `${n}`\n}) => {\n  const keys = Object.keys(sizes);\n  if (keys.length > 1) {\n    return keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n  } else if (keys.length === 1) {\n    return formatSize(sizes[keys[0]]);\n  }\n};\n\n/**\n * @param {string} resource resource\n * @returns {string} resource name for display\n */\nconst getResourceName = resource => {\n  const dataUrl = /^data:[^,]+,/.exec(resource);\n  if (!dataUrl) return resource;\n  const len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n  if (resource.length < len) return resource;\n  return `${resource.slice(0, Math.min(resource.length - /* '..'.length */2, len))}..`;\n};\n\n/**\n * @param {string} name module name\n * @returns {[string,string]} prefix and module name\n */\nconst getModuleName = name => {\n  const [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n  if (resource.length > MAX_MODULE_IDENTIFIER_LENGTH) {\n    const truncatedResource = `${resource.slice(0, Math.min(resource.length - /* '...(truncated)'.length */14, MAX_MODULE_IDENTIFIER_LENGTH))}...(truncated)`;\n    return [prefix, getResourceName(truncatedResource)];\n  }\n  return [prefix, getResourceName(resource)];\n};\n\n/**\n * @param {string} str string\n * @param {function(string): string} fn function to apply to each line\n * @returns {string} joined string\n */\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => n >= 10 ? `${n}` : `0${n}`;\nconst isValidId = id => {\n  return typeof id === \"number\" || id;\n};\n\n/**\n * @template T\n * @param {Array<T>} list of items\n * @param {number} count number of items to show\n * @returns {string} string representation of list\n */\nconst moreCount = (list, count) => {\n  return list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n  \"compilation.summary!\": (_, {\n    type,\n    bold,\n    green,\n    red,\n    yellow,\n    formatDateTime,\n    formatTime,\n    compilation: {\n      name,\n      hash,\n      version,\n      time,\n      builtAt,\n      errorsCount,\n      warningsCount\n    }\n  }) => {\n    const root = type === \"compilation.summary!\";\n    const warningsMessage = warningsCount > 0 ? yellow(`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`) : \"\";\n    const errorsMessage = errorsCount > 0 ? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`) : \"\";\n    const timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n    const hashMessage = hash ? ` (${hash})` : \"\";\n    const builtAtMessage = root && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n    const versionMessage = root && version ? `webpack ${version}` : \"\";\n    const nameMessage = root && name ? bold(name) : name ? `Child ${bold(name)}` : root ? \"\" : \"Child\";\n    const subjectMessage = nameMessage && versionMessage ? `${nameMessage} (${versionMessage})` : versionMessage || nameMessage || \"webpack\";\n    let statusMessage;\n    if (errorsMessage && warningsMessage) {\n      statusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n    } else if (errorsMessage) {\n      statusMessage = `compiled with ${errorsMessage}`;\n    } else if (warningsMessage) {\n      statusMessage = `compiled with ${warningsMessage}`;\n    } else if (errorsCount === 0 && warningsCount === 0) {\n      statusMessage = `compiled ${green(\"successfully\")}`;\n    } else {\n      statusMessage = `compiled`;\n    }\n    if (builtAtMessage || versionMessage || errorsMessage || warningsMessage || errorsCount === 0 && warningsCount === 0 || timeMessage || hashMessage) return `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n  },\n  \"compilation.filteredWarningDetailsCount\": count => count ? `${count} ${plural(count, \"warning has\", \"warnings have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.` : undefined,\n  \"compilation.filteredErrorDetailsCount\": (count, {\n    yellow\n  }) => count ? yellow(`${count} ${plural(count, \"error has\", \"errors have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`) : undefined,\n  \"compilation.env\": (env, {\n    bold\n  }) => env ? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}` : undefined,\n  \"compilation.publicPath\": (publicPath, {\n    bold\n  }) => `PublicPath: ${bold(publicPath || \"(none)\")}`,\n  \"compilation.entrypoints\": (entrypoints, context, printer) => Array.isArray(entrypoints) ? undefined : printer.print(context.type, Object.values(entrypoints), {\n    ...context,\n    chunkGroupKind: \"Entrypoint\"\n  }),\n  \"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n    if (!Array.isArray(namedChunkGroups)) {\n      const {\n        compilation: {\n          entrypoints\n        }\n      } = context;\n      let chunkGroups = Object.values(namedChunkGroups);\n      if (entrypoints) {\n        chunkGroups = chunkGroups.filter(group => !Object.prototype.hasOwnProperty.call(entrypoints, group.name));\n      }\n      return printer.print(context.type, chunkGroups, {\n        ...context,\n        chunkGroupKind: \"Chunk Group\"\n      });\n    }\n  },\n  \"compilation.assetsByChunkName\": () => \"\",\n  \"compilation.filteredModules\": (filteredModules, {\n    compilation: {\n      modules\n    }\n  }) => filteredModules > 0 ? `${moreCount(modules, filteredModules)} ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"compilation.filteredAssets\": (filteredAssets, {\n    compilation: {\n      assets\n    }\n  }) => filteredAssets > 0 ? `${moreCount(assets, filteredAssets)} ${plural(filteredAssets, \"asset\", \"assets\")}` : undefined,\n  \"compilation.logging\": (logging, context, printer) => Array.isArray(logging) ? undefined : printer.print(context.type, Object.entries(logging).map(([name, value]) => ({\n    ...value,\n    name\n  })), context),\n  \"compilation.warningsInChildren!\": (_, {\n    yellow,\n    compilation\n  }) => {\n    if (!compilation.children && compilation.warningsCount > 0 && compilation.warnings) {\n      const childWarnings = compilation.warningsCount - compilation.warnings.length;\n      if (childWarnings > 0) {\n        return yellow(`${childWarnings} ${plural(childWarnings, \"WARNING\", \"WARNINGS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"compilation.errorsInChildren!\": (_, {\n    red,\n    compilation\n  }) => {\n    if (!compilation.children && compilation.errorsCount > 0 && compilation.errors) {\n      const childErrors = compilation.errorsCount - compilation.errors.length;\n      if (childErrors > 0) {\n        return red(`${childErrors} ${plural(childErrors, \"ERROR\", \"ERRORS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"asset.type\": type => type,\n  \"asset.name\": (name, {\n    formatFilename,\n    asset: {\n      isOverSizeLimit\n    }\n  }) => formatFilename(name, isOverSizeLimit),\n  \"asset.size\": (size, {\n    asset: {\n      isOverSizeLimit\n    },\n    yellow,\n    green,\n    formatSize\n  }) => isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size),\n  \"asset.emitted\": (emitted, {\n    green,\n    formatFlag\n  }) => emitted ? green(formatFlag(\"emitted\")) : undefined,\n  \"asset.comparedForEmit\": (comparedForEmit, {\n    yellow,\n    formatFlag\n  }) => comparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined,\n  \"asset.cached\": (cached, {\n    green,\n    formatFlag\n  }) => cached ? green(formatFlag(\"cached\")) : undefined,\n  \"asset.isOverSizeLimit\": (isOverSizeLimit, {\n    yellow,\n    formatFlag\n  }) => isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n  \"asset.info.immutable\": (immutable, {\n    green,\n    formatFlag\n  }) => immutable ? green(formatFlag(\"immutable\")) : undefined,\n  \"asset.info.javascriptModule\": (javascriptModule, {\n    formatFlag\n  }) => javascriptModule ? formatFlag(\"javascript module\") : undefined,\n  \"asset.info.sourceFilename\": (sourceFilename, {\n    formatFlag\n  }) => sourceFilename ? formatFlag(sourceFilename === true ? \"from source file\" : `from: ${sourceFilename}`) : undefined,\n  \"asset.info.development\": (development, {\n    green,\n    formatFlag\n  }) => development ? green(formatFlag(\"dev\")) : undefined,\n  \"asset.info.hotModuleReplacement\": (hotModuleReplacement, {\n    green,\n    formatFlag\n  }) => hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined,\n  \"asset.separator!\": () => \"\\n\",\n  \"asset.filteredRelated\": (filteredRelated, {\n    asset: {\n      related\n    }\n  }) => filteredRelated > 0 ? `${moreCount(related, filteredRelated)} related ${plural(filteredRelated, \"asset\", \"assets\")}` : undefined,\n  \"asset.filteredChildren\": (filteredChildren, {\n    asset: {\n      children\n    }\n  }) => filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"asset\", \"assets\")}` : undefined,\n  assetChunk: (id, {\n    formatChunkId\n  }) => formatChunkId(id),\n  assetChunkName: name => name,\n  assetChunkIdHint: name => name,\n  \"module.type\": type => type !== \"module\" ? type : undefined,\n  \"module.id\": (id, {\n    formatModuleId\n  }) => isValidId(id) ? formatModuleId(id) : undefined,\n  \"module.name\": (name, {\n    bold\n  }) => {\n    const [prefix, resource] = getModuleName(name);\n    return `${prefix || \"\"}${bold(resource || \"\")}`;\n  },\n  \"module.identifier\": identifier => undefined,\n  \"module.layer\": (layer, {\n    formatLayer\n  }) => layer ? formatLayer(layer) : undefined,\n  \"module.sizes\": printSizes,\n  \"module.chunks[]\": (id, {\n    formatChunkId\n  }) => formatChunkId(id),\n  \"module.depth\": (depth, {\n    formatFlag\n  }) => depth !== null ? formatFlag(`depth ${depth}`) : undefined,\n  \"module.cacheable\": (cacheable, {\n    formatFlag,\n    red\n  }) => cacheable === false ? red(formatFlag(\"not cacheable\")) : undefined,\n  \"module.orphan\": (orphan, {\n    formatFlag,\n    yellow\n  }) => orphan ? yellow(formatFlag(\"orphan\")) : undefined,\n  \"module.runtime\": (runtime, {\n    formatFlag,\n    yellow\n  }) => runtime ? yellow(formatFlag(\"runtime\")) : undefined,\n  \"module.optional\": (optional, {\n    formatFlag,\n    yellow\n  }) => optional ? yellow(formatFlag(\"optional\")) : undefined,\n  \"module.dependent\": (dependent, {\n    formatFlag,\n    cyan\n  }) => dependent ? cyan(formatFlag(\"dependent\")) : undefined,\n  \"module.built\": (built, {\n    formatFlag,\n    yellow\n  }) => built ? yellow(formatFlag(\"built\")) : undefined,\n  \"module.codeGenerated\": (codeGenerated, {\n    formatFlag,\n    yellow\n  }) => codeGenerated ? yellow(formatFlag(\"code generated\")) : undefined,\n  \"module.buildTimeExecuted\": (buildTimeExecuted, {\n    formatFlag,\n    green\n  }) => buildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined,\n  \"module.cached\": (cached, {\n    formatFlag,\n    green\n  }) => cached ? green(formatFlag(\"cached\")) : undefined,\n  \"module.assets\": (assets, {\n    formatFlag,\n    magenta\n  }) => assets && assets.length ? magenta(formatFlag(`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`)) : undefined,\n  \"module.warnings\": (warnings, {\n    formatFlag,\n    yellow\n  }) => warnings === true ? yellow(formatFlag(\"warnings\")) : warnings ? yellow(formatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)) : undefined,\n  \"module.errors\": (errors, {\n    formatFlag,\n    red\n  }) => errors === true ? red(formatFlag(\"errors\")) : errors ? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`)) : undefined,\n  \"module.providedExports\": (providedExports, {\n    formatFlag,\n    cyan\n  }) => {\n    if (Array.isArray(providedExports)) {\n      if (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n      return cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n    }\n  },\n  \"module.usedExports\": (usedExports, {\n    formatFlag,\n    cyan,\n    module\n  }) => {\n    if (usedExports !== true) {\n      if (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n      if (usedExports === false) return cyan(formatFlag(\"module unused\"));\n      if (Array.isArray(usedExports)) {\n        if (usedExports.length === 0) return cyan(formatFlag(\"no exports used\"));\n        const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n        if (providedExportsCount !== null && providedExportsCount === usedExports.length) {\n          return cyan(formatFlag(\"all exports used\"));\n        } else {\n          return cyan(formatFlag(`only some exports used: ${usedExports.join(\", \")}`));\n        }\n      }\n    }\n  },\n  \"module.optimizationBailout[]\": (optimizationBailout, {\n    yellow\n  }) => yellow(optimizationBailout),\n  \"module.issuerPath\": (issuerPath, {\n    module\n  }) => module.profile ? undefined : \"\",\n  \"module.profile\": profile => undefined,\n  \"module.filteredModules\": (filteredModules, {\n    module: {\n      modules\n    }\n  }) => filteredModules > 0 ? `${moreCount(modules, filteredModules)} nested ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"module.filteredReasons\": (filteredReasons, {\n    module: {\n      reasons\n    }\n  }) => filteredReasons > 0 ? `${moreCount(reasons, filteredReasons)} ${plural(filteredReasons, \"reason\", \"reasons\")}` : undefined,\n  \"module.filteredChildren\": (filteredChildren, {\n    module: {\n      children\n    }\n  }) => filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"module\", \"modules\")}` : undefined,\n  \"module.separator!\": () => \"\\n\",\n  \"moduleIssuer.id\": (id, {\n    formatModuleId\n  }) => formatModuleId(id),\n  \"moduleIssuer.profile.total\": (value, {\n    formatTime\n  }) => formatTime(value),\n  \"moduleReason.type\": type => type,\n  \"moduleReason.userRequest\": (userRequest, {\n    cyan\n  }) => cyan(getResourceName(userRequest)),\n  \"moduleReason.moduleId\": (moduleId, {\n    formatModuleId\n  }) => isValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n  \"moduleReason.module\": (module, {\n    magenta\n  }) => magenta(module),\n  \"moduleReason.loc\": loc => loc,\n  \"moduleReason.explanation\": (explanation, {\n    cyan\n  }) => cyan(explanation),\n  \"moduleReason.active\": (active, {\n    formatFlag\n  }) => active ? undefined : formatFlag(\"inactive\"),\n  \"moduleReason.resolvedModule\": (module, {\n    magenta\n  }) => magenta(module),\n  \"moduleReason.filteredChildren\": (filteredChildren, {\n    moduleReason: {\n      children\n    }\n  }) => filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"reason\", \"reasons\")}` : undefined,\n  \"module.profile.total\": (value, {\n    formatTime\n  }) => formatTime(value),\n  \"module.profile.resolving\": (value, {\n    formatTime\n  }) => `resolving: ${formatTime(value)}`,\n  \"module.profile.restoring\": (value, {\n    formatTime\n  }) => `restoring: ${formatTime(value)}`,\n  \"module.profile.integration\": (value, {\n    formatTime\n  }) => `integration: ${formatTime(value)}`,\n  \"module.profile.building\": (value, {\n    formatTime\n  }) => `building: ${formatTime(value)}`,\n  \"module.profile.storing\": (value, {\n    formatTime\n  }) => `storing: ${formatTime(value)}`,\n  \"module.profile.additionalResolving\": (value, {\n    formatTime\n  }) => value ? `additional resolving: ${formatTime(value)}` : undefined,\n  \"module.profile.additionalIntegration\": (value, {\n    formatTime\n  }) => value ? `additional integration: ${formatTime(value)}` : undefined,\n  \"chunkGroup.kind!\": (_, {\n    chunkGroupKind\n  }) => chunkGroupKind,\n  \"chunkGroup.separator!\": () => \"\\n\",\n  \"chunkGroup.name\": (name, {\n    bold\n  }) => bold(name),\n  \"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, {\n    formatFlag,\n    yellow\n  }) => isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n  \"chunkGroup.assetsSize\": (size, {\n    formatSize\n  }) => size ? formatSize(size) : undefined,\n  \"chunkGroup.auxiliaryAssetsSize\": (size, {\n    formatSize\n  }) => size ? `(${formatSize(size)})` : undefined,\n  \"chunkGroup.filteredAssets\": (n, {\n    chunkGroup: {\n      assets\n    }\n  }) => n > 0 ? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}` : undefined,\n  \"chunkGroup.filteredAuxiliaryAssets\": (n, {\n    chunkGroup: {\n      auxiliaryAssets\n    }\n  }) => n > 0 ? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(n, \"asset\", \"assets\")}` : undefined,\n  \"chunkGroup.is!\": () => \"=\",\n  \"chunkGroupAsset.name\": (asset, {\n    green\n  }) => green(asset),\n  \"chunkGroupAsset.size\": (size, {\n    formatSize,\n    chunkGroup\n  }) => chunkGroup.assets.length > 1 || chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0 ? formatSize(size) : undefined,\n  \"chunkGroup.children\": (children, context, printer) => Array.isArray(children) ? undefined : printer.print(context.type, Object.keys(children).map(key => ({\n    type: key,\n    children: children[key]\n  })), context),\n  \"chunkGroupChildGroup.type\": type => `${type}:`,\n  \"chunkGroupChild.assets[]\": (file, {\n    formatFilename\n  }) => formatFilename(file),\n  \"chunkGroupChild.chunks[]\": (id, {\n    formatChunkId\n  }) => formatChunkId(id),\n  \"chunkGroupChild.name\": name => name ? `(name: ${name})` : undefined,\n  \"chunk.id\": (id, {\n    formatChunkId\n  }) => formatChunkId(id),\n  \"chunk.files[]\": (file, {\n    formatFilename\n  }) => formatFilename(file),\n  \"chunk.names[]\": name => name,\n  \"chunk.idHints[]\": name => name,\n  \"chunk.runtime[]\": name => name,\n  \"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n  \"chunk.parents[]\": (parents, context) => context.formatChunkId(parents, \"parent\"),\n  \"chunk.siblings[]\": (siblings, context) => context.formatChunkId(siblings, \"sibling\"),\n  \"chunk.children[]\": (children, context) => context.formatChunkId(children, \"child\"),\n  \"chunk.childrenByOrder\": (childrenByOrder, context, printer) => Array.isArray(childrenByOrder) ? undefined : printer.print(context.type, Object.keys(childrenByOrder).map(key => ({\n    type: key,\n    children: childrenByOrder[key]\n  })), context),\n  \"chunk.childrenByOrder[].type\": type => `${type}:`,\n  \"chunk.childrenByOrder[].children[]\": (id, {\n    formatChunkId\n  }) => isValidId(id) ? formatChunkId(id) : undefined,\n  \"chunk.entry\": (entry, {\n    formatFlag,\n    yellow\n  }) => entry ? yellow(formatFlag(\"entry\")) : undefined,\n  \"chunk.initial\": (initial, {\n    formatFlag,\n    yellow\n  }) => initial ? yellow(formatFlag(\"initial\")) : undefined,\n  \"chunk.rendered\": (rendered, {\n    formatFlag,\n    green\n  }) => rendered ? green(formatFlag(\"rendered\")) : undefined,\n  \"chunk.recorded\": (recorded, {\n    formatFlag,\n    green\n  }) => recorded ? green(formatFlag(\"recorded\")) : undefined,\n  \"chunk.reason\": (reason, {\n    yellow\n  }) => reason ? yellow(reason) : undefined,\n  \"chunk.filteredModules\": (filteredModules, {\n    chunk: {\n      modules\n    }\n  }) => filteredModules > 0 ? `${moreCount(modules, filteredModules)} chunk ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"chunk.separator!\": () => \"\\n\",\n  \"chunkOrigin.request\": request => request,\n  \"chunkOrigin.moduleId\": (moduleId, {\n    formatModuleId\n  }) => isValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n  \"chunkOrigin.moduleName\": (moduleName, {\n    bold\n  }) => bold(moduleName),\n  \"chunkOrigin.loc\": loc => loc,\n  \"error.compilerPath\": (compilerPath, {\n    bold\n  }) => compilerPath ? bold(`(${compilerPath})`) : undefined,\n  \"error.chunkId\": (chunkId, {\n    formatChunkId\n  }) => isValidId(chunkId) ? formatChunkId(chunkId) : undefined,\n  \"error.chunkEntry\": (chunkEntry, {\n    formatFlag\n  }) => chunkEntry ? formatFlag(\"entry\") : undefined,\n  \"error.chunkInitial\": (chunkInitial, {\n    formatFlag\n  }) => chunkInitial ? formatFlag(\"initial\") : undefined,\n  \"error.file\": (file, {\n    bold\n  }) => bold(file),\n  \"error.moduleName\": (moduleName, {\n    bold\n  }) => {\n    return moduleName.includes(\"!\") ? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})` : `${bold(moduleName)}`;\n  },\n  \"error.loc\": (loc, {\n    green\n  }) => green(loc),\n  \"error.message\": (message, {\n    bold,\n    formatError\n  }) => message.includes(\"\\u001b[\") ? message : bold(formatError(message)),\n  \"error.details\": (details, {\n    formatError\n  }) => formatError(details),\n  \"error.filteredDetails\": filteredDetails => filteredDetails ? `+ ${filteredDetails} hidden lines` : undefined,\n  \"error.stack\": stack => stack,\n  \"error.moduleTrace\": moduleTrace => undefined,\n  \"error.separator!\": () => \"\\n\",\n  \"loggingEntry(error).loggingEntry.message\": (message, {\n    red\n  }) => mapLines(message, x => `<e> ${red(x)}`),\n  \"loggingEntry(warn).loggingEntry.message\": (message, {\n    yellow\n  }) => mapLines(message, x => `<w> ${yellow(x)}`),\n  \"loggingEntry(info).loggingEntry.message\": (message, {\n    green\n  }) => mapLines(message, x => `<i> ${green(x)}`),\n  \"loggingEntry(log).loggingEntry.message\": (message, {\n    bold\n  }) => mapLines(message, x => `    ${bold(x)}`),\n  \"loggingEntry(debug).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(trace).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(status).loggingEntry.message\": (message, {\n    magenta\n  }) => mapLines(message, x => `<s> ${magenta(x)}`),\n  \"loggingEntry(profile).loggingEntry.message\": (message, {\n    magenta\n  }) => mapLines(message, x => `<p> ${magenta(x)}`),\n  \"loggingEntry(profileEnd).loggingEntry.message\": (message, {\n    magenta\n  }) => mapLines(message, x => `</p> ${magenta(x)}`),\n  \"loggingEntry(time).loggingEntry.message\": (message, {\n    magenta\n  }) => mapLines(message, x => `<t> ${magenta(x)}`),\n  \"loggingEntry(group).loggingEntry.message\": (message, {\n    cyan\n  }) => mapLines(message, x => `<-> ${cyan(x)}`),\n  \"loggingEntry(groupCollapsed).loggingEntry.message\": (message, {\n    cyan\n  }) => mapLines(message, x => `<+> ${cyan(x)}`),\n  \"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n  \"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n  \"loggingEntry.trace[]\": trace => trace ? mapLines(trace, x => `| ${x}`) : undefined,\n  \"moduleTraceItem.originName\": originName => originName,\n  loggingGroup: loggingGroup => loggingGroup.entries.length === 0 ? \"\" : undefined,\n  \"loggingGroup.debug\": (flag, {\n    red\n  }) => flag ? red(\"DEBUG\") : undefined,\n  \"loggingGroup.name\": (name, {\n    bold\n  }) => bold(`LOG from ${name}`),\n  \"loggingGroup.separator!\": () => \"\\n\",\n  \"loggingGroup.filteredEntries\": filteredEntries => filteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n  \"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n  \"compilation.assets[]\": \"asset\",\n  \"compilation.modules[]\": \"module\",\n  \"compilation.chunks[]\": \"chunk\",\n  \"compilation.entrypoints[]\": \"chunkGroup\",\n  \"compilation.namedChunkGroups[]\": \"chunkGroup\",\n  \"compilation.errors[]\": \"error\",\n  \"compilation.warnings[]\": \"error\",\n  \"compilation.logging[]\": \"loggingGroup\",\n  \"compilation.children[]\": \"compilation\",\n  \"asset.related[]\": \"asset\",\n  \"asset.children[]\": \"asset\",\n  \"asset.chunks[]\": \"assetChunk\",\n  \"asset.auxiliaryChunks[]\": \"assetChunk\",\n  \"asset.chunkNames[]\": \"assetChunkName\",\n  \"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n  \"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n  \"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n  \"chunkGroup.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n  \"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n  \"module.modules[]\": \"module\",\n  \"module.children[]\": \"module\",\n  \"module.reasons[]\": \"moduleReason\",\n  \"moduleReason.children[]\": \"moduleReason\",\n  \"module.issuerPath[]\": \"moduleIssuer\",\n  \"chunk.origins[]\": \"chunkOrigin\",\n  \"chunk.modules[]\": \"module\",\n  \"loggingGroup.entries[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"loggingEntry.children[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"error.moduleTrace[]\": \"moduleTraceItem\",\n  \"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\nconst ERROR_PREFERRED_ORDER = [\"compilerPath\", \"chunkId\", \"chunkEntry\", \"chunkInitial\", \"file\", \"separator!\", \"moduleName\", \"loc\", \"separator!\", \"message\", \"separator!\", \"details\", \"separator!\", \"filteredDetails\", \"separator!\", \"stack\", \"separator!\", \"missing\", \"separator!\", \"moduleTrace\"];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n  compilation: [\"name\", \"hash\", \"version\", \"time\", \"builtAt\", \"env\", \"publicPath\", \"assets\", \"filteredAssets\", \"entrypoints\", \"namedChunkGroups\", \"chunks\", \"modules\", \"filteredModules\", \"children\", \"logging\", \"warnings\", \"warningsInChildren!\", \"filteredWarningDetailsCount\", \"errors\", \"errorsInChildren!\", \"filteredErrorDetailsCount\", \"summary!\", \"needAdditionalPass\"],\n  asset: [\"type\", \"name\", \"size\", \"chunks\", \"auxiliaryChunks\", \"emitted\", \"comparedForEmit\", \"cached\", \"info\", \"isOverSizeLimit\", \"chunkNames\", \"auxiliaryChunkNames\", \"chunkIdHints\", \"auxiliaryChunkIdHints\", \"related\", \"filteredRelated\", \"children\", \"filteredChildren\"],\n  \"asset.info\": [\"immutable\", \"sourceFilename\", \"javascriptModule\", \"development\", \"hotModuleReplacement\"],\n  chunkGroup: [\"kind!\", \"name\", \"isOverSizeLimit\", \"assetsSize\", \"auxiliaryAssetsSize\", \"is!\", \"assets\", \"filteredAssets\", \"auxiliaryAssets\", \"filteredAuxiliaryAssets\", \"separator!\", \"children\"],\n  chunkGroupAsset: [\"name\", \"size\"],\n  chunkGroupChildGroup: [\"type\", \"children\"],\n  chunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n  module: [\"type\", \"name\", \"identifier\", \"id\", \"layer\", \"sizes\", \"chunks\", \"depth\", \"cacheable\", \"orphan\", \"runtime\", \"optional\", \"dependent\", \"built\", \"codeGenerated\", \"cached\", \"assets\", \"failed\", \"warnings\", \"errors\", \"children\", \"filteredChildren\", \"providedExports\", \"usedExports\", \"optimizationBailout\", \"reasons\", \"filteredReasons\", \"issuerPath\", \"profile\", \"modules\", \"filteredModules\"],\n  moduleReason: [\"active\", \"type\", \"userRequest\", \"moduleId\", \"module\", \"resolvedModule\", \"loc\", \"explanation\", \"children\", \"filteredChildren\"],\n  \"module.profile\": [\"total\", \"separator!\", \"resolving\", \"restoring\", \"integration\", \"building\", \"storing\", \"additionalResolving\", \"additionalIntegration\"],\n  chunk: [\"id\", \"runtime\", \"files\", \"names\", \"idHints\", \"sizes\", \"parents\", \"siblings\", \"children\", \"childrenByOrder\", \"entry\", \"initial\", \"rendered\", \"recorded\", \"reason\", \"separator!\", \"origins\", \"separator!\", \"modules\", \"separator!\", \"filteredModules\"],\n  chunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n  error: ERROR_PREFERRED_ORDER,\n  warning: ERROR_PREFERRED_ORDER,\n  \"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n  loggingGroup: [\"debug\", \"name\", \"separator!\", \"entries\", \"separator!\", \"filteredEntries\"],\n  loggingEntry: [\"message\", \"trace\", \"children\"]\n};\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items => items.length > 0 ? `(${name}: ${items.filter(Boolean).join(\", \")})` : undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n  \"chunk.parents\": itemsJoinOneLine,\n  \"chunk.siblings\": itemsJoinOneLine,\n  \"chunk.children\": itemsJoinOneLine,\n  \"chunk.names\": itemsJoinCommaBrackets,\n  \"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n  \"chunk.files\": itemsJoinComma,\n  \"chunk.childrenByOrder\": itemsJoinOneLine,\n  \"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n  \"chunkGroup.assets\": itemsJoinOneLine,\n  \"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"chunkGroupChildGroup.children\": itemsJoinComma,\n  \"chunkGroupChild.assets\": itemsJoinOneLine,\n  \"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"asset.chunks\": itemsJoinComma,\n  \"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n  \"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n  \"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n  \"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"asset.auxiliaryChunkIdHints\": itemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n  \"module.chunks\": itemsJoinOneLine,\n  \"module.issuerPath\": items => items.filter(Boolean).map(item => `${item} ->`).join(\" \"),\n  \"compilation.errors\": itemsJoinMoreSpacing,\n  \"compilation.warnings\": itemsJoinMoreSpacing,\n  \"compilation.logging\": itemsJoinMoreSpacing,\n  \"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n  \"moduleTraceItem.dependencies\": itemsJoinOneLine,\n  \"loggingEntry.children\": items => indent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\nconst joinOneLine = items => items.map(item => item.content).filter(Boolean).join(\" \");\nconst joinInBrackets = items => {\n  const res = [];\n  let mode = 0;\n  for (const item of items) {\n    if (item.element === \"separator!\") {\n      switch (mode) {\n        case 0:\n        case 1:\n          mode += 2;\n          break;\n        case 4:\n          res.push(\")\");\n          mode = 3;\n          break;\n      }\n    }\n    if (!item.content) continue;\n    switch (mode) {\n      case 0:\n        mode = 1;\n        break;\n      case 1:\n        res.push(\" \");\n        break;\n      case 2:\n        res.push(\"(\");\n        mode = 4;\n        break;\n      case 3:\n        res.push(\" (\");\n        mode = 4;\n        break;\n      case 4:\n        res.push(\", \");\n        break;\n    }\n    res.push(item.content);\n  }\n  if (mode === 4) res.push(\")\");\n  return res.join(\"\");\n};\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n  const rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n  if (noPrefixInFirstLine) return rem;\n  const ind = str[0] === \"\\n\" ? \"\" : prefix;\n  return ind + rem;\n};\nconst joinExplicitNewLine = (items, indenter) => {\n  let firstInLine = true;\n  let first = true;\n  return items.map(item => {\n    if (!item || !item.content) return;\n    let content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n    if (firstInLine) {\n      content = content.replace(/^\\n+/, \"\");\n    }\n    if (!content) return;\n    first = false;\n    const noJoiner = firstInLine || content.startsWith(\"\\n\");\n    firstInLine = content.endsWith(\"\\n\");\n    return noJoiner ? content : \" \" + content;\n  }).filter(Boolean).join(\"\").trim();\n};\nconst joinError = error => (items, {\n  red,\n  yellow\n}) => `${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(items, \"\")}`;\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n  compilation: items => {\n    const result = [];\n    let lastNeedMore = false;\n    for (const item of items) {\n      if (!item.content) continue;\n      const needMoreSpace = item.element === \"warnings\" || item.element === \"filteredWarningDetailsCount\" || item.element === \"errors\" || item.element === \"filteredErrorDetailsCount\" || item.element === \"logging\";\n      if (result.length !== 0) {\n        result.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n      }\n      result.push(item.content);\n      lastNeedMore = needMoreSpace;\n    }\n    if (lastNeedMore) result.push(\"\\n\");\n    return result.join(\"\");\n  },\n  asset: items => joinExplicitNewLine(items.map(item => {\n    if ((item.element === \"related\" || item.element === \"children\") && item.content) {\n      return {\n        ...item,\n        content: `\\n${item.content}\\n`\n      };\n    }\n    return item;\n  }), \"  \"),\n  \"asset.info\": joinOneLine,\n  module: (items, {\n    module\n  }) => {\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"id\":\n          if (module.id === module.name) {\n            if (hasName) return false;\n            if (item.content) hasName = true;\n          }\n          break;\n        case \"name\":\n          if (hasName) return false;\n          if (item.content) hasName = true;\n          break;\n        case \"providedExports\":\n        case \"usedExports\":\n        case \"optimizationBailout\":\n        case \"reasons\":\n        case \"issuerPath\":\n        case \"profile\":\n        case \"children\":\n        case \"modules\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  chunk: items => {\n    let hasEntry = false;\n    return \"chunk \" + joinExplicitNewLine(items.filter(item => {\n      switch (item.element) {\n        case \"entry\":\n          if (item.content) hasEntry = true;\n          break;\n        case \"initial\":\n          if (hasEntry) return false;\n          break;\n      }\n      return true;\n    }), \"  \");\n  },\n  \"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n  chunkGroup: items => joinExplicitNewLine(items, \"  \"),\n  chunkGroupAsset: joinOneLine,\n  chunkGroupChildGroup: joinOneLine,\n  chunkGroupChild: joinOneLine,\n  // moduleReason: (items, { moduleReason }) => {\n  // \tlet hasName = false;\n  // \treturn joinOneLine(\n  // \t\titems.filter(item => {\n  // \t\t\tswitch (item.element) {\n  // \t\t\t\tcase \"moduleId\":\n  // \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n  // \t\t\t\t\t\thasName = true;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"module\":\n  // \t\t\t\t\tif (hasName) return false;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"resolvedModule\":\n  // \t\t\t\t\treturn (\n  // \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n  // \t\t\t\t\t\titem.content\n  // \t\t\t\t\t);\n  // \t\t\t}\n  // \t\t\treturn true;\n  // \t\t})\n  // \t);\n  // },\n  moduleReason: (items, {\n    moduleReason\n  }) => {\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"moduleId\":\n          if (moduleReason.moduleId === moduleReason.module && item.content) hasName = true;\n          break;\n        case \"module\":\n          if (hasName) return false;\n          break;\n        case \"resolvedModule\":\n          if (moduleReason.module === moduleReason.resolvedModule) return false;\n          break;\n        case \"children\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  \"module.profile\": joinInBrackets,\n  moduleIssuer: joinOneLine,\n  chunkOrigin: items => \"> \" + joinOneLine(items),\n  \"errors[].error\": joinError(true),\n  \"warnings[].error\": joinError(false),\n  loggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n  moduleTraceItem: items => \" @ \" + joinOneLine(items),\n  moduleTraceDependency: joinOneLine\n};\nconst AVAILABLE_COLORS = {\n  bold: \"\\u001b[1m\",\n  yellow: \"\\u001b[1m\\u001b[33m\",\n  red: \"\\u001b[1m\\u001b[31m\",\n  green: \"\\u001b[1m\\u001b[32m\",\n  cyan: \"\\u001b[1m\\u001b[36m\",\n  magenta: \"\\u001b[1m\\u001b[35m\"\n};\nconst AVAILABLE_FORMATS = {\n  formatChunkId: (id, {\n    yellow\n  }, direction) => {\n    switch (direction) {\n      case \"parent\":\n        return `<{${yellow(id)}}>`;\n      case \"sibling\":\n        return `={${yellow(id)}}=`;\n      case \"child\":\n        return `>{${yellow(id)}}<`;\n      default:\n        return `{${yellow(id)}}`;\n    }\n  },\n  formatModuleId: id => `[${id}]`,\n  formatFilename: (filename, {\n    green,\n    yellow\n  }, oversize) => (oversize ? yellow : green)(filename),\n  formatFlag: flag => `[${flag}]`,\n  formatLayer: layer => `(in ${layer})`,\n  formatSize: require(\"../SizeFormatHelpers\").formatSize,\n  formatDateTime: (dateTime, {\n    bold\n  }) => {\n    const d = new Date(dateTime);\n    const x = twoDigit;\n    const date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n    const time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n    return `${date} ${bold(time)}`;\n  },\n  formatTime: (time, {\n    timeReference,\n    bold,\n    green,\n    yellow,\n    red\n  }, boldQuantity) => {\n    const unit = \" ms\";\n    if (timeReference && time !== timeReference) {\n      const times = [timeReference / 2, timeReference / 4, timeReference / 8, timeReference / 16];\n      if (time < times[3]) return `${time}${unit}`;else if (time < times[2]) return bold(`${time}${unit}`);else if (time < times[1]) return green(`${time}${unit}`);else if (time < times[0]) return yellow(`${time}${unit}`);else return red(`${time}${unit}`);\n    } else {\n      return `${boldQuantity ? bold(time) : time}${unit}`;\n    }\n  },\n  formatError: (message, {\n    green,\n    yellow,\n    red\n  }) => {\n    if (message.includes(\"\\u001b[\")) return message;\n    const highlights = [{\n      regExp: /(Did you mean .+)/g,\n      format: green\n    }, {\n      regExp: /(Set 'mode' option to 'development' or 'production')/g,\n      format: green\n    }, {\n      regExp: /(\\(module has no exports\\))/g,\n      format: red\n    }, {\n      regExp: /\\(possible exports: (.+)\\)/g,\n      format: green\n    }, {\n      regExp: /(?:^|\\n)(.* doesn't exist)/g,\n      format: red\n    }, {\n      regExp: /('\\w+' option has not been set)/g,\n      format: red\n    }, {\n      regExp: /(Emitted value instead of an instance of Error)/g,\n      format: yellow\n    }, {\n      regExp: /(Used? .+ instead)/gi,\n      format: yellow\n    }, {\n      regExp: /\\b(deprecated|must|required)\\b/g,\n      format: yellow\n    }, {\n      regExp: /\\b(BREAKING CHANGE)\\b/gi,\n      format: red\n    }, {\n      regExp: /\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n      format: red\n    }];\n    for (const {\n      regExp,\n      format\n    } of highlights) {\n      message = message.replace(regExp, (match, content) => {\n        return match.replace(content, format(content));\n      });\n    }\n    return message;\n  }\n};\nconst RESULT_MODIFIER = {\n  \"module.modules\": result => {\n    return indent(result, \"| \");\n  }\n};\nconst createOrder = (array, preferredOrder) => {\n  const originalArray = array.slice();\n  const set = new Set(array);\n  const usedSet = new Set();\n  array.length = 0;\n  for (const element of preferredOrder) {\n    if (element.endsWith(\"!\") || set.has(element)) {\n      array.push(element);\n      usedSet.add(element);\n    }\n  }\n  for (const element of originalArray) {\n    if (!usedSet.has(element)) {\n      array.push(element);\n    }\n  }\n  return array;\n};\nclass DefaultStatsPrinterPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n      compilation.hooks.statsPrinter.tap(\"DefaultStatsPrinterPlugin\", (stats, options, context) => {\n        // Put colors into context\n        stats.hooks.print.for(\"compilation\").tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n          for (const color of Object.keys(AVAILABLE_COLORS)) {\n            let start;\n            if (options.colors) {\n              if (typeof options.colors === \"object\" && typeof options.colors[color] === \"string\") {\n                start = options.colors[color];\n              } else {\n                start = AVAILABLE_COLORS[color];\n              }\n            }\n            if (start) {\n              context[color] = str => `${start}${typeof str === \"string\" ? str.replace(/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g, `$1${start}`) : str}\\u001b[39m\\u001b[22m`;\n            } else {\n              context[color] = str => str;\n            }\n          }\n          for (const format of Object.keys(AVAILABLE_FORMATS)) {\n            context[format] = (content, ...args) => AVAILABLE_FORMATS[format](content, context, ...args);\n          }\n          context.timeReference = compilation.time;\n        });\n        for (const key of Object.keys(SIMPLE_PRINTERS)) {\n          stats.hooks.print.for(key).tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) => SIMPLE_PRINTERS[key](obj, ctx, stats));\n        }\n        for (const key of Object.keys(PREFERRED_ORDERS)) {\n          const preferredOrder = PREFERRED_ORDERS[key];\n          stats.hooks.sortElements.for(key).tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n            createOrder(elements, preferredOrder);\n          });\n        }\n        for (const key of Object.keys(ITEM_NAMES)) {\n          const itemName = ITEM_NAMES[key];\n          stats.hooks.getItemName.for(key).tap(\"DefaultStatsPrinterPlugin\", typeof itemName === \"string\" ? () => itemName : itemName);\n        }\n        for (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n          const joiner = SIMPLE_ITEMS_JOINER[key];\n          stats.hooks.printItems.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n          const joiner = SIMPLE_ELEMENT_JOINERS[key];\n          stats.hooks.printElements.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(RESULT_MODIFIER)) {\n          const modifier = RESULT_MODIFIER[key];\n          stats.hooks.result.for(key).tap(\"DefaultStatsPrinterPlugin\", modifier);\n        }\n      });\n    });\n  }\n}\nmodule.exports = DefaultStatsPrinterPlugin;","map":{"version":3,"names":["DATA_URI_CONTENT_LENGTH","MAX_MODULE_IDENTIFIER_LENGTH","plural","n","singular","printSizes","sizes","formatSize","keys","Object","length","map","key","join","getResourceName","resource","dataUrl","exec","len","slice","Math","min","getModuleName","name","prefix","truncatedResource","mapLines","str","fn","split","twoDigit","isValidId","id","moreCount","list","count","SIMPLE_PRINTERS","compilation.summary!","_","type","bold","green","red","yellow","formatDateTime","formatTime","compilation","hash","version","time","builtAt","errorsCount","warningsCount","root","warningsMessage","errorsMessage","timeMessage","hashMessage","builtAtMessage","versionMessage","nameMessage","subjectMessage","statusMessage","undefined","compilation.filteredErrorDetailsCount","compilation.env","env","JSON","stringify","compilation.publicPath","publicPath","compilation.entrypoints","entrypoints","context","printer","Array","isArray","print","values","chunkGroupKind","compilation.namedChunkGroups","namedChunkGroups","chunkGroups","filter","group","prototype","hasOwnProperty","call","compilation.assetsByChunkName","compilation.filteredModules","filteredModules","modules","compilation.filteredAssets","filteredAssets","assets","compilation.logging","logging","entries","value","compilation.warningsInChildren!","children","warnings","childWarnings","compilation.errorsInChildren!","errors","childErrors","asset.name","formatFilename","asset","isOverSizeLimit","asset.size","size","asset.emitted","emitted","formatFlag","asset.comparedForEmit","comparedForEmit","asset.cached","cached","asset.isOverSizeLimit","asset.info.immutable","immutable","asset.info.javascriptModule","javascriptModule","asset.info.sourceFilename","sourceFilename","asset.info.development","development","asset.info.hotModuleReplacement","hotModuleReplacement","asset.separator!","asset.filteredRelated","filteredRelated","related","asset.filteredChildren","filteredChildren","assetChunk","formatChunkId","assetChunkName","assetChunkIdHint","module.id","formatModuleId","module.name","identifier","module.layer","layer","formatLayer","module.chunks[]","module.depth","depth","module.cacheable","cacheable","module.orphan","orphan","module.runtime","runtime","module.optional","optional","module.dependent","dependent","cyan","module.built","built","module.codeGenerated","codeGenerated","module.buildTimeExecuted","buildTimeExecuted","module.cached","module.assets","magenta","module.warnings","module.errors","module.providedExports","providedExports","module.usedExports","usedExports","module","providedExportsCount","module.optimizationBailout[]","optimizationBailout","module.issuerPath","issuerPath","profile","module.filteredModules","module.filteredReasons","filteredReasons","reasons","module.filteredChildren","module.separator!","moduleIssuer.id","moduleIssuer.profile.total","moduleReason.userRequest","userRequest","moduleReason.moduleId","moduleId","moduleReason.module","loc","moduleReason.explanation","explanation","moduleReason.active","active","moduleReason.resolvedModule","moduleReason.filteredChildren","moduleReason","module.profile.total","module.profile.resolving","module.profile.restoring","module.profile.integration","module.profile.building","module.profile.storing","module.profile.additionalResolving","module.profile.additionalIntegration","chunkGroup.kind!","chunkGroup.separator!","chunkGroup.name","chunkGroup.isOverSizeLimit","chunkGroup.assetsSize","chunkGroup.auxiliaryAssetsSize","chunkGroup.filteredAssets","chunkGroup","chunkGroup.filteredAuxiliaryAssets","auxiliaryAssets","chunkGroup.is!","chunkGroupAsset.name","chunkGroupAsset.size","chunkGroup.children","chunkGroupChild.assets[]","file","chunkGroupChild.chunks[]","chunk.id","chunk.files[]","chunk.sizes","chunk.parents[]","parents","chunk.siblings[]","siblings","chunk.children[]","chunk.childrenByOrder","childrenByOrder","chunk.childrenByOrder[].children[]","chunk.entry","entry","chunk.initial","initial","chunk.rendered","rendered","chunk.recorded","recorded","chunk.reason","reason","chunk.filteredModules","chunk","chunk.separator!","request","chunkOrigin.moduleId","chunkOrigin.moduleName","moduleName","error.compilerPath","compilerPath","error.chunkId","chunkId","error.chunkEntry","chunkEntry","error.chunkInitial","chunkInitial","error.file","error.moduleName","includes","replace","error.loc","error.message","message","formatError","error.details","details","filteredDetails","stack","moduleTrace","error.separator!","loggingEntry(error).loggingEntry.message","x","loggingEntry(warn).loggingEntry.message","loggingEntry(info).loggingEntry.message","loggingEntry(log).loggingEntry.message","loggingEntry(status).loggingEntry.message","loggingEntry(profile).loggingEntry.message","loggingEntry(profileEnd).loggingEntry.message","loggingEntry(time).loggingEntry.message","loggingEntry(group).loggingEntry.message","loggingEntry(groupCollapsed).loggingEntry.message","loggingEntry(clear).loggingEntry","loggingEntry(groupCollapsed).loggingEntry.children","trace","originName","loggingGroup","loggingGroup.debug","flag","loggingGroup.name","loggingGroup.separator!","filteredEntries","ITEM_NAMES","logEntry","ERROR_PREFERRED_ORDER","PREFERRED_ORDERS","chunkGroupAsset","chunkGroupChildGroup","chunkGroupChild","chunkOrigin","error","warning","loggingEntry","itemsJoinOneLine","items","Boolean","itemsJoinOneLineBrackets","itemsJoinMoreSpacing","itemsJoinComma","itemsJoinCommaBrackets","itemsJoinCommaBracketsWithName","SIMPLE_ITEMS_JOINER","item","indent","joinOneLine","content","joinInBrackets","res","mode","element","push","noPrefixInFirstLine","rem","ind","joinExplicitNewLine","indenter","firstInLine","first","noJoiner","startsWith","endsWith","trim","joinError","SIMPLE_ELEMENT_JOINERS","result","lastNeedMore","needMoreSpace","hasName","hasEntry","resolvedModule","moduleIssuer","trimEnd","moduleTraceItem","moduleTraceDependency","AVAILABLE_COLORS","AVAILABLE_FORMATS","direction","filename","oversize","require","dateTime","d","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","timeReference","boldQuantity","unit","times","highlights","regExp","format","match","RESULT_MODIFIER","createOrder","array","preferredOrder","originalArray","set","Set","usedSet","has","add","DefaultStatsPrinterPlugin","apply","compiler","hooks","tap","statsPrinter","stats","options","for","color","start","colors","args","obj","ctx","sortElements","elements","itemName","getItemName","joiner","printItems","printElements","modifier","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/stats/DefaultStatsPrinterPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\n\nconst DATA_URI_CONTENT_LENGTH = 16;\nconst MAX_MODULE_IDENTIFIER_LENGTH = 80;\n\n/**\n * @param {number} n a number\n * @param {string} singular singular\n * @param {string} plural plural\n * @returns {string} if n is 1, singular, else plural\n */\nconst plural = (n, singular, plural) => (n === 1 ? singular : plural);\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, { formatSize = n => `${n}` }) => {\n\tconst keys = Object.keys(sizes);\n\tif (keys.length > 1) {\n\t\treturn keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n\t} else if (keys.length === 1) {\n\t\treturn formatSize(sizes[keys[0]]);\n\t}\n};\n\n/**\n * @param {string} resource resource\n * @returns {string} resource name for display\n */\nconst getResourceName = resource => {\n\tconst dataUrl = /^data:[^,]+,/.exec(resource);\n\tif (!dataUrl) return resource;\n\n\tconst len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n\tif (resource.length < len) return resource;\n\treturn `${resource.slice(\n\t\t0,\n\t\tMath.min(resource.length - /* '..'.length */ 2, len)\n\t)}..`;\n};\n\n/**\n * @param {string} name module name\n * @returns {[string,string]} prefix and module name\n */\nconst getModuleName = name => {\n\tconst [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n\n\tif (resource.length > MAX_MODULE_IDENTIFIER_LENGTH) {\n\t\tconst truncatedResource = `${resource.slice(\n\t\t\t0,\n\t\t\tMath.min(\n\t\t\t\tresource.length - /* '...(truncated)'.length */ 14,\n\t\t\t\tMAX_MODULE_IDENTIFIER_LENGTH\n\t\t\t)\n\t\t)}...(truncated)`;\n\n\t\treturn [prefix, getResourceName(truncatedResource)];\n\t}\n\n\treturn [prefix, getResourceName(resource)];\n};\n\n/**\n * @param {string} str string\n * @param {function(string): string} fn function to apply to each line\n * @returns {string} joined string\n */\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => (n >= 10 ? `${n}` : `0${n}`);\n\nconst isValidId = id => {\n\treturn typeof id === \"number\" || id;\n};\n\n/**\n * @template T\n * @param {Array<T>} list of items\n * @param {number} count number of items to show\n * @returns {string} string representation of list\n */\nconst moreCount = (list, count) => {\n\treturn list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n\t\"compilation.summary!\": (\n\t\t_,\n\t\t{\n\t\t\ttype,\n\t\t\tbold,\n\t\t\tgreen,\n\t\t\tred,\n\t\t\tyellow,\n\t\t\tformatDateTime,\n\t\t\tformatTime,\n\t\t\tcompilation: {\n\t\t\t\tname,\n\t\t\t\thash,\n\t\t\t\tversion,\n\t\t\t\ttime,\n\t\t\t\tbuiltAt,\n\t\t\t\terrorsCount,\n\t\t\t\twarningsCount\n\t\t\t}\n\t\t}\n\t) => {\n\t\tconst root = type === \"compilation.summary!\";\n\t\tconst warningsMessage =\n\t\t\twarningsCount > 0\n\t\t\t\t? yellow(\n\t\t\t\t\t\t`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`\n\t\t\t\t\t)\n\t\t\t\t: \"\";\n\t\tconst errorsMessage =\n\t\t\terrorsCount > 0\n\t\t\t\t? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`)\n\t\t\t\t: \"\";\n\t\tconst timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n\t\tconst hashMessage = hash ? ` (${hash})` : \"\";\n\t\tconst builtAtMessage =\n\t\t\troot && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n\t\tconst versionMessage = root && version ? `webpack ${version}` : \"\";\n\t\tconst nameMessage =\n\t\t\troot && name\n\t\t\t\t? bold(name)\n\t\t\t\t: name\n\t\t\t\t\t? `Child ${bold(name)}`\n\t\t\t\t\t: root\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: \"Child\";\n\t\tconst subjectMessage =\n\t\t\tnameMessage && versionMessage\n\t\t\t\t? `${nameMessage} (${versionMessage})`\n\t\t\t\t: versionMessage || nameMessage || \"webpack\";\n\t\tlet statusMessage;\n\t\tif (errorsMessage && warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n\t\t} else if (errorsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage}`;\n\t\t} else if (warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${warningsMessage}`;\n\t\t} else if (errorsCount === 0 && warningsCount === 0) {\n\t\t\tstatusMessage = `compiled ${green(\"successfully\")}`;\n\t\t} else {\n\t\t\tstatusMessage = `compiled`;\n\t\t}\n\t\tif (\n\t\t\tbuiltAtMessage ||\n\t\t\tversionMessage ||\n\t\t\terrorsMessage ||\n\t\t\twarningsMessage ||\n\t\t\t(errorsCount === 0 && warningsCount === 0) ||\n\t\t\ttimeMessage ||\n\t\t\thashMessage\n\t\t)\n\t\t\treturn `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n\t},\n\t\"compilation.filteredWarningDetailsCount\": count =>\n\t\tcount\n\t\t\t? `${count} ${plural(\n\t\t\t\t\tcount,\n\t\t\t\t\t\"warning has\",\n\t\t\t\t\t\"warnings have\"\n\t\t\t\t)} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t: undefined,\n\t\"compilation.filteredErrorDetailsCount\": (count, { yellow }) =>\n\t\tcount\n\t\t\t? yellow(\n\t\t\t\t\t`${count} ${plural(\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\"error has\",\n\t\t\t\t\t\t\"errors have\"\n\t\t\t\t\t)} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t\t)\n\t\t\t: undefined,\n\t\"compilation.env\": (env, { bold }) =>\n\t\tenv\n\t\t\t? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}`\n\t\t\t: undefined,\n\t\"compilation.publicPath\": (publicPath, { bold }) =>\n\t\t`PublicPath: ${bold(publicPath || \"(none)\")}`,\n\t\"compilation.entrypoints\": (entrypoints, context, printer) =>\n\t\tArray.isArray(entrypoints)\n\t\t\t? undefined\n\t\t\t: printer.print(context.type, Object.values(entrypoints), {\n\t\t\t\t\t...context,\n\t\t\t\t\tchunkGroupKind: \"Entrypoint\"\n\t\t\t\t}),\n\t\"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n\t\tif (!Array.isArray(namedChunkGroups)) {\n\t\t\tconst {\n\t\t\t\tcompilation: { entrypoints }\n\t\t\t} = context;\n\t\t\tlet chunkGroups = Object.values(namedChunkGroups);\n\t\t\tif (entrypoints) {\n\t\t\t\tchunkGroups = chunkGroups.filter(\n\t\t\t\t\tgroup =>\n\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(entrypoints, group.name)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn printer.print(context.type, chunkGroups, {\n\t\t\t\t...context,\n\t\t\t\tchunkGroupKind: \"Chunk Group\"\n\t\t\t});\n\t\t}\n\t},\n\t\"compilation.assetsByChunkName\": () => \"\",\n\n\t\"compilation.filteredModules\": (\n\t\tfilteredModules,\n\t\t{ compilation: { modules } }\n\t) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"compilation.filteredAssets\": (\n\t\tfilteredAssets,\n\t\t{ compilation: { assets } }\n\t) =>\n\t\tfilteredAssets > 0\n\t\t\t? `${moreCount(assets, filteredAssets)} ${plural(\n\t\t\t\t\tfilteredAssets,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"compilation.logging\": (logging, context, printer) =>\n\t\tArray.isArray(logging)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.entries(logging).map(([name, value]) => ({ ...value, name })),\n\t\t\t\t\tcontext\n\t\t\t\t),\n\t\"compilation.warningsInChildren!\": (_, { yellow, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.warningsCount > 0 &&\n\t\t\tcompilation.warnings\n\t\t) {\n\t\t\tconst childWarnings =\n\t\t\t\tcompilation.warningsCount - compilation.warnings.length;\n\t\t\tif (childWarnings > 0) {\n\t\t\t\treturn yellow(\n\t\t\t\t\t`${childWarnings} ${plural(\n\t\t\t\t\t\tchildWarnings,\n\t\t\t\t\t\t\"WARNING\",\n\t\t\t\t\t\t\"WARNINGS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\"compilation.errorsInChildren!\": (_, { red, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.errorsCount > 0 &&\n\t\t\tcompilation.errors\n\t\t) {\n\t\t\tconst childErrors = compilation.errorsCount - compilation.errors.length;\n\t\t\tif (childErrors > 0) {\n\t\t\t\treturn red(\n\t\t\t\t\t`${childErrors} ${plural(\n\t\t\t\t\t\tchildErrors,\n\t\t\t\t\t\t\"ERROR\",\n\t\t\t\t\t\t\"ERRORS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\t\"asset.type\": type => type,\n\t\"asset.name\": (name, { formatFilename, asset: { isOverSizeLimit } }) =>\n\t\tformatFilename(name, isOverSizeLimit),\n\t\"asset.size\": (\n\t\tsize,\n\t\t{ asset: { isOverSizeLimit }, yellow, green, formatSize }\n\t) => (isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size)),\n\t\"asset.emitted\": (emitted, { green, formatFlag }) =>\n\t\temitted ? green(formatFlag(\"emitted\")) : undefined,\n\t\"asset.comparedForEmit\": (comparedForEmit, { yellow, formatFlag }) =>\n\t\tcomparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined,\n\t\"asset.cached\": (cached, { green, formatFlag }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"asset.isOverSizeLimit\": (isOverSizeLimit, { yellow, formatFlag }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\n\t\"asset.info.immutable\": (immutable, { green, formatFlag }) =>\n\t\timmutable ? green(formatFlag(\"immutable\")) : undefined,\n\t\"asset.info.javascriptModule\": (javascriptModule, { formatFlag }) =>\n\t\tjavascriptModule ? formatFlag(\"javascript module\") : undefined,\n\t\"asset.info.sourceFilename\": (sourceFilename, { formatFlag }) =>\n\t\tsourceFilename\n\t\t\t? formatFlag(\n\t\t\t\t\tsourceFilename === true\n\t\t\t\t\t\t? \"from source file\"\n\t\t\t\t\t\t: `from: ${sourceFilename}`\n\t\t\t\t)\n\t\t\t: undefined,\n\t\"asset.info.development\": (development, { green, formatFlag }) =>\n\t\tdevelopment ? green(formatFlag(\"dev\")) : undefined,\n\t\"asset.info.hotModuleReplacement\": (\n\t\thotModuleReplacement,\n\t\t{ green, formatFlag }\n\t) => (hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined),\n\t\"asset.separator!\": () => \"\\n\",\n\t\"asset.filteredRelated\": (filteredRelated, { asset: { related } }) =>\n\t\tfilteredRelated > 0\n\t\t\t? `${moreCount(related, filteredRelated)} related ${plural(\n\t\t\t\t\tfilteredRelated,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"asset.filteredChildren\": (filteredChildren, { asset: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\n\tassetChunk: (id, { formatChunkId }) => formatChunkId(id),\n\n\tassetChunkName: name => name,\n\tassetChunkIdHint: name => name,\n\n\t\"module.type\": type => (type !== \"module\" ? type : undefined),\n\t\"module.id\": (id, { formatModuleId }) =>\n\t\tisValidId(id) ? formatModuleId(id) : undefined,\n\t\"module.name\": (name, { bold }) => {\n\t\tconst [prefix, resource] = getModuleName(name);\n\t\treturn `${prefix || \"\"}${bold(resource || \"\")}`;\n\t},\n\t\"module.identifier\": identifier => undefined,\n\t\"module.layer\": (layer, { formatLayer }) =>\n\t\tlayer ? formatLayer(layer) : undefined,\n\t\"module.sizes\": printSizes,\n\t\"module.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"module.depth\": (depth, { formatFlag }) =>\n\t\tdepth !== null ? formatFlag(`depth ${depth}`) : undefined,\n\t\"module.cacheable\": (cacheable, { formatFlag, red }) =>\n\t\tcacheable === false ? red(formatFlag(\"not cacheable\")) : undefined,\n\t\"module.orphan\": (orphan, { formatFlag, yellow }) =>\n\t\torphan ? yellow(formatFlag(\"orphan\")) : undefined,\n\t\"module.runtime\": (runtime, { formatFlag, yellow }) =>\n\t\truntime ? yellow(formatFlag(\"runtime\")) : undefined,\n\t\"module.optional\": (optional, { formatFlag, yellow }) =>\n\t\toptional ? yellow(formatFlag(\"optional\")) : undefined,\n\t\"module.dependent\": (dependent, { formatFlag, cyan }) =>\n\t\tdependent ? cyan(formatFlag(\"dependent\")) : undefined,\n\t\"module.built\": (built, { formatFlag, yellow }) =>\n\t\tbuilt ? yellow(formatFlag(\"built\")) : undefined,\n\t\"module.codeGenerated\": (codeGenerated, { formatFlag, yellow }) =>\n\t\tcodeGenerated ? yellow(formatFlag(\"code generated\")) : undefined,\n\t\"module.buildTimeExecuted\": (buildTimeExecuted, { formatFlag, green }) =>\n\t\tbuildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined,\n\t\"module.cached\": (cached, { formatFlag, green }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"module.assets\": (assets, { formatFlag, magenta }) =>\n\t\tassets && assets.length\n\t\t\t? magenta(\n\t\t\t\t\tformatFlag(\n\t\t\t\t\t\t`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t: undefined,\n\t\"module.warnings\": (warnings, { formatFlag, yellow }) =>\n\t\twarnings === true\n\t\t\t? yellow(formatFlag(\"warnings\"))\n\t\t\t: warnings\n\t\t\t\t? yellow(\n\t\t\t\t\t\tformatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)\n\t\t\t\t\t)\n\t\t\t\t: undefined,\n\t\"module.errors\": (errors, { formatFlag, red }) =>\n\t\terrors === true\n\t\t\t? red(formatFlag(\"errors\"))\n\t\t\t: errors\n\t\t\t\t? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`))\n\t\t\t\t: undefined,\n\t\"module.providedExports\": (providedExports, { formatFlag, cyan }) => {\n\t\tif (Array.isArray(providedExports)) {\n\t\t\tif (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n\t\t\treturn cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n\t\t}\n\t},\n\t\"module.usedExports\": (usedExports, { formatFlag, cyan, module }) => {\n\t\tif (usedExports !== true) {\n\t\t\tif (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n\t\t\tif (usedExports === false) return cyan(formatFlag(\"module unused\"));\n\t\t\tif (Array.isArray(usedExports)) {\n\t\t\t\tif (usedExports.length === 0)\n\t\t\t\t\treturn cyan(formatFlag(\"no exports used\"));\n\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t: null;\n\t\t\t\tif (\n\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\tprovidedExportsCount === usedExports.length\n\t\t\t\t) {\n\t\t\t\t\treturn cyan(formatFlag(\"all exports used\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn cyan(\n\t\t\t\t\t\tformatFlag(`only some exports used: ${usedExports.join(\", \")}`)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"module.optimizationBailout[]\": (optimizationBailout, { yellow }) =>\n\t\tyellow(optimizationBailout),\n\t\"module.issuerPath\": (issuerPath, { module }) =>\n\t\tmodule.profile ? undefined : \"\",\n\t\"module.profile\": profile => undefined,\n\t\"module.filteredModules\": (filteredModules, { module: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} nested ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"module.filteredReasons\": (filteredReasons, { module: { reasons } }) =>\n\t\tfilteredReasons > 0\n\t\t\t? `${moreCount(reasons, filteredReasons)} ${plural(\n\t\t\t\t\tfilteredReasons,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"module.filteredChildren\": (filteredChildren, { module: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"module.separator!\": () => \"\\n\",\n\n\t\"moduleIssuer.id\": (id, { formatModuleId }) => formatModuleId(id),\n\t\"moduleIssuer.profile.total\": (value, { formatTime }) => formatTime(value),\n\n\t\"moduleReason.type\": type => type,\n\t\"moduleReason.userRequest\": (userRequest, { cyan }) =>\n\t\tcyan(getResourceName(userRequest)),\n\t\"moduleReason.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"moduleReason.module\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.loc\": loc => loc,\n\t\"moduleReason.explanation\": (explanation, { cyan }) => cyan(explanation),\n\t\"moduleReason.active\": (active, { formatFlag }) =>\n\t\tactive ? undefined : formatFlag(\"inactive\"),\n\t\"moduleReason.resolvedModule\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.filteredChildren\": (\n\t\tfilteredChildren,\n\t\t{ moduleReason: { children } }\n\t) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\n\t\"module.profile.total\": (value, { formatTime }) => formatTime(value),\n\t\"module.profile.resolving\": (value, { formatTime }) =>\n\t\t`resolving: ${formatTime(value)}`,\n\t\"module.profile.restoring\": (value, { formatTime }) =>\n\t\t`restoring: ${formatTime(value)}`,\n\t\"module.profile.integration\": (value, { formatTime }) =>\n\t\t`integration: ${formatTime(value)}`,\n\t\"module.profile.building\": (value, { formatTime }) =>\n\t\t`building: ${formatTime(value)}`,\n\t\"module.profile.storing\": (value, { formatTime }) =>\n\t\t`storing: ${formatTime(value)}`,\n\t\"module.profile.additionalResolving\": (value, { formatTime }) =>\n\t\tvalue ? `additional resolving: ${formatTime(value)}` : undefined,\n\t\"module.profile.additionalIntegration\": (value, { formatTime }) =>\n\t\tvalue ? `additional integration: ${formatTime(value)}` : undefined,\n\n\t\"chunkGroup.kind!\": (_, { chunkGroupKind }) => chunkGroupKind,\n\t\"chunkGroup.separator!\": () => \"\\n\",\n\t\"chunkGroup.name\": (name, { bold }) => bold(name),\n\t\"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, { formatFlag, yellow }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\t\"chunkGroup.assetsSize\": (size, { formatSize }) =>\n\t\tsize ? formatSize(size) : undefined,\n\t\"chunkGroup.auxiliaryAssetsSize\": (size, { formatSize }) =>\n\t\tsize ? `(${formatSize(size)})` : undefined,\n\t\"chunkGroup.filteredAssets\": (n, { chunkGroup: { assets } }) =>\n\t\tn > 0\n\t\t\t? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}`\n\t\t\t: undefined,\n\t\"chunkGroup.filteredAuxiliaryAssets\": (\n\t\tn,\n\t\t{ chunkGroup: { auxiliaryAssets } }\n\t) =>\n\t\tn > 0\n\t\t\t? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(\n\t\t\t\t\tn,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"chunkGroup.is!\": () => \"=\",\n\t\"chunkGroupAsset.name\": (asset, { green }) => green(asset),\n\t\"chunkGroupAsset.size\": (size, { formatSize, chunkGroup }) =>\n\t\tchunkGroup.assets.length > 1 ||\n\t\t(chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0)\n\t\t\t? formatSize(size)\n\t\t\t: undefined,\n\t\"chunkGroup.children\": (children, context, printer) =>\n\t\tArray.isArray(children)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(children).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: children[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t\t),\n\t\"chunkGroupChildGroup.type\": type => `${type}:`,\n\t\"chunkGroupChild.assets[]\": (file, { formatFilename }) =>\n\t\tformatFilename(file),\n\t\"chunkGroupChild.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunkGroupChild.name\": name => (name ? `(name: ${name})` : undefined),\n\n\t\"chunk.id\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunk.files[]\": (file, { formatFilename }) => formatFilename(file),\n\t\"chunk.names[]\": name => name,\n\t\"chunk.idHints[]\": name => name,\n\t\"chunk.runtime[]\": name => name,\n\t\"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n\t\"chunk.parents[]\": (parents, context) =>\n\t\tcontext.formatChunkId(parents, \"parent\"),\n\t\"chunk.siblings[]\": (siblings, context) =>\n\t\tcontext.formatChunkId(siblings, \"sibling\"),\n\t\"chunk.children[]\": (children, context) =>\n\t\tcontext.formatChunkId(children, \"child\"),\n\t\"chunk.childrenByOrder\": (childrenByOrder, context, printer) =>\n\t\tArray.isArray(childrenByOrder)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(childrenByOrder).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: childrenByOrder[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t\t),\n\t\"chunk.childrenByOrder[].type\": type => `${type}:`,\n\t\"chunk.childrenByOrder[].children[]\": (id, { formatChunkId }) =>\n\t\tisValidId(id) ? formatChunkId(id) : undefined,\n\t\"chunk.entry\": (entry, { formatFlag, yellow }) =>\n\t\tentry ? yellow(formatFlag(\"entry\")) : undefined,\n\t\"chunk.initial\": (initial, { formatFlag, yellow }) =>\n\t\tinitial ? yellow(formatFlag(\"initial\")) : undefined,\n\t\"chunk.rendered\": (rendered, { formatFlag, green }) =>\n\t\trendered ? green(formatFlag(\"rendered\")) : undefined,\n\t\"chunk.recorded\": (recorded, { formatFlag, green }) =>\n\t\trecorded ? green(formatFlag(\"recorded\")) : undefined,\n\t\"chunk.reason\": (reason, { yellow }) => (reason ? yellow(reason) : undefined),\n\t\"chunk.filteredModules\": (filteredModules, { chunk: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} chunk ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\"chunk.separator!\": () => \"\\n\",\n\n\t\"chunkOrigin.request\": request => request,\n\t\"chunkOrigin.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"chunkOrigin.moduleName\": (moduleName, { bold }) => bold(moduleName),\n\t\"chunkOrigin.loc\": loc => loc,\n\n\t\"error.compilerPath\": (compilerPath, { bold }) =>\n\t\tcompilerPath ? bold(`(${compilerPath})`) : undefined,\n\t\"error.chunkId\": (chunkId, { formatChunkId }) =>\n\t\tisValidId(chunkId) ? formatChunkId(chunkId) : undefined,\n\t\"error.chunkEntry\": (chunkEntry, { formatFlag }) =>\n\t\tchunkEntry ? formatFlag(\"entry\") : undefined,\n\t\"error.chunkInitial\": (chunkInitial, { formatFlag }) =>\n\t\tchunkInitial ? formatFlag(\"initial\") : undefined,\n\t\"error.file\": (file, { bold }) => bold(file),\n\t\"error.moduleName\": (moduleName, { bold }) => {\n\t\treturn moduleName.includes(\"!\")\n\t\t\t? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})`\n\t\t\t: `${bold(moduleName)}`;\n\t},\n\t\"error.loc\": (loc, { green }) => green(loc),\n\t\"error.message\": (message, { bold, formatError }) =>\n\t\tmessage.includes(\"\\u001b[\") ? message : bold(formatError(message)),\n\t\"error.details\": (details, { formatError }) => formatError(details),\n\t\"error.filteredDetails\": filteredDetails =>\n\t\tfilteredDetails ? `+ ${filteredDetails} hidden lines` : undefined,\n\t\"error.stack\": stack => stack,\n\t\"error.moduleTrace\": moduleTrace => undefined,\n\t\"error.separator!\": () => \"\\n\",\n\n\t\"loggingEntry(error).loggingEntry.message\": (message, { red }) =>\n\t\tmapLines(message, x => `<e> ${red(x)}`),\n\t\"loggingEntry(warn).loggingEntry.message\": (message, { yellow }) =>\n\t\tmapLines(message, x => `<w> ${yellow(x)}`),\n\t\"loggingEntry(info).loggingEntry.message\": (message, { green }) =>\n\t\tmapLines(message, x => `<i> ${green(x)}`),\n\t\"loggingEntry(log).loggingEntry.message\": (message, { bold }) =>\n\t\tmapLines(message, x => `    ${bold(x)}`),\n\t\"loggingEntry(debug).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(trace).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(status).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<s> ${magenta(x)}`),\n\t\"loggingEntry(profile).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<p> ${magenta(x)}`),\n\t\"loggingEntry(profileEnd).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `</p> ${magenta(x)}`),\n\t\"loggingEntry(time).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<t> ${magenta(x)}`),\n\t\"loggingEntry(group).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<-> ${cyan(x)}`),\n\t\"loggingEntry(groupCollapsed).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<+> ${cyan(x)}`),\n\t\"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n\t\"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n\t\"loggingEntry.trace[]\": trace =>\n\t\ttrace ? mapLines(trace, x => `| ${x}`) : undefined,\n\n\t\"moduleTraceItem.originName\": originName => originName,\n\n\tloggingGroup: loggingGroup =>\n\t\tloggingGroup.entries.length === 0 ? \"\" : undefined,\n\t\"loggingGroup.debug\": (flag, { red }) => (flag ? red(\"DEBUG\") : undefined),\n\t\"loggingGroup.name\": (name, { bold }) => bold(`LOG from ${name}`),\n\t\"loggingGroup.separator!\": () => \"\\n\",\n\t\"loggingGroup.filteredEntries\": filteredEntries =>\n\t\tfilteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n\n\t\"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n\t\"compilation.assets[]\": \"asset\",\n\t\"compilation.modules[]\": \"module\",\n\t\"compilation.chunks[]\": \"chunk\",\n\t\"compilation.entrypoints[]\": \"chunkGroup\",\n\t\"compilation.namedChunkGroups[]\": \"chunkGroup\",\n\t\"compilation.errors[]\": \"error\",\n\t\"compilation.warnings[]\": \"error\",\n\t\"compilation.logging[]\": \"loggingGroup\",\n\t\"compilation.children[]\": \"compilation\",\n\t\"asset.related[]\": \"asset\",\n\t\"asset.children[]\": \"asset\",\n\t\"asset.chunks[]\": \"assetChunk\",\n\t\"asset.auxiliaryChunks[]\": \"assetChunk\",\n\t\"asset.chunkNames[]\": \"assetChunkName\",\n\t\"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n\t\"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n\t\"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n\t\"chunkGroup.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n\t\"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n\t\"module.modules[]\": \"module\",\n\t\"module.children[]\": \"module\",\n\t\"module.reasons[]\": \"moduleReason\",\n\t\"moduleReason.children[]\": \"moduleReason\",\n\t\"module.issuerPath[]\": \"moduleIssuer\",\n\t\"chunk.origins[]\": \"chunkOrigin\",\n\t\"chunk.modules[]\": \"module\",\n\t\"loggingGroup.entries[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"loggingEntry.children[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"error.moduleTrace[]\": \"moduleTraceItem\",\n\t\"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\nconst ERROR_PREFERRED_ORDER = [\n\t\"compilerPath\",\n\t\"chunkId\",\n\t\"chunkEntry\",\n\t\"chunkInitial\",\n\t\"file\",\n\t\"separator!\",\n\t\"moduleName\",\n\t\"loc\",\n\t\"separator!\",\n\t\"message\",\n\t\"separator!\",\n\t\"details\",\n\t\"separator!\",\n\t\"filteredDetails\",\n\t\"separator!\",\n\t\"stack\",\n\t\"separator!\",\n\t\"missing\",\n\t\"separator!\",\n\t\"moduleTrace\"\n];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n\tcompilation: [\n\t\t\"name\",\n\t\t\"hash\",\n\t\t\"version\",\n\t\t\"time\",\n\t\t\"builtAt\",\n\t\t\"env\",\n\t\t\"publicPath\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"entrypoints\",\n\t\t\"namedChunkGroups\",\n\t\t\"chunks\",\n\t\t\"modules\",\n\t\t\"filteredModules\",\n\t\t\"children\",\n\t\t\"logging\",\n\t\t\"warnings\",\n\t\t\"warningsInChildren!\",\n\t\t\"filteredWarningDetailsCount\",\n\t\t\"errors\",\n\t\t\"errorsInChildren!\",\n\t\t\"filteredErrorDetailsCount\",\n\t\t\"summary!\",\n\t\t\"needAdditionalPass\"\n\t],\n\tasset: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"size\",\n\t\t\"chunks\",\n\t\t\"auxiliaryChunks\",\n\t\t\"emitted\",\n\t\t\"comparedForEmit\",\n\t\t\"cached\",\n\t\t\"info\",\n\t\t\"isOverSizeLimit\",\n\t\t\"chunkNames\",\n\t\t\"auxiliaryChunkNames\",\n\t\t\"chunkIdHints\",\n\t\t\"auxiliaryChunkIdHints\",\n\t\t\"related\",\n\t\t\"filteredRelated\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"asset.info\": [\n\t\t\"immutable\",\n\t\t\"sourceFilename\",\n\t\t\"javascriptModule\",\n\t\t\"development\",\n\t\t\"hotModuleReplacement\"\n\t],\n\tchunkGroup: [\n\t\t\"kind!\",\n\t\t\"name\",\n\t\t\"isOverSizeLimit\",\n\t\t\"assetsSize\",\n\t\t\"auxiliaryAssetsSize\",\n\t\t\"is!\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"auxiliaryAssets\",\n\t\t\"filteredAuxiliaryAssets\",\n\t\t\"separator!\",\n\t\t\"children\"\n\t],\n\tchunkGroupAsset: [\"name\", \"size\"],\n\tchunkGroupChildGroup: [\"type\", \"children\"],\n\tchunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n\tmodule: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"identifier\",\n\t\t\"id\",\n\t\t\"layer\",\n\t\t\"sizes\",\n\t\t\"chunks\",\n\t\t\"depth\",\n\t\t\"cacheable\",\n\t\t\"orphan\",\n\t\t\"runtime\",\n\t\t\"optional\",\n\t\t\"dependent\",\n\t\t\"built\",\n\t\t\"codeGenerated\",\n\t\t\"cached\",\n\t\t\"assets\",\n\t\t\"failed\",\n\t\t\"warnings\",\n\t\t\"errors\",\n\t\t\"children\",\n\t\t\"filteredChildren\",\n\t\t\"providedExports\",\n\t\t\"usedExports\",\n\t\t\"optimizationBailout\",\n\t\t\"reasons\",\n\t\t\"filteredReasons\",\n\t\t\"issuerPath\",\n\t\t\"profile\",\n\t\t\"modules\",\n\t\t\"filteredModules\"\n\t],\n\tmoduleReason: [\n\t\t\"active\",\n\t\t\"type\",\n\t\t\"userRequest\",\n\t\t\"moduleId\",\n\t\t\"module\",\n\t\t\"resolvedModule\",\n\t\t\"loc\",\n\t\t\"explanation\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"module.profile\": [\n\t\t\"total\",\n\t\t\"separator!\",\n\t\t\"resolving\",\n\t\t\"restoring\",\n\t\t\"integration\",\n\t\t\"building\",\n\t\t\"storing\",\n\t\t\"additionalResolving\",\n\t\t\"additionalIntegration\"\n\t],\n\tchunk: [\n\t\t\"id\",\n\t\t\"runtime\",\n\t\t\"files\",\n\t\t\"names\",\n\t\t\"idHints\",\n\t\t\"sizes\",\n\t\t\"parents\",\n\t\t\"siblings\",\n\t\t\"children\",\n\t\t\"childrenByOrder\",\n\t\t\"entry\",\n\t\t\"initial\",\n\t\t\"rendered\",\n\t\t\"recorded\",\n\t\t\"reason\",\n\t\t\"separator!\",\n\t\t\"origins\",\n\t\t\"separator!\",\n\t\t\"modules\",\n\t\t\"separator!\",\n\t\t\"filteredModules\"\n\t],\n\tchunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n\terror: ERROR_PREFERRED_ORDER,\n\twarning: ERROR_PREFERRED_ORDER,\n\t\"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n\tloggingGroup: [\n\t\t\"debug\",\n\t\t\"name\",\n\t\t\"separator!\",\n\t\t\"entries\",\n\t\t\"separator!\",\n\t\t\"filteredEntries\"\n\t],\n\tloggingEntry: [\"message\", \"trace\", \"children\"]\n};\n\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items =>\n\titems.length > 0\n\t\t? `(${name}: ${items.filter(Boolean).join(\", \")})`\n\t\t: undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n\t\"chunk.parents\": itemsJoinOneLine,\n\t\"chunk.siblings\": itemsJoinOneLine,\n\t\"chunk.children\": itemsJoinOneLine,\n\t\"chunk.names\": itemsJoinCommaBrackets,\n\t\"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n\t\"chunk.files\": itemsJoinComma,\n\t\"chunk.childrenByOrder\": itemsJoinOneLine,\n\t\"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n\t\"chunkGroup.assets\": itemsJoinOneLine,\n\t\"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"chunkGroupChildGroup.children\": itemsJoinComma,\n\t\"chunkGroupChild.assets\": itemsJoinOneLine,\n\t\"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"asset.chunks\": itemsJoinComma,\n\t\"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n\t\"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n\t\"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n\t\"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"asset.auxiliaryChunkIdHints\":\n\t\titemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n\t\"module.chunks\": itemsJoinOneLine,\n\t\"module.issuerPath\": items =>\n\t\titems\n\t\t\t.filter(Boolean)\n\t\t\t.map(item => `${item} ->`)\n\t\t\t.join(\" \"),\n\t\"compilation.errors\": itemsJoinMoreSpacing,\n\t\"compilation.warnings\": itemsJoinMoreSpacing,\n\t\"compilation.logging\": itemsJoinMoreSpacing,\n\t\"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n\t\"moduleTraceItem.dependencies\": itemsJoinOneLine,\n\t\"loggingEntry.children\": items =>\n\t\tindent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\n\nconst joinOneLine = items =>\n\titems\n\t\t.map(item => item.content)\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n\nconst joinInBrackets = items => {\n\tconst res = [];\n\tlet mode = 0;\n\tfor (const item of items) {\n\t\tif (item.element === \"separator!\") {\n\t\t\tswitch (mode) {\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\t\tmode += 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tres.push(\")\");\n\t\t\t\t\tmode = 3;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!item.content) continue;\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\tmode = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres.push(\" \");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres.push(\"(\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres.push(\" (\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tres.push(\", \");\n\t\t\t\tbreak;\n\t\t}\n\t\tres.push(item.content);\n\t}\n\tif (mode === 4) res.push(\")\");\n\treturn res.join(\"\");\n};\n\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n\tconst rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\tif (noPrefixInFirstLine) return rem;\n\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\treturn ind + rem;\n};\n\nconst joinExplicitNewLine = (items, indenter) => {\n\tlet firstInLine = true;\n\tlet first = true;\n\treturn items\n\t\t.map(item => {\n\t\t\tif (!item || !item.content) return;\n\t\t\tlet content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n\t\t\tif (firstInLine) {\n\t\t\t\tcontent = content.replace(/^\\n+/, \"\");\n\t\t\t}\n\t\t\tif (!content) return;\n\t\t\tfirst = false;\n\t\t\tconst noJoiner = firstInLine || content.startsWith(\"\\n\");\n\t\t\tfirstInLine = content.endsWith(\"\\n\");\n\t\t\treturn noJoiner ? content : \" \" + content;\n\t\t})\n\t\t.filter(Boolean)\n\t\t.join(\"\")\n\t\t.trim();\n};\n\nconst joinError =\n\terror =>\n\t(items, { red, yellow }) =>\n\t\t`${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(\n\t\t\titems,\n\t\t\t\"\"\n\t\t)}`;\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n\tcompilation: items => {\n\t\tconst result = [];\n\t\tlet lastNeedMore = false;\n\t\tfor (const item of items) {\n\t\t\tif (!item.content) continue;\n\t\t\tconst needMoreSpace =\n\t\t\t\titem.element === \"warnings\" ||\n\t\t\t\titem.element === \"filteredWarningDetailsCount\" ||\n\t\t\t\titem.element === \"errors\" ||\n\t\t\t\titem.element === \"filteredErrorDetailsCount\" ||\n\t\t\t\titem.element === \"logging\";\n\t\t\tif (result.length !== 0) {\n\t\t\t\tresult.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n\t\t\t}\n\t\t\tresult.push(item.content);\n\t\t\tlastNeedMore = needMoreSpace;\n\t\t}\n\t\tif (lastNeedMore) result.push(\"\\n\");\n\t\treturn result.join(\"\");\n\t},\n\tasset: items =>\n\t\tjoinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tif (\n\t\t\t\t\t(item.element === \"related\" || item.element === \"children\") &&\n\t\t\t\t\titem.content\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t),\n\t\"asset.info\": joinOneLine,\n\tmodule: (items, { module }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\t\tif (module.id === module.name) {\n\t\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"providedExports\":\n\t\t\t\t\tcase \"usedExports\":\n\t\t\t\t\tcase \"optimizationBailout\":\n\t\t\t\t\tcase \"reasons\":\n\t\t\t\t\tcase \"issuerPath\":\n\t\t\t\t\tcase \"profile\":\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\tcase \"modules\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\tchunk: items => {\n\t\tlet hasEntry = false;\n\t\treturn (\n\t\t\t\"chunk \" +\n\t\t\tjoinExplicitNewLine(\n\t\t\t\titems.filter(item => {\n\t\t\t\t\tswitch (item.element) {\n\t\t\t\t\t\tcase \"entry\":\n\t\t\t\t\t\t\tif (item.content) hasEntry = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"initial\":\n\t\t\t\t\t\t\tif (hasEntry) return false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}),\n\t\t\t\t\"  \"\n\t\t\t)\n\t\t);\n\t},\n\t\"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n\tchunkGroup: items => joinExplicitNewLine(items, \"  \"),\n\tchunkGroupAsset: joinOneLine,\n\tchunkGroupChildGroup: joinOneLine,\n\tchunkGroupChild: joinOneLine,\n\t// moduleReason: (items, { moduleReason }) => {\n\t// \tlet hasName = false;\n\t// \treturn joinOneLine(\n\t// \t\titems.filter(item => {\n\t// \t\t\tswitch (item.element) {\n\t// \t\t\t\tcase \"moduleId\":\n\t// \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t// \t\t\t\t\t\thasName = true;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"module\":\n\t// \t\t\t\t\tif (hasName) return false;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"resolvedModule\":\n\t// \t\t\t\t\treturn (\n\t// \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n\t// \t\t\t\t\t\titem.content\n\t// \t\t\t\t\t);\n\t// \t\t\t}\n\t// \t\t\treturn true;\n\t// \t\t})\n\t// \t);\n\t// },\n\tmoduleReason: (items, { moduleReason }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"moduleId\":\n\t\t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t\t\t\t\t\t\thasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"module\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"resolvedModule\":\n\t\t\t\t\t\tif (moduleReason.module === moduleReason.resolvedModule)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\t\"module.profile\": joinInBrackets,\n\tmoduleIssuer: joinOneLine,\n\tchunkOrigin: items => \"> \" + joinOneLine(items),\n\t\"errors[].error\": joinError(true),\n\t\"warnings[].error\": joinError(false),\n\tloggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n\tmoduleTraceItem: items => \" @ \" + joinOneLine(items),\n\tmoduleTraceDependency: joinOneLine\n};\n\nconst AVAILABLE_COLORS = {\n\tbold: \"\\u001b[1m\",\n\tyellow: \"\\u001b[1m\\u001b[33m\",\n\tred: \"\\u001b[1m\\u001b[31m\",\n\tgreen: \"\\u001b[1m\\u001b[32m\",\n\tcyan: \"\\u001b[1m\\u001b[36m\",\n\tmagenta: \"\\u001b[1m\\u001b[35m\"\n};\n\nconst AVAILABLE_FORMATS = {\n\tformatChunkId: (id, { yellow }, direction) => {\n\t\tswitch (direction) {\n\t\t\tcase \"parent\":\n\t\t\t\treturn `<{${yellow(id)}}>`;\n\t\t\tcase \"sibling\":\n\t\t\t\treturn `={${yellow(id)}}=`;\n\t\t\tcase \"child\":\n\t\t\t\treturn `>{${yellow(id)}}<`;\n\t\t\tdefault:\n\t\t\t\treturn `{${yellow(id)}}`;\n\t\t}\n\t},\n\tformatModuleId: id => `[${id}]`,\n\tformatFilename: (filename, { green, yellow }, oversize) =>\n\t\t(oversize ? yellow : green)(filename),\n\tformatFlag: flag => `[${flag}]`,\n\tformatLayer: layer => `(in ${layer})`,\n\tformatSize: require(\"../SizeFormatHelpers\").formatSize,\n\tformatDateTime: (dateTime, { bold }) => {\n\t\tconst d = new Date(dateTime);\n\t\tconst x = twoDigit;\n\t\tconst date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n\t\tconst time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n\t\treturn `${date} ${bold(time)}`;\n\t},\n\tformatTime: (\n\t\ttime,\n\t\t{ timeReference, bold, green, yellow, red },\n\t\tboldQuantity\n\t) => {\n\t\tconst unit = \" ms\";\n\t\tif (timeReference && time !== timeReference) {\n\t\t\tconst times = [\n\t\t\t\ttimeReference / 2,\n\t\t\t\ttimeReference / 4,\n\t\t\t\ttimeReference / 8,\n\t\t\t\ttimeReference / 16\n\t\t\t];\n\t\t\tif (time < times[3]) return `${time}${unit}`;\n\t\t\telse if (time < times[2]) return bold(`${time}${unit}`);\n\t\t\telse if (time < times[1]) return green(`${time}${unit}`);\n\t\t\telse if (time < times[0]) return yellow(`${time}${unit}`);\n\t\t\telse return red(`${time}${unit}`);\n\t\t} else {\n\t\t\treturn `${boldQuantity ? bold(time) : time}${unit}`;\n\t\t}\n\t},\n\tformatError: (message, { green, yellow, red }) => {\n\t\tif (message.includes(\"\\u001b[\")) return message;\n\t\tconst highlights = [\n\t\t\t{ regExp: /(Did you mean .+)/g, format: green },\n\t\t\t{\n\t\t\t\tregExp: /(Set 'mode' option to 'development' or 'production')/g,\n\t\t\t\tformat: green\n\t\t\t},\n\t\t\t{ regExp: /(\\(module has no exports\\))/g, format: red },\n\t\t\t{ regExp: /\\(possible exports: (.+)\\)/g, format: green },\n\t\t\t{ regExp: /(?:^|\\n)(.* doesn't exist)/g, format: red },\n\t\t\t{ regExp: /('\\w+' option has not been set)/g, format: red },\n\t\t\t{\n\t\t\t\tregExp: /(Emitted value instead of an instance of Error)/g,\n\t\t\t\tformat: yellow\n\t\t\t},\n\t\t\t{ regExp: /(Used? .+ instead)/gi, format: yellow },\n\t\t\t{ regExp: /\\b(deprecated|must|required)\\b/g, format: yellow },\n\t\t\t{\n\t\t\t\tregExp: /\\b(BREAKING CHANGE)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t},\n\t\t\t{\n\t\t\t\tregExp:\n\t\t\t\t\t/\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t}\n\t\t];\n\t\tfor (const { regExp, format } of highlights) {\n\t\t\tmessage = message.replace(regExp, (match, content) => {\n\t\t\t\treturn match.replace(content, format(content));\n\t\t\t});\n\t\t}\n\t\treturn message;\n\t}\n};\n\nconst RESULT_MODIFIER = {\n\t\"module.modules\": result => {\n\t\treturn indent(result, \"| \");\n\t}\n};\n\nconst createOrder = (array, preferredOrder) => {\n\tconst originalArray = array.slice();\n\tconst set = new Set(array);\n\tconst usedSet = new Set();\n\tarray.length = 0;\n\tfor (const element of preferredOrder) {\n\t\tif (element.endsWith(\"!\") || set.has(element)) {\n\t\t\tarray.push(element);\n\t\t\tusedSet.add(element);\n\t\t}\n\t}\n\tfor (const element of originalArray) {\n\t\tif (!usedSet.has(element)) {\n\t\t\tarray.push(element);\n\t\t}\n\t}\n\treturn array;\n};\n\nclass DefaultStatsPrinterPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n\t\t\tcompilation.hooks.statsPrinter.tap(\n\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t(stats, options, context) => {\n\t\t\t\t\t// Put colors into context\n\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t.for(\"compilation\")\n\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n\t\t\t\t\t\t\tfor (const color of Object.keys(AVAILABLE_COLORS)) {\n\t\t\t\t\t\t\t\tlet start;\n\t\t\t\t\t\t\t\tif (options.colors) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors === \"object\" &&\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors[color] === \"string\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tstart = options.colors[color];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstart = AVAILABLE_COLORS[color];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (start) {\n\t\t\t\t\t\t\t\t\tcontext[color] = str =>\n\t\t\t\t\t\t\t\t\t\t`${start}${\n\t\t\t\t\t\t\t\t\t\t\ttypeof str === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t? str.replace(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`$1${start}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t: str\n\t\t\t\t\t\t\t\t\t\t}\\u001b[39m\\u001b[22m`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext[color] = str => str;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const format of Object.keys(AVAILABLE_FORMATS)) {\n\t\t\t\t\t\t\t\tcontext[format] = (content, ...args) =>\n\t\t\t\t\t\t\t\t\tAVAILABLE_FORMATS[format](content, context, ...args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.timeReference = compilation.time;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_PRINTERS)) {\n\t\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) =>\n\t\t\t\t\t\t\t\tSIMPLE_PRINTERS[key](obj, ctx, stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(PREFERRED_ORDERS)) {\n\t\t\t\t\t\tconst preferredOrder = PREFERRED_ORDERS[key];\n\t\t\t\t\t\tstats.hooks.sortElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n\t\t\t\t\t\t\t\tcreateOrder(elements, preferredOrder);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(ITEM_NAMES)) {\n\t\t\t\t\t\tconst itemName = ITEM_NAMES[key];\n\t\t\t\t\t\tstats.hooks.getItemName\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t\t\t\t\ttypeof itemName === \"string\" ? () => itemName : itemName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ITEMS_JOINER[key];\n\t\t\t\t\t\tstats.hooks.printItems\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ELEMENT_JOINERS[key];\n\t\t\t\t\t\tstats.hooks.printElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(RESULT_MODIFIER)) {\n\t\t\t\t\t\tconst modifier = RESULT_MODIFIER[key];\n\t\t\t\t\t\tstats.hooks.result\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", modifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = DefaultStatsPrinterPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}