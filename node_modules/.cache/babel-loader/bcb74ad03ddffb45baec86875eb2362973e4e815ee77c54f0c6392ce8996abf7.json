{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst {\n  equals\n} = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst {\n  forEachRuntime,\n  subtractRuntime\n} = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Environment} Environment */\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./CodeGenerationResults\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"./Module\").RuntimeRequirements} RuntimeRequirements */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n  return `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${Array.from(chunkGraph.getModuleChunksIterable(module), c => c.name || c.id || c.debugId).join(\", \") || \"none\"} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(chunkGraph.moduleGraph.getIncomingConnections(module), connection => `\\n - ${connection.originModule && connection.originModule.identifier()} ${connection.dependency && connection.dependency.type} ${connection.explanations && Array.from(connection.explanations).join(\", \") || \"\"}`).join(\"\")}`;\n};\n\n/**\n * @param {string | undefined} definition global object definition\n * @returns {string | undefined} save to use global object\n */\nfunction getGlobalObject(definition) {\n  if (!definition) return definition;\n  const trimmed = definition.trim();\n  if (\n  // identifier, we do not need real identifier regarding ECMAScript/Unicode\n  trimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n  // iife\n  // call expression\n  // expression in parentheses\n  trimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)) return trimmed;\n  return `Object(${trimmed})`;\n}\nclass RuntimeTemplate {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @param {OutputOptions} outputOptions the compilation output options\n   * @param {RequestShortener} requestShortener the request shortener\n   */\n  constructor(compilation, outputOptions, requestShortener) {\n    this.compilation = compilation;\n    this.outputOptions = outputOptions || {};\n    this.requestShortener = requestShortener;\n    this.globalObject = /** @type {string} */\n    getGlobalObject(outputOptions.globalObject);\n    this.contentHashReplacement = \"X\".repeat( /** @type {NonNullable<OutputOptions[\"hashDigestLength\"]>} */\n    outputOptions.hashDigestLength);\n  }\n  isIIFE() {\n    return this.outputOptions.iife;\n  }\n  isModule() {\n    return this.outputOptions.module;\n  }\n  supportsConst() {\n    return /** @type {Environment} */this.outputOptions.environment.const;\n  }\n  supportsArrowFunction() {\n    return /** @type {Environment} */this.outputOptions.environment.arrowFunction;\n  }\n  supportsAsyncFunction() {\n    return /** @type {Environment} */this.outputOptions.environment.asyncFunction;\n  }\n  supportsOptionalChaining() {\n    return /** @type {Environment} */this.outputOptions.environment.optionalChaining;\n  }\n  supportsForOf() {\n    return /** @type {Environment} */this.outputOptions.environment.forOf;\n  }\n  supportsDestructuring() {\n    return /** @type {Environment} */this.outputOptions.environment.destructuring;\n  }\n  supportsBigIntLiteral() {\n    return /** @type {Environment} */this.outputOptions.environment.bigIntLiteral;\n  }\n  supportsDynamicImport() {\n    return /** @type {Environment} */this.outputOptions.environment.dynamicImport;\n  }\n  supportsEcmaScriptModuleSyntax() {\n    return /** @type {Environment} */this.outputOptions.environment.module;\n  }\n  supportTemplateLiteral() {\n    return /** @type {Environment} */this.outputOptions.environment.templateLiteral;\n  }\n\n  /**\n   * @param {string} returnValue return value\n   * @param {string} args arguments\n   * @returns {string} returning function\n   */\n  returningFunction(returnValue, args = \"\") {\n    return this.supportsArrowFunction() ? `(${args}) => (${returnValue})` : `function(${args}) { return ${returnValue}; }`;\n  }\n\n  /**\n   * @param {string} args arguments\n   * @param {string | string[]} body body\n   * @returns {string} basic function\n   */\n  basicFunction(args, body) {\n    return this.supportsArrowFunction() ? `(${args}) => {\\n${Template.indent(body)}\\n}` : `function(${args}) {\\n${Template.indent(body)}\\n}`;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args\n   * @returns {string} result expression\n   */\n  concatenation(...args) {\n    const len = args.length;\n    if (len === 2) return this._es5Concatenation(args);\n    if (len === 0) return '\"\"';\n    if (len === 1) {\n      return typeof args[0] === \"string\" ? JSON.stringify(args[0]) : `\"\" + ${args[0].expr}`;\n    }\n    if (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n    // cost comparison between template literal and concatenation:\n    // both need equal surroundings: `xxx` vs \"xxx\"\n    // template literal has constant cost of 3 chars for each expression\n    // es5 concatenation has cost of 3 + n chars for n expressions in row\n    // when a es5 concatenation ends with an expression it reduces cost by 3\n    // when a es5 concatenation starts with an single expression it reduces cost by 3\n    // e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n    // e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n    let templateCost = 0;\n    let concatenationCost = 0;\n    let lastWasExpr = false;\n    for (const arg of args) {\n      const isExpr = typeof arg !== \"string\";\n      if (isExpr) {\n        templateCost += 3;\n        concatenationCost += lastWasExpr ? 1 : 4;\n      }\n      lastWasExpr = isExpr;\n    }\n    if (lastWasExpr) concatenationCost -= 3;\n    if (typeof args[0] !== \"string\" && typeof args[1] === \"string\") concatenationCost -= 3;\n    if (concatenationCost <= templateCost) return this._es5Concatenation(args);\n    return `\\`${args.map(arg => typeof arg === \"string\" ? arg : `\\${${arg.expr}}`).join(\"\")}\\``;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args (len >= 2)\n   * @returns {string} result expression\n   * @private\n   */\n  _es5Concatenation(args) {\n    const str = args.map(arg => typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr).join(\" + \");\n\n    // when the first two args are expression, we need to prepend \"\" + to force string\n    // concatenation instead of number addition.\n    return typeof args[0] !== \"string\" && typeof args[1] !== \"string\" ? `\"\" + ${str}` : str;\n  }\n\n  /**\n   * @param {string} expression expression\n   * @param {string} args arguments\n   * @returns {string} expression function code\n   */\n  expressionFunction(expression, args = \"\") {\n    return this.supportsArrowFunction() ? `(${args}) => (${expression})` : `function(${args}) { ${expression}; }`;\n  }\n\n  /**\n   * @returns {string} empty function code\n   */\n  emptyFunction() {\n    return this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n  }\n\n  /**\n   * @param {string[]} items items\n   * @param {string} value value\n   * @returns {string} destructure array code\n   */\n  destructureArray(items, value) {\n    return this.supportsDestructuring() ? `var [${items.join(\", \")}] = ${value};` : Template.asString(items.map((item, i) => `var ${item} = ${value}[${i}];`));\n  }\n\n  /**\n   * @param {string[]} items items\n   * @param {string} value value\n   * @returns {string} destructure object code\n   */\n  destructureObject(items, value) {\n    return this.supportsDestructuring() ? `var {${items.join(\", \")}} = ${value};` : Template.asString(items.map(item => `var ${item} = ${value}${propertyAccess([item])};`));\n  }\n\n  /**\n   * @param {string} args arguments\n   * @param {string} body body\n   * @returns {string} IIFE code\n   */\n  iife(args, body) {\n    return `(${this.basicFunction(args, body)})()`;\n  }\n\n  /**\n   * @param {string} variable variable\n   * @param {string} array array\n   * @param {string | string[]} body body\n   * @returns {string} for each code\n   */\n  forEach(variable, array, body) {\n    return this.supportsForOf() ? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}` : `${array}.forEach(function(${variable}) {\\n${Template.indent(body)}\\n});`;\n  }\n\n  /**\n   * Add a comment\n   * @param {object} options Information content of the comment\n   * @param {string=} options.request request string used originally\n   * @param {string=} options.chunkName name of the chunk referenced\n   * @param {string=} options.chunkReason reason information of the chunk\n   * @param {string=} options.message additional message\n   * @param {string=} options.exportName name of the export\n   * @returns {string} comment\n   */\n  comment({\n    request,\n    chunkName,\n    chunkReason,\n    message,\n    exportName\n  }) {\n    let content;\n    if (this.outputOptions.pathinfo) {\n      content = [message, request, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    } else {\n      content = [message, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    }\n    if (!content) return \"\";\n    if (this.outputOptions.pathinfo) {\n      return Template.toComment(content) + \" \";\n    } else {\n      return Template.toNormalComment(content) + \" \";\n    }\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error block\n   */\n  throwMissingModuleErrorBlock({\n    request\n  }) {\n    const err = `Cannot find module '${request}'`;\n    return `var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error function\n   */\n  throwMissingModuleErrorFunction({\n    request\n  }) {\n    return `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock({\n      request\n    })} }`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error IIFE\n   */\n  missingModule({\n    request\n  }) {\n    return `Object(${this.throwMissingModuleErrorFunction({\n      request\n    })}())`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error statement\n   */\n  missingModuleStatement({\n    request\n  }) {\n    return `${this.missingModule({\n      request\n    })};\\n`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error code\n   */\n  missingModulePromise({\n    request\n  }) {\n    return `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n      request\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Module} options.module the module\n   * @param {string=} options.request the request that should be printed as comment\n   * @param {string=} options.idExpr expression to use as id expression\n   * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n   * @returns {string} the code\n   */\n  weakError({\n    module,\n    chunkGraph,\n    request,\n    idExpr,\n    type\n  }) {\n    const moduleId = chunkGraph.getModuleId(module);\n    const errorMessage = moduleId === null ? JSON.stringify(\"Module is not available (weak dependency)\") : idExpr ? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"` : JSON.stringify(`Module '${moduleId}' is not available (weak dependency)`);\n    const comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n    const errorStatements = `var e = new Error(${errorMessage}); ` + comment + \"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n    switch (type) {\n      case \"statements\":\n        return errorStatements;\n      case \"promise\":\n        return `Promise.resolve().then(${this.basicFunction(\"\", errorStatements)})`;\n      case \"expression\":\n        return this.iife(\"\", errorStatements);\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string=} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @returns {string} the expression\n   */\n  moduleId({\n    module,\n    chunkGraph,\n    request,\n    weak\n  }) {\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        return \"null /* weak dependency, without id */\";\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    return `${this.comment({\n      request\n    })}${JSON.stringify(moduleId)}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module | null} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string=} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleRaw({\n    module,\n    chunkGraph,\n    request,\n    weak,\n    runtimeRequirements\n  }) {\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    runtimeRequirements.add(RuntimeGlobals.require);\n    return `${RuntimeGlobals.require}(${this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module | null} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleExports({\n    module,\n    chunkGraph,\n    request,\n    weak,\n    runtimeRequirements\n  }) {\n    return this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    });\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleNamespace({\n    module,\n    chunkGraph,\n    request,\n    strict,\n    weak,\n    runtimeRequirements\n  }) {\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    switch (exportsType) {\n      case \"namespace\":\n        return this.moduleRaw({\n          module,\n          chunkGraph,\n          request,\n          weak,\n          runtimeRequirements\n        });\n      case \"default-with-named\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n      case \"dynamic\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.message a message for the comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the promise expression\n   */\n  moduleNamespacePromise({\n    chunkGraph,\n    block,\n    module,\n    request,\n    message,\n    strict,\n    weak,\n    runtimeRequirements\n  }) {\n    if (!module) {\n      return this.missingModulePromise({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"promise\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const promise = this.blockPromise({\n      chunkGraph,\n      block,\n      message,\n      runtimeRequirements\n    });\n    let appending;\n    let idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n    const comment = this.comment({\n      request\n    });\n    let header = \"\";\n    if (weak) {\n      if (idExpr.length > 8) {\n        // 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n        header += `var id = ${idExpr}; `;\n        idExpr = \"id\";\n      }\n      runtimeRequirements.add(RuntimeGlobals.moduleFactories);\n      header += `if(!${RuntimeGlobals.moduleFactories}[${idExpr}]) { ${this.weakError({\n        module,\n        chunkGraph,\n        request,\n        idExpr,\n        type: \"statements\"\n      })} } `;\n    }\n    const moduleIdExpr = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    let fakeType = 16;\n    switch (exportsType) {\n      case \"namespace\":\n        if (header) {\n          const rawModule = this.moduleRaw({\n            module,\n            chunkGraph,\n            request,\n            weak,\n            runtimeRequirements\n          });\n          appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n        } else {\n          runtimeRequirements.add(RuntimeGlobals.require);\n          appending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n        }\n        break;\n      case \"dynamic\":\n        fakeType |= 4;\n      /* fall through */\n      case \"default-with-named\":\n        fakeType |= 2;\n      /* fall through */\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        if (chunkGraph.moduleGraph.isAsync(module)) {\n          if (header) {\n            const rawModule = this.moduleRaw({\n              module,\n              chunkGraph,\n              request,\n              weak,\n              runtimeRequirements\n            });\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n          } else {\n            runtimeRequirements.add(RuntimeGlobals.require);\n            appending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n          }\n          appending += `.then(${this.returningFunction(`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`, \"m\")})`;\n        } else {\n          fakeType |= 1;\n          if (header) {\n            const returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${returnExpression};`)})`;\n          } else {\n            appending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}, ${fakeType}))`;\n          }\n        }\n        break;\n    }\n    return `${promise || \"Promise.resolve()\"}${appending}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n   * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  runtimeConditionExpression({\n    chunkGraph,\n    runtimeCondition,\n    runtime,\n    runtimeRequirements\n  }) {\n    if (runtimeCondition === undefined) return \"true\";\n    if (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n    /** @type {Set<string>} */\n    const positiveRuntimeIds = new Set();\n    forEachRuntime(runtimeCondition, runtime => positiveRuntimeIds.add(`${chunkGraph.getRuntimeId( /** @type {string} */runtime)}`));\n    /** @type {Set<string>} */\n    const negativeRuntimeIds = new Set();\n    forEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime => negativeRuntimeIds.add(`${chunkGraph.getRuntimeId( /** @type {string} */runtime)}`));\n    runtimeRequirements.add(RuntimeGlobals.runtimeId);\n    return compileBooleanMatcher.fromLists(Array.from(positiveRuntimeIds), Array.from(negativeRuntimeIds))(RuntimeGlobals.runtimeId);\n  }\n\n  /**\n   *\n   * @param {Object} options options object\n   * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.importVar name of the import variable\n   * @param {Module} options.originModule module in which the statement is emitted\n   * @param {boolean=} options.weak true, if this is a weak dependency\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {[string, string]} the import statement and the compat statement\n   */\n  importStatement({\n    update,\n    module,\n    chunkGraph,\n    request,\n    importVar,\n    originModule,\n    weak,\n    runtimeRequirements\n  }) {\n    if (!module) {\n      return [this.missingModuleStatement({\n        request\n      }), \"\"];\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return [this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"statements\"\n        }), \"\"];\n      }\n      throw new Error(`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const optDeclaration = update ? \"\" : \"var \";\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, /** @type {BuildMeta} */\n    originModule.buildMeta.strictHarmonyModule);\n    runtimeRequirements.add(RuntimeGlobals.require);\n    const importContent = `/* harmony import */ ${optDeclaration}${importVar} = ${RuntimeGlobals.require}(${moduleId});\\n`;\n    if (exportsType === \"dynamic\") {\n      runtimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n      return [importContent, `/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`];\n    }\n    return [importContent, \"\"];\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {ModuleGraph} options.moduleGraph the module graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request\n   * @param {string | string[]} options.exportName the export name\n   * @param {Module} options.originModule the origin module\n   * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n   * @param {boolean} options.isCall true, if expression will be called\n   * @param {boolean | null} options.callContext when false, call context will not be preserved\n   * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n   * @param {string} options.importVar the identifier name of the import variable\n   * @param {InitFragment<TODO>[]} options.initFragments init fragments will be added here\n   * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  exportFromImport({\n    moduleGraph,\n    module,\n    request,\n    exportName,\n    originModule,\n    asiSafe,\n    isCall,\n    callContext,\n    defaultInterop,\n    importVar,\n    initFragments,\n    runtime,\n    runtimeRequirements\n  }) {\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (!Array.isArray(exportName)) {\n      exportName = exportName ? [exportName] : [];\n    }\n    const exportsType = module.getExportsType(moduleGraph, /** @type {BuildMeta} */\n    originModule.buildMeta.strictHarmonyModule);\n    if (defaultInterop) {\n      if (exportName.length > 0 && exportName[0] === \"default\") {\n        switch (exportsType) {\n          case \"dynamic\":\n            if (isCall) {\n              return `${importVar}_default()${propertyAccess(exportName, 1)}`;\n            } else {\n              return asiSafe ? `(${importVar}_default()${propertyAccess(exportName, 1)})` : asiSafe === false ? `;(${importVar}_default()${propertyAccess(exportName, 1)})` : `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n            }\n          case \"default-only\":\n          case \"default-with-named\":\n            exportName = exportName.slice(1);\n            break;\n        }\n      } else if (exportName.length > 0) {\n        if (exportsType === \"default-only\") {\n          return \"/* non-default import from non-esm module */undefined\" + propertyAccess(exportName, 1);\n        } else if (exportsType !== \"namespace\" && exportName[0] === \"__esModule\") {\n          return \"/* __esModule */true\";\n        }\n      } else if (exportsType === \"default-only\" || exportsType === \"default-with-named\") {\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        initFragments.push(new InitFragment(`var ${importVar}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${importVar}_namespace_cache`));\n        return `/*#__PURE__*/ ${asiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n      }\n    }\n    if (exportName.length > 0) {\n      const exportsInfo = moduleGraph.getExportsInfo(module);\n      const used = exportsInfo.getUsedName(exportName, runtime);\n      if (!used) {\n        const comment = Template.toNormalComment(`unused export ${propertyAccess(exportName)}`);\n        return `${comment} undefined`;\n      }\n      const comment = equals(used, exportName) ? \"\" : Template.toNormalComment(propertyAccess(exportName)) + \" \";\n      const access = `${importVar}${comment}${propertyAccess(used)}`;\n      if (isCall && callContext === false) {\n        return asiSafe ? `(0,${access})` : asiSafe === false ? `;(0,${access})` : `/*#__PURE__*/Object(${access})`;\n      }\n      return access;\n    } else {\n      return importVar;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock | undefined} options.block the async block\n   * @param {string} options.message the message\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  blockPromise({\n    block,\n    message,\n    chunkGraph,\n    runtimeRequirements\n  }) {\n    if (!block) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n    if (!chunkGroup || chunkGroup.chunks.length === 0) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunks = chunkGroup.chunks.filter(chunk => !chunk.hasRuntime() && chunk.id !== null);\n    const comment = this.comment({\n      message,\n      chunkName: block.chunkName\n    });\n    if (chunks.length === 1) {\n      const chunkId = JSON.stringify(chunks[0].id);\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      const fetchPriority = chunkGroup.options.fetchPriority;\n      if (fetchPriority) {\n        runtimeRequirements.add(RuntimeGlobals.hasFetchPriority);\n      }\n      return `${RuntimeGlobals.ensureChunk}(${comment}${chunkId}${fetchPriority ? `, ${JSON.stringify(fetchPriority)}` : \"\"})`;\n    } else if (chunks.length > 0) {\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      const fetchPriority = chunkGroup.options.fetchPriority;\n      if (fetchPriority) {\n        runtimeRequirements.add(RuntimeGlobals.hasFetchPriority);\n      }\n\n      /**\n       * @param {Chunk} chunk chunk\n       * @returns {string} require chunk id code\n       */\n      const requireChunkId = chunk => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)}${fetchPriority ? `, ${JSON.stringify(fetchPriority)}` : \"\"})`;\n      return `Promise.all(${comment.trim()}[${chunks.map(requireChunkId).join(\", \")}])`;\n    } else {\n      return `Promise.resolve(${comment.trim()})`;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  asyncModuleFactory({\n    block,\n    chunkGraph,\n    runtimeRequirements,\n    request\n  }) {\n    const dep = block.dependencies[0];\n    const module = chunkGraph.moduleGraph.getModule(dep);\n    const ensureChunk = this.blockPromise({\n      block,\n      message: \"\",\n      chunkGraph,\n      runtimeRequirements\n    });\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(ensureChunk.startsWith(\"Promise.resolve(\") ? `${factory}` : `${ensureChunk}.then(${this.returningFunction(factory)})`);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {Dependency} options.dependency the dependency\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  syncModuleFactory({\n    dependency,\n    chunkGraph,\n    runtimeRequirements,\n    request\n  }) {\n    const module = chunkGraph.moduleGraph.getModule(dependency);\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(factory);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {string} options.exportsArgument the name of the exports object\n   * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} statement\n   */\n  defineEsModuleFlagStatement({\n    exportsArgument,\n    runtimeRequirements\n  }) {\n    runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    return `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {string} options.publicPath the public path\n   * @param {RuntimeSpec=} options.runtime runtime\n   * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n   * @returns {string} the url of the asset\n   */\n  assetUrl({\n    publicPath,\n    runtime,\n    module,\n    codeGenerationResults\n  }) {\n    if (!module) {\n      return \"data:,\";\n    }\n    const codeGen = codeGenerationResults.get(module, runtime);\n    const data = /** @type {NonNullable<CodeGenerationResult[\"data\"]>} */\n    codeGen.data;\n    const url = data.get(\"url\");\n    if (url) return url.toString();\n    const filename = data.get(\"filename\");\n    return publicPath + filename;\n  }\n}\nmodule.exports = RuntimeTemplate;","map":{"version":3,"names":["InitFragment","require","RuntimeGlobals","Template","equals","compileBooleanMatcher","propertyAccess","forEachRuntime","subtractRuntime","noModuleIdErrorMessage","module","chunkGraph","identifier","Array","from","getModuleChunksIterable","c","name","id","debugId","join","moduleGraph","getIncomingConnections","connection","originModule","dependency","type","explanations","getGlobalObject","definition","trimmed","trim","match","RuntimeTemplate","constructor","compilation","outputOptions","requestShortener","globalObject","contentHashReplacement","repeat","hashDigestLength","isIIFE","iife","isModule","supportsConst","environment","const","supportsArrowFunction","arrowFunction","supportsAsyncFunction","asyncFunction","supportsOptionalChaining","optionalChaining","supportsForOf","forOf","supportsDestructuring","destructuring","supportsBigIntLiteral","bigIntLiteral","supportsDynamicImport","dynamicImport","supportsEcmaScriptModuleSyntax","supportTemplateLiteral","templateLiteral","returningFunction","returnValue","args","basicFunction","body","indent","concatenation","len","length","_es5Concatenation","JSON","stringify","expr","templateCost","concatenationCost","lastWasExpr","arg","isExpr","map","str","expressionFunction","expression","emptyFunction","destructureArray","items","value","asString","item","i","destructureObject","forEach","variable","array","comment","request","chunkName","chunkReason","message","exportName","content","pathinfo","filter","Boolean","shorten","toComment","toNormalComment","throwMissingModuleErrorBlock","err","throwMissingModuleErrorFunction","missingModule","missingModuleStatement","missingModulePromise","weakError","idExpr","moduleId","getModuleId","errorMessage","errorStatements","weak","Error","moduleRaw","runtimeRequirements","add","moduleExports","moduleNamespace","strict","exportsType","getExportsType","createFakeNamespaceObject","moduleNamespacePromise","block","promise","blockPromise","appending","header","moduleFactories","moduleIdExpr","fakeType","rawModule","isAsync","returnExpression","runtimeConditionExpression","runtimeCondition","runtime","undefined","positiveRuntimeIds","Set","getRuntimeId","negativeRuntimeIds","runtimeId","fromLists","importStatement","update","importVar","optDeclaration","buildMeta","strictHarmonyModule","importContent","compatGetDefaultExport","exportFromImport","asiSafe","isCall","callContext","defaultInterop","initFragments","isArray","slice","push","STAGE_CONSTANTS","exportsInfo","getExportsInfo","used","getUsedName","access","chunkGroup","getBlockChunkGroup","chunks","chunk","hasRuntime","chunkId","ensureChunk","fetchPriority","options","hasFetchPriority","requireChunkId","asyncModuleFactory","dep","dependencies","getModule","factory","startsWith","syncModuleFactory","defineEsModuleFlagStatement","exportsArgument","makeNamespaceObject","exports","assetUrl","publicPath","codeGenerationResults","codeGen","get","data","url","toString","filename"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/RuntimeTemplate.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { forEachRuntime, subtractRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Environment} Environment */\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./CodeGenerationResults\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"./Module\").RuntimeRequirements} RuntimeRequirements */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n\treturn `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${\n\t\tArray.from(\n\t\t\tchunkGraph.getModuleChunksIterable(module),\n\t\t\tc => c.name || c.id || c.debugId\n\t\t).join(\", \") || \"none\"\n\t} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(\n\t\tchunkGraph.moduleGraph.getIncomingConnections(module),\n\t\tconnection =>\n\t\t\t`\\n - ${\n\t\t\t\tconnection.originModule && connection.originModule.identifier()\n\t\t\t} ${connection.dependency && connection.dependency.type} ${\n\t\t\t\t(connection.explanations &&\n\t\t\t\t\tArray.from(connection.explanations).join(\", \")) ||\n\t\t\t\t\"\"\n\t\t\t}`\n\t).join(\"\")}`;\n};\n\n/**\n * @param {string | undefined} definition global object definition\n * @returns {string | undefined} save to use global object\n */\nfunction getGlobalObject(definition) {\n\tif (!definition) return definition;\n\tconst trimmed = definition.trim();\n\n\tif (\n\t\t// identifier, we do not need real identifier regarding ECMAScript/Unicode\n\t\ttrimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n\t\t// iife\n\t\t// call expression\n\t\t// expression in parentheses\n\t\ttrimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)\n\t)\n\t\treturn trimmed;\n\n\treturn `Object(${trimmed})`;\n}\n\nclass RuntimeTemplate {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @param {OutputOptions} outputOptions the compilation output options\n\t * @param {RequestShortener} requestShortener the request shortener\n\t */\n\tconstructor(compilation, outputOptions, requestShortener) {\n\t\tthis.compilation = compilation;\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.requestShortener = requestShortener;\n\t\tthis.globalObject =\n\t\t\t/** @type {string} */\n\t\t\t(getGlobalObject(outputOptions.globalObject));\n\t\tthis.contentHashReplacement = \"X\".repeat(\n\t\t\t/** @type {NonNullable<OutputOptions[\"hashDigestLength\"]>} */\n\t\t\t(outputOptions.hashDigestLength)\n\t\t);\n\t}\n\n\tisIIFE() {\n\t\treturn this.outputOptions.iife;\n\t}\n\n\tisModule() {\n\t\treturn this.outputOptions.module;\n\t}\n\n\tsupportsConst() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment).const;\n\t}\n\n\tsupportsArrowFunction() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.arrowFunction;\n\t}\n\n\tsupportsAsyncFunction() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.asyncFunction;\n\t}\n\n\tsupportsOptionalChaining() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.optionalChaining;\n\t}\n\n\tsupportsForOf() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment).forOf;\n\t}\n\n\tsupportsDestructuring() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.destructuring;\n\t}\n\n\tsupportsBigIntLiteral() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.bigIntLiteral;\n\t}\n\n\tsupportsDynamicImport() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.dynamicImport;\n\t}\n\n\tsupportsEcmaScriptModuleSyntax() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment).module;\n\t}\n\n\tsupportTemplateLiteral() {\n\t\treturn /** @type {Environment} */ (this.outputOptions.environment)\n\t\t\t.templateLiteral;\n\t}\n\n\t/**\n\t * @param {string} returnValue return value\n\t * @param {string} args arguments\n\t * @returns {string} returning function\n\t */\n\treturningFunction(returnValue, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${returnValue})`\n\t\t\t: `function(${args}) { return ${returnValue}; }`;\n\t}\n\n\t/**\n\t * @param {string} args arguments\n\t * @param {string | string[]} body body\n\t * @returns {string} basic function\n\t */\n\tbasicFunction(args, body) {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => {\\n${Template.indent(body)}\\n}`\n\t\t\t: `function(${args}) {\\n${Template.indent(body)}\\n}`;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args\n\t * @returns {string} result expression\n\t */\n\tconcatenation(...args) {\n\t\tconst len = args.length;\n\n\t\tif (len === 2) return this._es5Concatenation(args);\n\t\tif (len === 0) return '\"\"';\n\t\tif (len === 1) {\n\t\t\treturn typeof args[0] === \"string\"\n\t\t\t\t? JSON.stringify(args[0])\n\t\t\t\t: `\"\" + ${args[0].expr}`;\n\t\t}\n\t\tif (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n\t\t// cost comparison between template literal and concatenation:\n\t\t// both need equal surroundings: `xxx` vs \"xxx\"\n\t\t// template literal has constant cost of 3 chars for each expression\n\t\t// es5 concatenation has cost of 3 + n chars for n expressions in row\n\t\t// when a es5 concatenation ends with an expression it reduces cost by 3\n\t\t// when a es5 concatenation starts with an single expression it reduces cost by 3\n\t\t// e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n\t\t// e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n\t\tlet templateCost = 0;\n\t\tlet concatenationCost = 0;\n\n\t\tlet lastWasExpr = false;\n\t\tfor (const arg of args) {\n\t\t\tconst isExpr = typeof arg !== \"string\";\n\t\t\tif (isExpr) {\n\t\t\t\ttemplateCost += 3;\n\t\t\t\tconcatenationCost += lastWasExpr ? 1 : 4;\n\t\t\t}\n\t\t\tlastWasExpr = isExpr;\n\t\t}\n\t\tif (lastWasExpr) concatenationCost -= 3;\n\t\tif (typeof args[0] !== \"string\" && typeof args[1] === \"string\")\n\t\t\tconcatenationCost -= 3;\n\n\t\tif (concatenationCost <= templateCost) return this._es5Concatenation(args);\n\n\t\treturn `\\`${args\n\t\t\t.map(arg => (typeof arg === \"string\" ? arg : `\\${${arg.expr}}`))\n\t\t\t.join(\"\")}\\``;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args (len >= 2)\n\t * @returns {string} result expression\n\t * @private\n\t */\n\t_es5Concatenation(args) {\n\t\tconst str = args\n\t\t\t.map(arg => (typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr))\n\t\t\t.join(\" + \");\n\n\t\t// when the first two args are expression, we need to prepend \"\" + to force string\n\t\t// concatenation instead of number addition.\n\t\treturn typeof args[0] !== \"string\" && typeof args[1] !== \"string\"\n\t\t\t? `\"\" + ${str}`\n\t\t\t: str;\n\t}\n\n\t/**\n\t * @param {string} expression expression\n\t * @param {string} args arguments\n\t * @returns {string} expression function code\n\t */\n\texpressionFunction(expression, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${expression})`\n\t\t\t: `function(${args}) { ${expression}; }`;\n\t}\n\n\t/**\n\t * @returns {string} empty function code\n\t */\n\temptyFunction() {\n\t\treturn this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n\t}\n\n\t/**\n\t * @param {string[]} items items\n\t * @param {string} value value\n\t * @returns {string} destructure array code\n\t */\n\tdestructureArray(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var [${items.join(\", \")}] = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map((item, i) => `var ${item} = ${value}[${i}];`)\n\t\t\t\t);\n\t}\n\n\t/**\n\t * @param {string[]} items items\n\t * @param {string} value value\n\t * @returns {string} destructure object code\n\t */\n\tdestructureObject(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var {${items.join(\", \")}} = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map(item => `var ${item} = ${value}${propertyAccess([item])};`)\n\t\t\t\t);\n\t}\n\n\t/**\n\t * @param {string} args arguments\n\t * @param {string} body body\n\t * @returns {string} IIFE code\n\t */\n\tiife(args, body) {\n\t\treturn `(${this.basicFunction(args, body)})()`;\n\t}\n\n\t/**\n\t * @param {string} variable variable\n\t * @param {string} array array\n\t * @param {string | string[]} body body\n\t * @returns {string} for each code\n\t */\n\tforEach(variable, array, body) {\n\t\treturn this.supportsForOf()\n\t\t\t? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}`\n\t\t\t: `${array}.forEach(function(${variable}) {\\n${Template.indent(\n\t\t\t\t\tbody\n\t\t\t\t)}\\n});`;\n\t}\n\n\t/**\n\t * Add a comment\n\t * @param {object} options Information content of the comment\n\t * @param {string=} options.request request string used originally\n\t * @param {string=} options.chunkName name of the chunk referenced\n\t * @param {string=} options.chunkReason reason information of the chunk\n\t * @param {string=} options.message additional message\n\t * @param {string=} options.exportName name of the export\n\t * @returns {string} comment\n\t */\n\tcomment({ request, chunkName, chunkReason, message, exportName }) {\n\t\tlet content;\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\tcontent = [message, request, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t} else {\n\t\t\tcontent = [message, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t}\n\t\tif (!content) return \"\";\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\treturn Template.toComment(content) + \" \";\n\t\t} else {\n\t\t\treturn Template.toNormalComment(content) + \" \";\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error block\n\t */\n\tthrowMissingModuleErrorBlock({ request }) {\n\t\tconst err = `Cannot find module '${request}'`;\n\t\treturn `var e = new Error(${JSON.stringify(\n\t\t\terr\n\t\t)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error function\n\t */\n\tthrowMissingModuleErrorFunction({ request }) {\n\t\treturn `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock(\n\t\t\t{ request }\n\t\t)} }`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error IIFE\n\t */\n\tmissingModule({ request }) {\n\t\treturn `Object(${this.throwMissingModuleErrorFunction({ request })}())`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error statement\n\t */\n\tmissingModuleStatement({ request }) {\n\t\treturn `${this.missingModule({ request })};\\n`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error code\n\t */\n\tmissingModulePromise({ request }) {\n\t\treturn `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n\t\t\trequest\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Module} options.module the module\n\t * @param {string=} options.request the request that should be printed as comment\n\t * @param {string=} options.idExpr expression to use as id expression\n\t * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n\t * @returns {string} the code\n\t */\n\tweakError({ module, chunkGraph, request, idExpr, type }) {\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst errorMessage =\n\t\t\tmoduleId === null\n\t\t\t\t? JSON.stringify(\"Module is not available (weak dependency)\")\n\t\t\t\t: idExpr\n\t\t\t\t\t? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"`\n\t\t\t\t\t: JSON.stringify(\n\t\t\t\t\t\t\t`Module '${moduleId}' is not available (weak dependency)`\n\t\t\t\t\t\t);\n\t\tconst comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n\t\tconst errorStatements =\n\t\t\t`var e = new Error(${errorMessage}); ` +\n\t\t\tcomment +\n\t\t\t\"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n\t\tswitch (type) {\n\t\t\tcase \"statements\":\n\t\t\t\treturn errorStatements;\n\t\t\tcase \"promise\":\n\t\t\t\treturn `Promise.resolve().then(${this.basicFunction(\n\t\t\t\t\t\"\",\n\t\t\t\t\terrorStatements\n\t\t\t\t)})`;\n\t\t\tcase \"expression\":\n\t\t\t\treturn this.iife(\"\", errorStatements);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string=} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @returns {string} the expression\n\t */\n\tmoduleId({ module, chunkGraph, request, weak }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\treturn \"null /* weak dependency, without id */\";\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\treturn `${this.comment({ request })}${JSON.stringify(moduleId)}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module | null} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string=} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleRaw({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\treturn `${RuntimeGlobals.require}(${this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module | null} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleExports({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\treturn this.moduleRaw({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak,\n\t\t\truntimeRequirements\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleNamespace({\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\treturn this.moduleRaw({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\tweak,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t});\n\t\t\tcase \"default-with-named\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n\t\t\tcase \"dynamic\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.message a message for the comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the promise expression\n\t */\n\tmoduleNamespacePromise({\n\t\tchunkGraph,\n\t\tblock,\n\t\tmodule,\n\t\trequest,\n\t\tmessage,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModulePromise({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"promise\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst promise = this.blockPromise({\n\t\t\tchunkGraph,\n\t\t\tblock,\n\t\t\tmessage,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tlet appending;\n\t\tlet idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n\t\tconst comment = this.comment({\n\t\t\trequest\n\t\t});\n\t\tlet header = \"\";\n\t\tif (weak) {\n\t\t\tif (idExpr.length > 8) {\n\t\t\t\t// 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n\t\t\t\theader += `var id = ${idExpr}; `;\n\t\t\t\tidExpr = \"id\";\n\t\t\t}\n\t\t\truntimeRequirements.add(RuntimeGlobals.moduleFactories);\n\t\t\theader += `if(!${\n\t\t\t\tRuntimeGlobals.moduleFactories\n\t\t\t}[${idExpr}]) { ${this.weakError({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\tidExpr,\n\t\t\t\ttype: \"statements\"\n\t\t\t})} } `;\n\t\t}\n\t\tconst moduleIdExpr = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tlet fakeType = 16;\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\tif (header) {\n\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tweak,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\tappending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"dynamic\":\n\t\t\t\tfakeType |= 4;\n\t\t\t/* fall through */\n\t\t\tcase \"default-with-named\":\n\t\t\t\tfakeType |= 2;\n\t\t\t/* fall through */\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tif (chunkGraph.moduleGraph.isAsync(module)) {\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\tweak,\n\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t});\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n\t\t\t\t\t}\n\t\t\t\t\tappending += `.then(${this.returningFunction(\n\t\t\t\t\t\t`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`,\n\t\t\t\t\t\t\"m\"\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\tfakeType |= 1;\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${returnExpression};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}, ${fakeType}))`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${promise || \"Promise.resolve()\"}${appending}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n\t * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\truntimeConditionExpression({\n\t\tchunkGraph,\n\t\truntimeCondition,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (runtimeCondition === undefined) return \"true\";\n\t\tif (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n\t\t/** @type {Set<string>} */\n\t\tconst positiveRuntimeIds = new Set();\n\t\tforEachRuntime(runtimeCondition, runtime =>\n\t\t\tpositiveRuntimeIds.add(\n\t\t\t\t`${chunkGraph.getRuntimeId(/** @type {string} */ (runtime))}`\n\t\t\t)\n\t\t);\n\t\t/** @type {Set<string>} */\n\t\tconst negativeRuntimeIds = new Set();\n\t\tforEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime =>\n\t\t\tnegativeRuntimeIds.add(\n\t\t\t\t`${chunkGraph.getRuntimeId(/** @type {string} */ (runtime))}`\n\t\t\t)\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.runtimeId);\n\t\treturn compileBooleanMatcher.fromLists(\n\t\t\tArray.from(positiveRuntimeIds),\n\t\t\tArray.from(negativeRuntimeIds)\n\t\t)(RuntimeGlobals.runtimeId);\n\t}\n\n\t/**\n\t *\n\t * @param {Object} options options object\n\t * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.importVar name of the import variable\n\t * @param {Module} options.originModule module in which the statement is emitted\n\t * @param {boolean=} options.weak true, if this is a weak dependency\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {[string, string]} the import statement and the compat statement\n\t */\n\timportStatement({\n\t\tupdate,\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\timportVar,\n\t\toriginModule,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn [\n\t\t\t\tthis.missingModuleStatement({\n\t\t\t\t\trequest\n\t\t\t\t}),\n\t\t\t\t\"\"\n\t\t\t];\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn [\n\t\t\t\t\tthis.weakError({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\ttype: \"statements\"\n\t\t\t\t\t}),\n\t\t\t\t\t\"\"\n\t\t\t\t];\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst optDeclaration = update ? \"\" : \"var \";\n\n\t\tconst exportsType = module.getExportsType(\n\t\t\tchunkGraph.moduleGraph,\n\t\t\t/** @type {BuildMeta} */\n\t\t\t(originModule.buildMeta).strictHarmonyModule\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\tconst importContent = `/* harmony import */ ${optDeclaration}${importVar} = ${RuntimeGlobals.require}(${moduleId});\\n`;\n\n\t\tif (exportsType === \"dynamic\") {\n\t\t\truntimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n\t\t\treturn [\n\t\t\t\timportContent,\n\t\t\t\t`/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`\n\t\t\t];\n\t\t}\n\t\treturn [importContent, \"\"];\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ModuleGraph} options.moduleGraph the module graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request\n\t * @param {string | string[]} options.exportName the export name\n\t * @param {Module} options.originModule the origin module\n\t * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n\t * @param {boolean} options.isCall true, if expression will be called\n\t * @param {boolean | null} options.callContext when false, call context will not be preserved\n\t * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n\t * @param {string} options.importVar the identifier name of the import variable\n\t * @param {InitFragment<TODO>[]} options.initFragments init fragments will be added here\n\t * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\texportFromImport({\n\t\tmoduleGraph,\n\t\tmodule,\n\t\trequest,\n\t\texportName,\n\t\toriginModule,\n\t\tasiSafe,\n\t\tisCall,\n\t\tcallContext,\n\t\tdefaultInterop,\n\t\timportVar,\n\t\tinitFragments,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (!Array.isArray(exportName)) {\n\t\t\texportName = exportName ? [exportName] : [];\n\t\t}\n\t\tconst exportsType = module.getExportsType(\n\t\t\tmoduleGraph,\n\t\t\t/** @type {BuildMeta} */\n\t\t\t(originModule.buildMeta).strictHarmonyModule\n\t\t);\n\n\t\tif (defaultInterop) {\n\t\t\tif (exportName.length > 0 && exportName[0] === \"default\") {\n\t\t\t\tswitch (exportsType) {\n\t\t\t\t\tcase \"dynamic\":\n\t\t\t\t\t\tif (isCall) {\n\t\t\t\t\t\t\treturn `${importVar}_default()${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn asiSafe\n\t\t\t\t\t\t\t\t? `(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t\t\t\t\t? `;(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t\t: `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"default-only\":\n\t\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\t\texportName = exportName.slice(1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (exportName.length > 0) {\n\t\t\t\tif (exportsType === \"default-only\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"/* non-default import from non-esm module */undefined\" +\n\t\t\t\t\t\tpropertyAccess(exportName, 1)\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\texportsType !== \"namespace\" &&\n\t\t\t\t\texportName[0] === \"__esModule\"\n\t\t\t\t) {\n\t\t\t\t\treturn \"/* __esModule */true\";\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\texportsType === \"default-only\" ||\n\t\t\t\texportsType === \"default-with-named\"\n\t\t\t) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`var ${importVar}_namespace_cache;\\n`,\n\t\t\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t\t\t-1,\n\t\t\t\t\t\t`${importVar}_namespace_cache`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\treturn `/*#__PURE__*/ ${\n\t\t\t\t\tasiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"\n\t\t\t\t}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${\n\t\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\n\t\t\t\t}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n\t\t\t}\n\t\t}\n\n\t\tif (exportName.length > 0) {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\tconst used = exportsInfo.getUsedName(exportName, runtime);\n\t\t\tif (!used) {\n\t\t\t\tconst comment = Template.toNormalComment(\n\t\t\t\t\t`unused export ${propertyAccess(exportName)}`\n\t\t\t\t);\n\t\t\t\treturn `${comment} undefined`;\n\t\t\t}\n\t\t\tconst comment = equals(used, exportName)\n\t\t\t\t? \"\"\n\t\t\t\t: Template.toNormalComment(propertyAccess(exportName)) + \" \";\n\t\t\tconst access = `${importVar}${comment}${propertyAccess(used)}`;\n\t\t\tif (isCall && callContext === false) {\n\t\t\t\treturn asiSafe\n\t\t\t\t\t? `(0,${access})`\n\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t\t? `;(0,${access})`\n\t\t\t\t\t\t: `/*#__PURE__*/Object(${access})`;\n\t\t\t}\n\t\t\treturn access;\n\t\t} else {\n\t\t\treturn importVar;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock | undefined} options.block the async block\n\t * @param {string} options.message the message\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\tblockPromise({ block, message, chunkGraph, runtimeRequirements }) {\n\t\tif (!block) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\tif (!chunkGroup || chunkGroup.chunks.length === 0) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunks = chunkGroup.chunks.filter(\n\t\t\tchunk => !chunk.hasRuntime() && chunk.id !== null\n\t\t);\n\t\tconst comment = this.comment({\n\t\t\tmessage,\n\t\t\tchunkName: block.chunkName\n\t\t});\n\t\tif (chunks.length === 1) {\n\t\t\tconst chunkId = JSON.stringify(chunks[0].id);\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\n\t\t\tconst fetchPriority = chunkGroup.options.fetchPriority;\n\n\t\t\tif (fetchPriority) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.hasFetchPriority);\n\t\t\t}\n\n\t\t\treturn `${RuntimeGlobals.ensureChunk}(${comment}${chunkId}${\n\t\t\t\tfetchPriority ? `, ${JSON.stringify(fetchPriority)}` : \"\"\n\t\t\t})`;\n\t\t} else if (chunks.length > 0) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\n\t\t\tconst fetchPriority = chunkGroup.options.fetchPriority;\n\n\t\t\tif (fetchPriority) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.hasFetchPriority);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {Chunk} chunk chunk\n\t\t\t * @returns {string} require chunk id code\n\t\t\t */\n\t\t\tconst requireChunkId = chunk =>\n\t\t\t\t`${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)}${\n\t\t\t\t\tfetchPriority ? `, ${JSON.stringify(fetchPriority)}` : \"\"\n\t\t\t\t})`;\n\t\t\treturn `Promise.all(${comment.trim()}[${chunks\n\t\t\t\t.map(requireChunkId)\n\t\t\t\t.join(\", \")}])`;\n\t\t} else {\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tasyncModuleFactory({ block, chunkGraph, runtimeRequirements, request }) {\n\t\tconst dep = block.dependencies[0];\n\t\tconst module = chunkGraph.moduleGraph.getModule(dep);\n\t\tconst ensureChunk = this.blockPromise({\n\t\t\tblock,\n\t\t\tmessage: \"\",\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements\n\t\t});\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(\n\t\t\tensureChunk.startsWith(\"Promise.resolve(\")\n\t\t\t\t? `${factory}`\n\t\t\t\t: `${ensureChunk}.then(${this.returningFunction(factory)})`\n\t\t);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {Dependency} options.dependency the dependency\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tsyncModuleFactory({ dependency, chunkGraph, runtimeRequirements, request }) {\n\t\tconst module = chunkGraph.moduleGraph.getModule(dependency);\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(factory);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.exportsArgument the name of the exports object\n\t * @param {RuntimeRequirements} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} statement\n\t */\n\tdefineEsModuleFlagStatement({ exportsArgument, runtimeRequirements }) {\n\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\treturn `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {string} options.publicPath the public path\n\t * @param {RuntimeSpec=} options.runtime runtime\n\t * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n\t * @returns {string} the url of the asset\n\t */\n\tassetUrl({ publicPath, runtime, module, codeGenerationResults }) {\n\t\tif (!module) {\n\t\t\treturn \"data:,\";\n\t\t}\n\t\tconst codeGen = codeGenerationResults.get(module, runtime);\n\t\tconst data = /** @type {NonNullable<CodeGenerationResult[\"data\"]>} */ (\n\t\t\tcodeGen.data\n\t\t);\n\t\tconst url = data.get(\"url\");\n\t\tif (url) return url.toString();\n\t\tconst filename = data.get(\"filename\");\n\t\treturn publicPath + filename;\n\t}\n}\n\nmodule.exports = RuntimeTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}