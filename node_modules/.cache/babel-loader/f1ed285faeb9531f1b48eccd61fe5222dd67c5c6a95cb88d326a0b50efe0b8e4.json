{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport { FreeMode } from 'swiper/modules';\nimport menuData from \"../../data/services.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet blockHeight;\nlet firstBlockHeight;\nfunction ServicesMenu() {\n  _s();\n  const [fixed, setFixed] = useState(false);\n  const wrapperMenuRef = useRef(null);\n  const menuRef = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const sectionRefs = useRef({});\n  useEffect(() => {\n    const handleScroll = () => {\n      let currentSection = null;\n      Object.keys(sectionRefs.current).forEach(key => {\n        const section = sectionRefs.current[key];\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= 120 && rect.bottom >= 120) {\n          currentSection = key;\n        }\n      });\n      if (currentSection !== null && currentSection !== activeIndex) {\n        setActiveIndex(Number(currentSection));\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [activeIndex]);\n\n  // useEffect(() => {\n  //     const handleScroll = () => {\n  //         const block = wrapperMenuRef.current;\n  //         // const block = document.querySelector(\".servicesmenu-wrapper\");\n  //         const blockTop = block.getBoundingClientRect().top;\n  //         blockHeight = block.offsetHeight;\n\n  //         firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n  //         // console.log(\"blockTop=\" + blockTop, \"firstBlockHeight=\" + firstBlockHeight);\n  //         if (blockTop < firstBlockHeight) {\n  //             setFixed(true);\n  //         } else {\n  //             setFixed(false);\n  //         }\n\n  //         menuRef.current.swiper.updateSize();\n  //     };\n\n  //     const handleLoad = () => {\n  //         window.addEventListener('scroll', handleScroll);\n  //     };\n\n  //     handleLoad();\n\n  //     return () => {\n  //         window.removeEventListener('scroll', handleScroll);\n  //     };\n  // }, []);\n\n  const handleClick = index => {\n    setActiveIndex(index);\n  };\n  function scrollWithOffset(el) {\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n    const yOffset = -10; // Высота шапки\n    window.scrollTo({\n      top: yCoordinate + yOffset,\n      behavior: 'instant'\n    });\n  }\n\n  // const handleItemClick = (index) => {\n  //     setActiveIndex(index);\n\n  //     const category = document.querySelector('.services .service-id-' + index);\n  //     if (category) {\n  //         const bottomOffset = category.getBoundingClientRect().top + window.pageYOffset - 110;\n\n  //         window.scrollTo({\n  //             top: bottomOffset,\n  //             behavior: 'instant' // Плавная прокрутка\n  //         });\n  //     }\n\n  //     const activeElement = menuRef.current.querySelector(`.service-id-${index}`);\n  //     if (activeElement) {\n  //         const parentElement = activeElement.parentElement;\n  //         const containerRect = parentElement.getBoundingClientRect();\n  //         const elementRect = activeElement.getBoundingClientRect();\n  //         const containerWidth = parentElement.clientWidth; // Ширина видимой части контейнера\n  //         const elementWidth = activeElement.offsetWidth; // Ширина выбранного элемента\n  //         const offset = elementRect.left - containerRect.left - (containerWidth - elementWidth) / 2;\n  //         console.log(offset);\n\n  //         parentElement.scrollTo({\n  //             left: 500, //parentElement.scrollLeft + offset,\n  //             behavior: 'smooth' // Плавная прокрутка\n  //         });\n  //         // menuRef.current.scrollBy(500, 500);\n  //     }\n  // };\n\n  // const [containerRef, activeIndex, setActiveIndex] = useIntersectionObserver({\n  //     root: null,\n  //     rootMargin: '-110px 0px -99% 0px', // Проверяем пересечение только с верхней границей\n  //     threshold: [0, 1],\n  // }, 'service-id');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"servicesmenu-wrapper\",\n    ref: wrapperMenuRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fallback ${fixed ? 'fixed' : ''}`,\n      style: {\n        height: blockHeight\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'servicesmenu' + (fixed ? \" fixed\" : \"\"),\n      style: {\n        top: fixed ? firstBlockHeight + 'px' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 'auto',\n          freeMode: true,\n          modules: [FreeMode],\n          ref: menuRef,\n          children: menuData.map(service => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            className: `item`\n            // key={service.id}\n            // onClick={() => handleItemClick(service.id)}\n            ,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              smooth: true,\n              to: `#service-${service.id}`,\n              scroll: el => scrollWithOffset(el),\n              className: `${activeIndex === service.id ? 'active-service' : ''}`,\n              onClick: () => handleClick(service.id),\n              children: service.name\n            }, service.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(ServicesMenu, \"HgBUQMBkbrzhnV7Y8Mx+jbMh1NA=\");\n_c = ServicesMenu;\nexport default ServicesMenu;\nvar _c;\n$RefreshReg$(_c, \"ServicesMenu\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Swiper","SwiperSlide","HashLink","Link","FreeMode","menuData","jsxDEV","_jsxDEV","blockHeight","firstBlockHeight","ServicesMenu","_s","fixed","setFixed","wrapperMenuRef","menuRef","activeIndex","setActiveIndex","sectionRefs","handleScroll","currentSection","Object","keys","current","forEach","key","section","rect","getBoundingClientRect","top","bottom","Number","window","addEventListener","removeEventListener","handleClick","index","scrollWithOffset","el","yCoordinate","pageYOffset","yOffset","scrollTo","behavior","className","ref","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","slidesPerView","freeMode","modules","map","service","smooth","to","id","scroll","onClick","name","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\n\nimport { FreeMode } from 'swiper/modules';\n\nimport menuData from \"../../data/services.json\";\n\nlet blockHeight;\nlet firstBlockHeight;\n\nfunction ServicesMenu() {\n    const [fixed, setFixed] = useState(false);\n    const wrapperMenuRef = useRef(null);\n    const menuRef = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(null);\n    const sectionRefs = useRef({});\n\n    useEffect(() => {\n        const handleScroll = () => {\n            let currentSection = null;\n            Object.keys(sectionRefs.current).forEach(key => {\n                const section = sectionRefs.current[key];\n                const rect = section.getBoundingClientRect();\n                if (rect.top <= 120 && rect.bottom >= 120) {\n                    currentSection = key;\n                }\n            });\n            if (currentSection !== null && currentSection !== activeIndex) {\n                setActiveIndex(Number(currentSection));\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, [activeIndex]);\n\n    // useEffect(() => {\n    //     const handleScroll = () => {\n    //         const block = wrapperMenuRef.current;\n    //         // const block = document.querySelector(\".servicesmenu-wrapper\");\n    //         const blockTop = block.getBoundingClientRect().top;\n    //         blockHeight = block.offsetHeight;\n\n    //         firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n    //         // console.log(\"blockTop=\" + blockTop, \"firstBlockHeight=\" + firstBlockHeight);\n    //         if (blockTop < firstBlockHeight) {\n    //             setFixed(true);\n    //         } else {\n    //             setFixed(false);\n    //         }\n\n    //         menuRef.current.swiper.updateSize();\n    //     };\n\n    //     const handleLoad = () => {\n    //         window.addEventListener('scroll', handleScroll);\n    //     };\n\n    //     handleLoad();\n\n    //     return () => {\n    //         window.removeEventListener('scroll', handleScroll);\n    //     };\n    // }, []);\n\n    const handleClick = (index) => {\n        setActiveIndex(index);\n    };\n\n    function scrollWithOffset(el) {\n        const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n        const yOffset = -10; // Высота шапки\n        window.scrollTo({ top: yCoordinate + yOffset, behavior: 'instant' });\n    }\n\n    // const handleItemClick = (index) => {\n    //     setActiveIndex(index);\n\n    //     const category = document.querySelector('.services .service-id-' + index);\n    //     if (category) {\n    //         const bottomOffset = category.getBoundingClientRect().top + window.pageYOffset - 110;\n\n    //         window.scrollTo({\n    //             top: bottomOffset,\n    //             behavior: 'instant' // Плавная прокрутка\n    //         });\n    //     }\n\n    //     const activeElement = menuRef.current.querySelector(`.service-id-${index}`);\n    //     if (activeElement) {\n    //         const parentElement = activeElement.parentElement;\n    //         const containerRect = parentElement.getBoundingClientRect();\n    //         const elementRect = activeElement.getBoundingClientRect();\n    //         const containerWidth = parentElement.clientWidth; // Ширина видимой части контейнера\n    //         const elementWidth = activeElement.offsetWidth; // Ширина выбранного элемента\n    //         const offset = elementRect.left - containerRect.left - (containerWidth - elementWidth) / 2;\n    //         console.log(offset);\n\n    //         parentElement.scrollTo({\n    //             left: 500, //parentElement.scrollLeft + offset,\n    //             behavior: 'smooth' // Плавная прокрутка\n    //         });\n    //         // menuRef.current.scrollBy(500, 500);\n    //     }\n    // };\n\n    // const [containerRef, activeIndex, setActiveIndex] = useIntersectionObserver({\n    //     root: null,\n    //     rootMargin: '-110px 0px -99% 0px', // Проверяем пересечение только с верхней границей\n    //     threshold: [0, 1],\n    // }, 'service-id');\n\n    return (\n        <div className='servicesmenu-wrapper' ref={wrapperMenuRef}>\n            <div className={`fallback ${fixed ? 'fixed' : ''}`}\n                style={{ height: blockHeight }}\n            ></div>\n            <div className={'servicesmenu' + (fixed ? \" fixed\" : \"\")}\n                style={{ top: fixed ? firstBlockHeight + 'px' : '' }}\n            >\n                <div className='content'>\n                    <Swiper\n                        slidesPerView={'auto'}\n                        freeMode={true}\n                        modules={[FreeMode]}\n                        ref={menuRef}\n                    >\n                        {menuData.map(service => (\n                            <SwiperSlide\n                                className={`item`}\n                            // key={service.id}\n                            // onClick={() => handleItemClick(service.id)}\n                            >\n                                <Link\n                                    key={service.id}\n                                    smooth to={`#service-${service.id}`}\n                                    scroll={el => scrollWithOffset(el)}\n                                    className={`${activeIndex === service.id ? 'active-service' : ''}`}\n                                    onClick={() => handleClick(service.id)}\n                                >\n                                    {service.name}\n                                </Link>\n                            </SwiperSlide>\n                        ))}\n                    </Swiper>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ServicesMenu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}