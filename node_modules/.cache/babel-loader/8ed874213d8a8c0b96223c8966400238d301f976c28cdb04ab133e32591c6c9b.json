{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link, useParams, useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport { FreeMode } from 'swiper/modules';\nimport menuData from \"../../data/services.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet firstBlockHeight;\nfunction ServicesMenu() {\n  _s();\n  var _wrapperMenuRef$curre;\n  const [fixed, setFixed] = useState(false);\n  const wrapperMenuRef = useRef(null);\n  const swiperRef = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const sectionRefs = useRef({});\n  const {\n    serviceId\n  } = useParams();\n\n  // Используем useNavigate для программной навигации\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleScroll = () => {\n      const block = wrapperMenuRef.current;\n      const blockTop = block.getBoundingClientRect().top;\n\n      // Получаем высоту первого блока\n      const headerWrapperContent = document.querySelector(\".header-wrapper .content\");\n      firstBlockHeight = headerWrapperContent ? headerWrapperContent.offsetHeight : 0;\n\n      // Устанавливаем фиксацию меню\n      setFixed(blockTop < firstBlockHeight);\n\n      // Определяем текущий раздел\n      let currentSection = null;\n      Object.keys(sectionRefs.current).forEach(key => {\n        const section = sectionRefs.current[key];\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= firstBlockHeight && rect.bottom >= firstBlockHeight) {\n          currentSection = key;\n        }\n      });\n      if (currentSection !== null && currentSection !== activeIndex) {\n        setActiveIndex(Number(currentSection));\n      }\n    };\n    const handleLoad = () => {\n      window.addEventListener('scroll', handleScroll);\n      handleScroll(); // Вызываем при загрузке страницы для обновления фиксации и текущего раздела\n\n      console.log(serviceId, activeIndex);\n      // Прокрутка к разделу при загрузке страницы, если в URL указан serviceId\n      if (serviceId) {\n        const element = document.getElementById(`service-${serviceId}`);\n        if (element) {\n          scrollWithOffset(element);\n        }\n      }\n    };\n    handleLoad();\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [serviceId, activeIndex]);\n  useEffect(() => {\n    const observerOptions = {\n      root: null,\n      rootMargin: '-110px 0px -99% 0px',\n      // Проверяем пересечение только с верхней границей\n      threshold: [0, 1]\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const id = entry.target.getAttribute('id').split('-')[1];\n          setActiveIndex(Number(id));\n          // Переход к разделу через URL при прокрутке\n          if (serviceId !== id) {\n            // Используем navigate для обновления URL без перезагрузки страницы\n            navigate(`/#service-${id}`);\n          }\n          scrollToSlide(id);\n        }\n      });\n    }, observerOptions);\n    menuData.forEach(service => {\n      const element = document.getElementById(`service-${service.id}`);\n      if (element) {\n        observer.observe(element);\n        sectionRefs.current[service.id] = element;\n      }\n    });\n    return () => {\n      menuData.forEach(service => {\n        const element = document.getElementById(`service-${service.id}`);\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [serviceId, navigate]); // Обновляем при изменении serviceId\n\n  const scrollToSlide = index => {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      const counVisibleCategorys = 1;\n      swiperRef.current.swiper.slideTo(index - counVisibleCategorys, 1000, false);\n    }\n  };\n  const handleClick = index => {\n    setActiveIndex(index);\n    scrollToSlide(index);\n\n    // Скролл к элементу при клике\n    const element = document.getElementById(`service-${index}`);\n    if (element) {\n      scrollWithOffset(element);\n    }\n  };\n  function scrollWithOffset(el) {\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n    const yOffset = -120; // Высота шапки\n    window.scrollTo({\n      top: yCoordinate + yOffset,\n      behavior: 'instant'\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"servicesmenu-wrapper\",\n    ref: wrapperMenuRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fallback ${fixed ? 'fixed' : ''}`,\n      style: {\n        height: (_wrapperMenuRef$curre = wrapperMenuRef.current) === null || _wrapperMenuRef$curre === void 0 ? void 0 : _wrapperMenuRef$curre.offsetHeight\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `servicesmenu ${fixed ? 'fixed' : ''}`,\n      style: {\n        top: fixed ? firstBlockHeight : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 'auto',\n          freeMode: true,\n          modules: [FreeMode],\n          centeredSlides: true,\n          centeredSlidesBounds: true,\n          ref: swiperRef,\n          children: menuData.map(service => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            className: `item`,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `service-${service.id}`,\n              className: `${activeIndex === service.id ? 'active-service' : ''}`,\n              onClick: () => handleClick(service.id),\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(ServicesMenu, \"5UWlG4CY1FrAgJqtscSLrks1p2A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ServicesMenu;\nexport default ServicesMenu;\nvar _c;\n$RefreshReg$(_c, \"ServicesMenu\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Swiper","SwiperSlide","Link","useParams","useNavigate","FreeMode","menuData","jsxDEV","_jsxDEV","firstBlockHeight","ServicesMenu","_s","_wrapperMenuRef$curre","fixed","setFixed","wrapperMenuRef","swiperRef","activeIndex","setActiveIndex","sectionRefs","serviceId","navigate","handleScroll","block","current","blockTop","getBoundingClientRect","top","headerWrapperContent","document","querySelector","offsetHeight","currentSection","Object","keys","forEach","key","section","rect","bottom","Number","handleLoad","window","addEventListener","console","log","element","getElementById","scrollWithOffset","removeEventListener","observerOptions","root","rootMargin","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","id","target","getAttribute","split","scrollToSlide","service","observe","unobserve","index","swiper","counVisibleCategorys","slideTo","handleClick","el","yCoordinate","pageYOffset","yOffset","scrollTo","behavior","className","ref","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","slidesPerView","freeMode","modules","centeredSlides","centeredSlidesBounds","map","to","onClick","name","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link, useParams, useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport { FreeMode } from 'swiper/modules';\nimport menuData from \"../../data/services.json\";\n\nlet firstBlockHeight;\n\nfunction ServicesMenu() {\n    const [fixed, setFixed] = useState(false);\n    const wrapperMenuRef = useRef(null);\n    const swiperRef = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(null);\n    const sectionRefs = useRef({});\n    const { serviceId } = useParams();\n\n    // Используем useNavigate для программной навигации\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const block = wrapperMenuRef.current;\n            const blockTop = block.getBoundingClientRect().top;\n\n            // Получаем высоту первого блока\n            const headerWrapperContent = document.querySelector(\".header-wrapper .content\");\n            firstBlockHeight = headerWrapperContent ? headerWrapperContent.offsetHeight : 0;\n            \n            // Устанавливаем фиксацию меню\n            setFixed(blockTop < firstBlockHeight);\n\n            // Определяем текущий раздел\n            let currentSection = null;\n            Object.keys(sectionRefs.current).forEach(key => {\n                const section = sectionRefs.current[key];\n                const rect = section.getBoundingClientRect();\n                if (rect.top <= firstBlockHeight && rect.bottom >= firstBlockHeight) {\n                    currentSection = key;\n                }\n            });\n            if (currentSection !== null && currentSection !== activeIndex) {\n                setActiveIndex(Number(currentSection));\n            }\n        };\n\n        const handleLoad = () => {\n            window.addEventListener('scroll', handleScroll);\n            handleScroll(); // Вызываем при загрузке страницы для обновления фиксации и текущего раздела\n            \n            console.log(serviceId, activeIndex);\n            // Прокрутка к разделу при загрузке страницы, если в URL указан serviceId\n            if (serviceId) {\n                const element = document.getElementById(`service-${serviceId}`);\n                if (element) {\n                    scrollWithOffset(element);\n                }\n            }\n        };\n\n        handleLoad();\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, [serviceId, activeIndex]);\n\n    useEffect(() => {\n        const observerOptions = {\n            root: null,\n            rootMargin: '-110px 0px -99% 0px', // Проверяем пересечение только с верхней границей\n            threshold: [0, 1],\n        };\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const id = entry.target.getAttribute('id').split('-')[1];\n                    setActiveIndex(Number(id));\n                    // Переход к разделу через URL при прокрутке\n                    if (serviceId !== id) {\n                        // Используем navigate для обновления URL без перезагрузки страницы\n                        navigate(`/#service-${id}`);\n                    }\n                    scrollToSlide(id);\n                }\n            });\n        }, observerOptions);\n\n        menuData.forEach(service => {\n            const element = document.getElementById(`service-${service.id}`);\n            if (element) {\n                observer.observe(element);\n                sectionRefs.current[service.id] = element;\n            }\n        });\n\n        return () => {\n            menuData.forEach(service => {\n                const element = document.getElementById(`service-${service.id}`);\n                if (element) {\n                    observer.unobserve(element);\n                }\n            });\n        };\n    }, [serviceId, navigate]); // Обновляем при изменении serviceId\n\n    const scrollToSlide = (index) => {\n        if (swiperRef.current && swiperRef.current.swiper) {\n            const counVisibleCategorys = 1;\n            swiperRef.current.swiper.slideTo(index - counVisibleCategorys, 1000, false);\n        }\n    };\n\n    const handleClick = (index) => {\n        setActiveIndex(index);\n        scrollToSlide(index);\n\n        // Скролл к элементу при клике\n        const element = document.getElementById(`service-${index}`);\n        if (element) {\n            scrollWithOffset(element);\n        }\n    };\n\n    function scrollWithOffset(el) {\n        const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n        const yOffset = -120; // Высота шапки\n        window.scrollTo({ top: yCoordinate + yOffset, behavior: 'instant' });\n    }\n\n    return (\n        <div className='servicesmenu-wrapper' ref={wrapperMenuRef}>\n            <div className={`fallback ${fixed ? 'fixed' : ''}`} style={{ height: wrapperMenuRef.current?.offsetHeight }}></div>\n            <div className={`servicesmenu ${fixed ? 'fixed' : ''}`} style={{ top: fixed ? firstBlockHeight : '' }}>\n                <div className='content'>\n                    <Swiper\n                        slidesPerView={'auto'}\n                        freeMode={true}\n                        modules={[FreeMode]}\n                        centeredSlides={true}\n                        centeredSlidesBounds={true}\n                        ref={swiperRef}\n                    >\n                        {menuData.map(service => (\n                            <SwiperSlide className={`item`} key={service.id}>\n                                <Link\n                                    to={`service-${service.id}`}\n                                    className={`${activeIndex === service.id ? 'active-service' : ''}`}\n                                    onClick={() => handleClick(service.id)}\n                                >\n                                    {service.name}\n                                </Link>\n                            </SwiperSlide>\n                        ))}\n                    </Swiper>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ServicesMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}