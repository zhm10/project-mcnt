{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/**\n * @typedef {Object} AsyncWasmLoadingRuntimeModuleOptions\n * @property {function(string): string} generateLoadBinaryCode\n * @property {boolean} supportsStreaming\n */\n\nclass AsyncWasmLoadingRuntimeModule extends RuntimeModule {\n  /**\n   * @param {AsyncWasmLoadingRuntimeModuleOptions} options options\n   */\n  constructor({\n    generateLoadBinaryCode,\n    supportsStreaming\n  }) {\n    super(\"wasm loading\", RuntimeModule.STAGE_NORMAL);\n    this.generateLoadBinaryCode = generateLoadBinaryCode;\n    this.supportsStreaming = supportsStreaming;\n  }\n\n  /**\n   * @returns {string | null} runtime code\n   */\n  generate() {\n    const compilation = /** @type {Compilation} */this.compilation;\n    const chunk = /** @type {Chunk} */this.chunk;\n    const {\n      outputOptions,\n      runtimeTemplate\n    } = compilation;\n    const fn = RuntimeGlobals.instantiateWasm;\n    const wasmModuleSrcPath = compilation.getPath(JSON.stringify(outputOptions.webassemblyModuleFilename), {\n      hash: `\" + ${RuntimeGlobals.getFullHash}() + \"`,\n      hashWithLength: length => `\" + ${RuntimeGlobals.getFullHash}}().slice(0, ${length}) + \"`,\n      module: {\n        id: '\" + wasmModuleId + \"',\n        hash: `\" + wasmModuleHash + \"`,\n        hashWithLength(length) {\n          return `\" + wasmModuleHash.slice(0, ${length}) + \"`;\n        }\n      },\n      runtime: chunk.runtime\n    });\n    const loader = this.generateLoadBinaryCode(wasmModuleSrcPath);\n    const fallback = [`.then(${runtimeTemplate.returningFunction(\"x.arrayBuffer()\", \"x\")})`, `.then(${runtimeTemplate.returningFunction(\"WebAssembly.instantiate(bytes, importsObj)\", \"bytes\")})`, `.then(${runtimeTemplate.returningFunction(\"Object.assign(exports, res.instance.exports)\", \"res\")})`];\n    const getStreaming = () => {\n      const concat = ( /** @type {string[]} */...text) => text.join(\"\");\n      return [`var req = ${loader};`, `var fallback = ${runtimeTemplate.returningFunction(Template.asString([\"req\", Template.indent(fallback)]))};`, concat(\"return req.then(\", runtimeTemplate.basicFunction(\"res\", [`if (typeof WebAssembly.instantiateStreaming === \"function\") {`, Template.indent([\"return WebAssembly.instantiateStreaming(res, importsObj)\", Template.indent([\".then(\", Template.indent([runtimeTemplate.returningFunction(\"Object.assign(exports, res.instance.exports)\", \"res\") + \",\", runtimeTemplate.basicFunction(\"e\", [`if(res.headers.get(\"Content-Type\") !== \"application/wasm\") {`, Template.indent(['console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\\\n\", e);', \"return fallback();\"]), \"}\", \"throw e;\"])]), \");\"])]), \"}\", \"return fallback();\"]), \");\")];\n    };\n    return `${fn} = ${runtimeTemplate.basicFunction(\"exports, wasmModuleId, wasmModuleHash, importsObj\", this.supportsStreaming ? getStreaming() : [`return ${loader}`, Template.indent(fallback) + \";\"])};`;\n  }\n}\nmodule.exports = AsyncWasmLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","AsyncWasmLoadingRuntimeModule","constructor","generateLoadBinaryCode","supportsStreaming","STAGE_NORMAL","generate","compilation","chunk","outputOptions","runtimeTemplate","fn","instantiateWasm","wasmModuleSrcPath","getPath","JSON","stringify","webassemblyModuleFilename","hash","getFullHash","hashWithLength","length","module","id","runtime","loader","fallback","returningFunction","getStreaming","concat","text","join","asString","indent","basicFunction","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/wasm-async/AsyncWasmLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/**\n * @typedef {Object} AsyncWasmLoadingRuntimeModuleOptions\n * @property {function(string): string} generateLoadBinaryCode\n * @property {boolean} supportsStreaming\n */\n\nclass AsyncWasmLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {AsyncWasmLoadingRuntimeModuleOptions} options options\n\t */\n\tconstructor({ generateLoadBinaryCode, supportsStreaming }) {\n\t\tsuper(\"wasm loading\", RuntimeModule.STAGE_NORMAL);\n\t\tthis.generateLoadBinaryCode = generateLoadBinaryCode;\n\t\tthis.supportsStreaming = supportsStreaming;\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst chunk = /** @type {Chunk} */ (this.chunk);\n\t\tconst { outputOptions, runtimeTemplate } = compilation;\n\t\tconst fn = RuntimeGlobals.instantiateWasm;\n\t\tconst wasmModuleSrcPath = compilation.getPath(\n\t\t\tJSON.stringify(outputOptions.webassemblyModuleFilename),\n\t\t\t{\n\t\t\t\thash: `\" + ${RuntimeGlobals.getFullHash}() + \"`,\n\t\t\t\thashWithLength: length =>\n\t\t\t\t\t`\" + ${RuntimeGlobals.getFullHash}}().slice(0, ${length}) + \"`,\n\t\t\t\tmodule: {\n\t\t\t\t\tid: '\" + wasmModuleId + \"',\n\t\t\t\t\thash: `\" + wasmModuleHash + \"`,\n\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\treturn `\" + wasmModuleHash.slice(0, ${length}) + \"`;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\truntime: chunk.runtime\n\t\t\t}\n\t\t);\n\n\t\tconst loader = this.generateLoadBinaryCode(wasmModuleSrcPath);\n\t\tconst fallback = [\n\t\t\t`.then(${runtimeTemplate.returningFunction(\"x.arrayBuffer()\", \"x\")})`,\n\t\t\t`.then(${runtimeTemplate.returningFunction(\n\t\t\t\t\"WebAssembly.instantiate(bytes, importsObj)\",\n\t\t\t\t\"bytes\"\n\t\t\t)})`,\n\t\t\t`.then(${runtimeTemplate.returningFunction(\n\t\t\t\t\"Object.assign(exports, res.instance.exports)\",\n\t\t\t\t\"res\"\n\t\t\t)})`\n\t\t];\n\t\tconst getStreaming = () => {\n\t\t\tconst concat = (/** @type {string[]} */ ...text) => text.join(\"\");\n\t\t\treturn [\n\t\t\t\t`var req = ${loader};`,\n\t\t\t\t`var fallback = ${runtimeTemplate.returningFunction(Template.asString([\"req\", Template.indent(fallback)]))};`,\n\t\t\t\tconcat(\n\t\t\t\t\t\"return req.then(\",\n\t\t\t\t\truntimeTemplate.basicFunction(\"res\", [\n\t\t\t\t\t\t`if (typeof WebAssembly.instantiateStreaming === \"function\") {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return WebAssembly.instantiateStreaming(res, importsObj)\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\".then(\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\truntimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\t\"Object.assign(exports, res.instance.exports)\",\n\t\t\t\t\t\t\t\t\t\t\"res\"\n\t\t\t\t\t\t\t\t\t) + \",\",\n\t\t\t\t\t\t\t\t\truntimeTemplate.basicFunction(\"e\", [\n\t\t\t\t\t\t\t\t\t\t`if(res.headers.get(\"Content-Type\") !== \"application/wasm\") {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t'console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\\\n\", e);',\n\t\t\t\t\t\t\t\t\t\t\t\"return fallback();\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\t\"throw e;\"\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\");\"\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"return fallback();\"\n\t\t\t\t\t]),\n\t\t\t\t\t\");\"\n\t\t\t\t)\n\t\t\t];\n\t\t};\n\n\t\treturn `${fn} = ${runtimeTemplate.basicFunction(\n\t\t\t\"exports, wasmModuleId, wasmModuleHash, importsObj\",\n\t\t\tthis.supportsStreaming\n\t\t\t\t? getStreaming()\n\t\t\t\t: [`return ${loader}`, Template.indent(fallback) + \";\"]\n\t\t)};`;\n\t}\n}\n\nmodule.exports = AsyncWasmLoadingRuntimeModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}