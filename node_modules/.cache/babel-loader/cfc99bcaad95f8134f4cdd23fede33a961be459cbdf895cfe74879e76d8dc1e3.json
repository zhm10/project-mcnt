{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass ChunkPrefetchFunctionRuntimeModule extends RuntimeModule {\n  /**\n   * @param {string} childType TODO\n   * @param {string} runtimeFunction TODO\n   * @param {string} runtimeHandlers TODO\n   */\n  constructor(childType, runtimeFunction, runtimeHandlers) {\n    super(`chunk ${childType} function`);\n    this.childType = childType;\n    this.runtimeFunction = runtimeFunction;\n    this.runtimeHandlers = runtimeHandlers;\n  }\n\n  /**\n   * @returns {string | null} runtime code\n   */\n  generate() {\n    const {\n      runtimeFunction,\n      runtimeHandlers\n    } = this;\n    const compilation = /** @type {Compilation} */this.compilation;\n    const {\n      runtimeTemplate\n    } = compilation;\n    return Template.asString([`${runtimeHandlers} = {};`, `${runtimeFunction} = ${runtimeTemplate.basicFunction(\"chunkId\", [\n    // map is shorter than forEach\n    `Object.keys(${runtimeHandlers}).map(${runtimeTemplate.basicFunction(\"key\", `${runtimeHandlers}[key](chunkId);`)});`])}`]);\n  }\n}\nmodule.exports = ChunkPrefetchFunctionRuntimeModule;","map":{"version":3,"names":["RuntimeModule","require","Template","ChunkPrefetchFunctionRuntimeModule","constructor","childType","runtimeFunction","runtimeHandlers","generate","compilation","runtimeTemplate","asString","basicFunction","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/prefetch/ChunkPrefetchFunctionRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass ChunkPrefetchFunctionRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {string} childType TODO\n\t * @param {string} runtimeFunction TODO\n\t * @param {string} runtimeHandlers TODO\n\t */\n\tconstructor(childType, runtimeFunction, runtimeHandlers) {\n\t\tsuper(`chunk ${childType} function`);\n\t\tthis.childType = childType;\n\t\tthis.runtimeFunction = runtimeFunction;\n\t\tthis.runtimeHandlers = runtimeHandlers;\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst { runtimeFunction, runtimeHandlers } = this;\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst { runtimeTemplate } = compilation;\n\t\treturn Template.asString([\n\t\t\t`${runtimeHandlers} = {};`,\n\t\t\t`${runtimeFunction} = ${runtimeTemplate.basicFunction(\"chunkId\", [\n\t\t\t\t// map is shorter than forEach\n\t\t\t\t`Object.keys(${runtimeHandlers}).map(${runtimeTemplate.basicFunction(\n\t\t\t\t\t\"key\",\n\t\t\t\t\t`${runtimeHandlers}[key](chunkId);`\n\t\t\t\t)});`\n\t\t\t])}`\n\t\t]);\n\t}\n}\n\nmodule.exports = ChunkPrefetchFunctionRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAEvC;AACA;;AAEA,MAAME,kCAAkC,SAASH,aAAa,CAAC;EAC9D;AACD;AACA;AACA;AACA;EACCI,WAAWA,CAACC,SAAS,EAAEC,eAAe,EAAEC,eAAe,EAAE;IACxD,KAAK,CAAC,SAASF,SAAS,WAAW,CAAC;IACpC,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,eAAe,GAAGA,eAAe;EACvC;;EAEA;AACD;AACA;EACCC,QAAQA,CAAA,EAAG;IACV,MAAM;MAAEF,eAAe;MAAEC;IAAgB,CAAC,GAAG,IAAI;IACjD,MAAME,WAAW,GAAG,0BAA4B,IAAI,CAACA,WAAY;IACjE,MAAM;MAAEC;IAAgB,CAAC,GAAGD,WAAW;IACvC,OAAOP,QAAQ,CAACS,QAAQ,CAAC,CACxB,GAAGJ,eAAe,QAAQ,EAC1B,GAAGD,eAAe,MAAMI,eAAe,CAACE,aAAa,CAAC,SAAS,EAAE;IAChE;IACA,eAAeL,eAAe,SAASG,eAAe,CAACE,aAAa,CACnE,KAAK,EACL,GAAGL,eAAe,iBACnB,CAAC,IAAI,CACL,CAAC,EAAE,CACJ,CAAC;EACH;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGX,kCAAkC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}