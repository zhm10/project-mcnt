{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst DependencyTemplate = require(\"../DependencyTemplate\");\nconst RawModule = require(\"../RawModule\");\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptParser\").Attributes} Attributes */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass ModuleDependency extends Dependency {\n  /**\n   * @param {string} request request path which needs resolving\n   */\n  constructor(request) {\n    super();\n    this.request = request;\n    this.userRequest = request;\n    this.range = undefined;\n    // TODO move it to subclasses and rename\n    // assertions must be serialized by subclasses that use it\n    /** @type {Attributes | undefined} */\n    this.assertions = undefined;\n    this._context = undefined;\n  }\n\n  /**\n   * @returns {string | undefined} a request context\n   */\n  getContext() {\n    return this._context;\n  }\n\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n  getResourceIdentifier() {\n    let str = `context${this._context || \"\"}|module${this.request}`;\n    if (this.assertions !== undefined) {\n      str += JSON.stringify(this.assertions);\n    }\n    return str;\n  }\n\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n  couldAffectReferencingModule() {\n    return true;\n  }\n\n  /**\n   * @param {string} context context directory\n   * @returns {Module | null} a module\n   */\n  createIgnoredModule(context) {\n    return new RawModule(\"/* (ignored) */\", `ignored|${context}|${this.request}`, `${this.request} (ignored)`);\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.userRequest);\n    write(this._context);\n    write(this.range);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.request = read();\n    this.userRequest = read();\n    this._context = read();\n    this.range = read();\n    super.deserialize(context);\n  }\n}\nModuleDependency.Template = DependencyTemplate;\nmodule.exports = ModuleDependency;","map":{"version":3,"names":["Dependency","require","DependencyTemplate","RawModule","ModuleDependency","constructor","request","userRequest","range","undefined","assertions","_context","getContext","getResourceIdentifier","str","JSON","stringify","couldAffectReferencingModule","createIgnoredModule","context","serialize","write","deserialize","read","Template","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/dependencies/ModuleDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst DependencyTemplate = require(\"../DependencyTemplate\");\nconst RawModule = require(\"../RawModule\");\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptParser\").Attributes} Attributes */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass ModuleDependency extends Dependency {\n\t/**\n\t * @param {string} request request path which needs resolving\n\t */\n\tconstructor(request) {\n\t\tsuper();\n\t\tthis.request = request;\n\t\tthis.userRequest = request;\n\t\tthis.range = undefined;\n\t\t// TODO move it to subclasses and rename\n\t\t// assertions must be serialized by subclasses that use it\n\t\t/** @type {Attributes | undefined} */\n\t\tthis.assertions = undefined;\n\t\tthis._context = undefined;\n\t}\n\n\t/**\n\t * @returns {string | undefined} a request context\n\t */\n\tgetContext() {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\tlet str = `context${this._context || \"\"}|module${this.request}`;\n\t\tif (this.assertions !== undefined) {\n\t\t\tstr += JSON.stringify(this.assertions);\n\t\t}\n\t\treturn str;\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module | null} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\treturn new RawModule(\n\t\t\t\"/* (ignored) */\",\n\t\t\t`ignored|${context}|${this.request}`,\n\t\t\t`${this.request} (ignored)`\n\t\t);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.request);\n\t\twrite(this.userRequest);\n\t\twrite(this._context);\n\t\twrite(this.range);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.request = read();\n\t\tthis.userRequest = read();\n\t\tthis._context = read();\n\t\tthis.range = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nModuleDependency.Template = DependencyTemplate;\n\nmodule.exports = ModuleDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC3D,MAAME,SAAS,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA,MAAMG,gBAAgB,SAASJ,UAAU,CAAC;EACzC;AACD;AACA;EACCK,WAAWA,CAACC,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGD,OAAO;IAC1B,IAAI,CAACE,KAAK,GAAGC,SAAS;IACtB;IACA;IACA;IACA,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,QAAQ,GAAGF,SAAS;EAC1B;;EAEA;AACD;AACA;EACCG,UAAUA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACD,QAAQ;EACrB;;EAEA;AACD;AACA;EACCE,qBAAqBA,CAAA,EAAG;IACvB,IAAIC,GAAG,GAAG,UAAU,IAAI,CAACH,QAAQ,IAAI,EAAE,UAAU,IAAI,CAACL,OAAO,EAAE;IAC/D,IAAI,IAAI,CAACI,UAAU,KAAKD,SAAS,EAAE;MAClCK,GAAG,IAAIC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACN,UAAU,CAAC;IACvC;IACA,OAAOI,GAAG;EACX;;EAEA;AACD;AACA;EACCG,4BAA4BA,CAAA,EAAG;IAC9B,OAAO,IAAI;EACZ;;EAEA;AACD;AACA;AACA;EACCC,mBAAmBA,CAACC,OAAO,EAAE;IAC5B,OAAO,IAAIhB,SAAS,CACnB,iBAAiB,EACjB,WAAWgB,OAAO,IAAI,IAAI,CAACb,OAAO,EAAE,EACpC,GAAG,IAAI,CAACA,OAAO,YAChB,CAAC;EACF;;EAEA;AACD;AACA;EACCc,SAASA,CAACD,OAAO,EAAE;IAClB,MAAM;MAAEE;IAAM,CAAC,GAAGF,OAAO;IACzBE,KAAK,CAAC,IAAI,CAACf,OAAO,CAAC;IACnBe,KAAK,CAAC,IAAI,CAACd,WAAW,CAAC;IACvBc,KAAK,CAAC,IAAI,CAACV,QAAQ,CAAC;IACpBU,KAAK,CAAC,IAAI,CAACb,KAAK,CAAC;IACjB,KAAK,CAACY,SAAS,CAACD,OAAO,CAAC;EACzB;;EAEA;AACD;AACA;EACCG,WAAWA,CAACH,OAAO,EAAE;IACpB,MAAM;MAAEI;IAAK,CAAC,GAAGJ,OAAO;IACxB,IAAI,CAACb,OAAO,GAAGiB,IAAI,CAAC,CAAC;IACrB,IAAI,CAAChB,WAAW,GAAGgB,IAAI,CAAC,CAAC;IACzB,IAAI,CAACZ,QAAQ,GAAGY,IAAI,CAAC,CAAC;IACtB,IAAI,CAACf,KAAK,GAAGe,IAAI,CAAC,CAAC;IACnB,KAAK,CAACD,WAAW,CAACH,OAAO,CAAC;EAC3B;AACD;AAEAf,gBAAgB,CAACoB,QAAQ,GAAGtB,kBAAkB;AAE9CuB,MAAM,CAACC,OAAO,GAAGtB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}