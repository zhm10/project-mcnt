{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport { FreeMode } from 'swiper/modules';\nimport menuData from \"../../data/services.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet blockHeight;\nlet firstBlockHeight;\nfunction ServicesMenu() {\n  _s();\n  const [fixed, setFixed] = useState(false);\n  const wrapperMenuRef = useRef(null);\n  const swiperRef = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const sectionRefs = useRef({});\n  const location = useLocation();\n\n  // Общий useEffect для инициализации компонента\n  useEffect(() => {\n    // Метод для обработки скролла\n    const handleScroll = () => {\n      const block = wrapperMenuRef.current;\n      const blockTop = block.getBoundingClientRect().top;\n      blockHeight = block.offsetHeight;\n      firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n      if (blockTop < firstBlockHeight) {\n        setFixed(true);\n      } else {\n        setFixed(false);\n      }\n      let currentSection = null;\n      Object.keys(sectionRefs.current).forEach(key => {\n        const section = sectionRefs.current[key];\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= 120 && rect.bottom >= 120) {\n          currentSection = key;\n        }\n      });\n      if (currentSection !== null && currentSection !== activeIndex) {\n        setActiveIndex(Number(currentSection));\n      }\n    };\n\n    // Метод для обработки загрузки страницы\n    const handleLoad = () => {\n      window.addEventListener('scroll', handleScroll);\n      initializeSwiper();\n      handleInitialScroll();\n    };\n\n    // Инициализация компонента после загрузки страницы\n    window.addEventListener('load', handleLoad);\n\n    // Удаление обработчиков событий при размонтировании компонента\n    return () => {\n      window.removeEventListener('load', handleLoad);\n      window.removeEventListener('scroll', handleScroll);\n      observer.disconnect();\n    };\n  }, [activeIndex, location]);\n\n  // Используем IntersectionObserver для отслеживания видимости блоков\n  const observerOptions = {\n    root: null,\n    rootMargin: '-110px 0px -99% 0px',\n    // Проверяем пересечение только с верхней границей\n    threshold: [0, 1]\n  };\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const id = entry.target.getAttribute('id').split('-')[1];\n        setActiveIndex(Number(id));\n        window.history.replaceState(null, null, `/service-${id}`);\n        scrollToSlide(id);\n      }\n    });\n  }, observerOptions);\n\n  // Инициализация Swiper\n  const initializeSwiper = () => {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      swiperRef.current.swiper.update();\n    }\n  };\n\n  // Прокрутка к нужному блоку при загрузке страницы, если есть хэш в URL\n  const handleInitialScroll = () => {\n    const pathname = location.pathname;\n    if (pathname !== '/') {\n      const elementId = pathname.slice(1); // убираем ведущий слэш\n      const element = document.getElementById(elementId);\n      if (element) {\n        scrollWithOffset(element);\n      }\n    }\n  };\n\n  // Прокрутка Swiper к указанному слайду\n  const scrollToSlide = index => {\n    if (swiperRef.current && swiperRef.current.swiper) {\n      const countVisibleCategories = 1;\n      swiperRef.current.swiper.slideTo(index - countVisibleCategories, 1000, false);\n    }\n  };\n\n  // Обработчик клика по ссылке\n  const handleClick = index => {\n    setActiveIndex(index);\n    scrollToSlide(index);\n  };\n\n  // Прокрутка с учетом смещения\n  const scrollWithOffset = el => {\n    const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n    const yOffset = -100; // Высота шапки\n    window.scrollTo({\n      top: yCoordinate + yOffset,\n      behavior: 'instant'\n    });\n  };\n\n  // Наблюдение за всеми элементами меню\n  useEffect(() => {\n    menuData.forEach(service => {\n      const element = document.getElementById(`service-${service.id}`);\n      if (element) {\n        observer.observe(element);\n        sectionRefs.current[service.id] = element;\n      }\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"servicesmenu-wrapper\",\n    ref: wrapperMenuRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fallback ${fixed ? 'fixed' : ''}`,\n      style: {\n        height: blockHeight\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'servicesmenu' + (fixed ? \" fixed\" : \"\"),\n      style: {\n        top: fixed ? firstBlockHeight + 'px' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 'auto',\n          freeMode: true,\n          modules: [FreeMode],\n          centeredSlides: true,\n          centeredSlidesBounds: true,\n          ref: swiperRef,\n          children: menuData.map(service => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            className: `item`,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/service-${service.id}`,\n              className: `${activeIndex === service.id ? 'active-service' : ''}`,\n              onClick: () => handleClick(service.id),\n              children: service.name\n            }, service.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(ServicesMenu, \"T++YAwYwPn7e+D/nR3d5XQYSUFg=\", false, function () {\n  return [useLocation];\n});\n_c = ServicesMenu;\nexport default ServicesMenu;\nvar _c;\n$RefreshReg$(_c, \"ServicesMenu\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Swiper","SwiperSlide","Link","useLocation","FreeMode","menuData","jsxDEV","_jsxDEV","blockHeight","firstBlockHeight","ServicesMenu","_s","fixed","setFixed","wrapperMenuRef","swiperRef","activeIndex","setActiveIndex","sectionRefs","location","handleScroll","block","current","blockTop","getBoundingClientRect","top","offsetHeight","document","querySelector","currentSection","Object","keys","forEach","key","section","rect","bottom","Number","handleLoad","window","addEventListener","initializeSwiper","handleInitialScroll","removeEventListener","observer","disconnect","observerOptions","root","rootMargin","threshold","IntersectionObserver","entries","entry","isIntersecting","id","target","getAttribute","split","history","replaceState","scrollToSlide","swiper","update","pathname","elementId","slice","element","getElementById","scrollWithOffset","index","countVisibleCategories","slideTo","handleClick","el","yCoordinate","pageYOffset","yOffset","scrollTo","behavior","service","observe","className","ref","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","slidesPerView","freeMode","modules","centeredSlides","centeredSlidesBounds","map","to","onClick","name","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport { FreeMode } from 'swiper/modules';\nimport menuData from \"../../data/services.json\";\n\nlet blockHeight\nlet firstBlockHeight\n\nfunction ServicesMenu() {\n    const [fixed, setFixed] = useState(false);\n    const wrapperMenuRef = useRef(null);\n    const swiperRef = useRef(null);\n    const [activeIndex, setActiveIndex] = useState(null);\n    const sectionRefs = useRef({});\n    const location = useLocation();\n\n    // Общий useEffect для инициализации компонента\n    useEffect(() => {\n        // Метод для обработки скролла\n        const handleScroll = () => {\n            const block = wrapperMenuRef.current;\n            const blockTop = block.getBoundingClientRect().top;\n            blockHeight = block.offsetHeight;\n\n            firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n            if (blockTop < firstBlockHeight) {\n                setFixed(true);\n            } else {\n                setFixed(false);\n            }\n\n            let currentSection = null;\n            Object.keys(sectionRefs.current).forEach(key => {\n                const section = sectionRefs.current[key];\n                const rect = section.getBoundingClientRect();\n                if (rect.top <= 120 && rect.bottom >= 120) {\n                    currentSection = key;\n                }\n            });\n            if (currentSection !== null && currentSection !== activeIndex) {\n                setActiveIndex(Number(currentSection));\n            }\n        };\n\n        // Метод для обработки загрузки страницы\n        const handleLoad = () => {\n            window.addEventListener('scroll', handleScroll);\n            initializeSwiper();\n            handleInitialScroll();\n        };\n\n        // Инициализация компонента после загрузки страницы\n        window.addEventListener('load', handleLoad);\n\n        // Удаление обработчиков событий при размонтировании компонента\n        return () => {\n            window.removeEventListener('load', handleLoad);\n            window.removeEventListener('scroll', handleScroll);\n            observer.disconnect();\n        };\n    }, [activeIndex, location]);\n\n    // Используем IntersectionObserver для отслеживания видимости блоков\n    const observerOptions = {\n        root: null,\n        rootMargin: '-110px 0px -99% 0px', // Проверяем пересечение только с верхней границей\n        threshold: [0, 1],\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const id = entry.target.getAttribute('id').split('-')[1];\n                setActiveIndex(Number(id));\n                window.history.replaceState(null, null, `/service-${id}`);\n                scrollToSlide(id);\n            }\n        });\n    }, observerOptions);\n\n    // Инициализация Swiper\n    const initializeSwiper = () => {\n        if (swiperRef.current && swiperRef.current.swiper) {\n            swiperRef.current.swiper.update();\n        }\n    };\n\n    // Прокрутка к нужному блоку при загрузке страницы, если есть хэш в URL\n    const handleInitialScroll = () => {\n        const pathname = location.pathname;\n        if (pathname !== '/') {\n            const elementId = pathname.slice(1); // убираем ведущий слэш\n            const element = document.getElementById(elementId);\n            if (element) {\n                scrollWithOffset(element);\n            }\n        }\n    };\n\n    // Прокрутка Swiper к указанному слайду\n    const scrollToSlide = (index) => {\n        if (swiperRef.current && swiperRef.current.swiper) {\n            const countVisibleCategories = 1;\n            swiperRef.current.swiper.slideTo(index - countVisibleCategories, 1000, false);\n        }\n    };\n\n    // Обработчик клика по ссылке\n    const handleClick = (index) => {\n        setActiveIndex(index);\n        scrollToSlide(index);\n    };\n\n    // Прокрутка с учетом смещения\n    const scrollWithOffset = (el) => {\n        const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n        const yOffset = -100; // Высота шапки\n        window.scrollTo({ top: yCoordinate + yOffset, behavior: 'instant' });\n    };\n\n    // Наблюдение за всеми элементами меню\n    useEffect(() => {\n        menuData.forEach(service => {\n            const element = document.getElementById(`service-${service.id}`);\n            if (element) {\n                observer.observe(element);\n                sectionRefs.current[service.id] = element;\n            }\n        });\n\n        return () => {\n            observer.disconnect();\n        };\n    }, []);\n\n    return (\n        <div className='servicesmenu-wrapper' ref={wrapperMenuRef}>\n            <div className={`fallback ${fixed ? 'fixed' : ''}`}\n                style={{ height: blockHeight }}\n            ></div>\n            <div className={'servicesmenu' + (fixed ? \" fixed\" : \"\")}\n                style={{ top: fixed ? firstBlockHeight + 'px' : '' }}\n            >\n                <div className='content'>\n                    <Swiper\n                        slidesPerView={'auto'}\n                        freeMode={true}\n                        modules={[FreeMode]}\n                        centeredSlides={true}\n                        centeredSlidesBounds={true}\n                        ref={swiperRef}\n                    >\n                        {menuData.map(service => (\n                            <SwiperSlide\n                                className={`item`}\n                                key={service.id}\n                            >\n                                <Link\n                                    key={service.id}\n                                    to={`/service-${service.id}`}\n                                    className={`${activeIndex === service.id ? 'active-service' : ''}`}\n                                    onClick={() => handleClick(service.id)}\n                                >\n                                    {service.name}\n                                </Link>\n                            </SwiperSlide>\n                        ))}\n                    </Swiper>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ServicesMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}