{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/Stories/Stories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Stories from \"react-insta-stories\";\nimport storiesData from \"../../data/stories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MCStories() {\n  _s();\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    try {\n      const updatedStories = storiesData.map(story => {\n        // Проверка наличия файла\n        let filePath;\n        try {\n          filePath = require(`../../assets/stories/${story.url}`).default;\n        } catch (error) {\n          console.error(`Error loading file: ${story.url}`, error);\n          filePath = ''; // Или задайте значение по умолчанию\n        }\n        return {\n          url: filePath,\n          type: story.type || 'image',\n          header: {\n            heading: story.overlay,\n            subheading: '',\n            profileImage: '' // Вы можете добавить ссылку на изображение профиля, если нужно\n          },\n          storyContent: {\n            width: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            margin: 'auto'\n          }\n        };\n      });\n      setStories(updatedStories);\n    } catch (error) {\n      console.error('Error processing stories data', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stories, {\n      stories: stories,\n      defaultInterval: 2000,\n      width: \"100%\",\n      height: 800,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MCStories, \"cTz//Yl5IQLyRPBEoAItnTUhr1w=\");\n_c = MCStories;\nexport default MCStories;\nvar _c;\n$RefreshReg$(_c, \"MCStories\");","map":{"version":3,"names":["React","useEffect","useState","Stories","storiesData","jsxDEV","_jsxDEV","MCStories","_s","stories","setStories","updatedStories","map","story","filePath","require","url","default","error","console","type","header","heading","overlay","subheading","profileImage","storyContent","width","maxWidth","maxHeight","margin","children","defaultInterval","height","loop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/Stories/Stories.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Stories from \"react-insta-stories\";\n\nimport storiesData from \"../../data/stories.json\";\n\n\nfunction MCStories() {\n  const [stories, setStories] = useState([]);\n\n  useEffect(() => {\n    try {\n      const updatedStories = storiesData.map((story) => {\n        // Проверка наличия файла\n        let filePath;\n        try {\n          filePath = require(`../../assets/stories/${story.url}`).default;\n        } catch (error) {\n          console.error(`Error loading file: ${story.url}`, error);\n          filePath = ''; // Или задайте значение по умолчанию\n        }\n\n        return {\n          url: filePath,\n          type: story.type || 'image',\n          header: {\n            heading: story.overlay,\n            subheading: '',\n            profileImage: '', // Вы можете добавить ссылку на изображение профиля, если нужно\n          },\n          storyContent: {\n            width: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            margin: 'auto',\n          },\n        };\n      });\n\n      setStories(updatedStories);\n    } catch (error) {\n      console.error('Error processing stories data', error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Stories\n        stories={stories}\n        defaultInterval={2000}\n        width={\"100%\"}\n        height={800}\n        loop={true}\n      />\n    </div>\n  );\n}\n\nexport default MCStories;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,qBAAqB;AAEzC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMU,cAAc,GAAGP,WAAW,CAACQ,GAAG,CAAEC,KAAK,IAAK;QAChD;QACA,IAAIC,QAAQ;QACZ,IAAI;UACFA,QAAQ,GAAGC,OAAO,CAAC,wBAAwBF,KAAK,CAACG,GAAG,EAAE,CAAC,CAACC,OAAO;QACjE,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBL,KAAK,CAACG,GAAG,EAAE,EAAEE,KAAK,CAAC;UACxDJ,QAAQ,GAAG,EAAE,CAAC,CAAC;QACjB;QAEA,OAAO;UACLE,GAAG,EAAEF,QAAQ;UACbM,IAAI,EAAEP,KAAK,CAACO,IAAI,IAAI,OAAO;UAC3BC,MAAM,EAAE;YACNC,OAAO,EAAET,KAAK,CAACU,OAAO;YACtBC,UAAU,EAAE,EAAE;YACdC,YAAY,EAAE,EAAE,CAAE;UACpB,CAAC;UACDC,YAAY,EAAE;YACZC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAE,MAAM;YAChBC,SAAS,EAAE,MAAM;YACjBC,MAAM,EAAE;UACV;QACF,CAAC;MACH,CAAC,CAAC;MAEFpB,UAAU,CAACC,cAAc,CAAC;IAC5B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAyB,QAAA,eACEzB,OAAA,CAACH,OAAO;MACNM,OAAO,EAAEA,OAAQ;MACjBuB,eAAe,EAAE,IAAK;MACtBL,KAAK,EAAE,MAAO;MACdM,MAAM,EAAE,GAAI;MACZC,IAAI,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9B,EAAA,CAjDQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAmDlB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}