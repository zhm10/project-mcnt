{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DllModuleFactory = require(\"./DllModuleFactory\");\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DllEntryPlugin {\n  /**\n   * @param {string} context context\n   * @param {string[]} entries entry names\n   * @param {TODO} options options\n   */\n  constructor(context, entries, options) {\n    this.context = context;\n    this.entries = entries;\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DllEntryPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      const dllModuleFactory = new DllModuleFactory();\n      compilation.dependencyFactories.set(DllEntryDependency, dllModuleFactory);\n      compilation.dependencyFactories.set(EntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapAsync(\"DllEntryPlugin\", (compilation, callback) => {\n      compilation.addEntry(this.context, new DllEntryDependency(this.entries.map((e, idx) => {\n        const dep = new EntryDependency(e);\n        dep.loc = {\n          name: this.options.name,\n          index: idx\n        };\n        return dep;\n      }), this.options.name), this.options, error => {\n        if (error) return callback(error);\n        callback();\n      });\n    });\n  }\n}\nmodule.exports = DllEntryPlugin;","map":{"version":3,"names":["DllModuleFactory","require","DllEntryDependency","EntryDependency","DllEntryPlugin","constructor","context","entries","options","apply","compiler","hooks","compilation","tap","normalModuleFactory","dllModuleFactory","dependencyFactories","set","make","tapAsync","callback","addEntry","map","e","idx","dep","loc","name","index","error","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/DllEntryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DllModuleFactory = require(\"./DllModuleFactory\");\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DllEntryPlugin {\n\t/**\n\t * @param {string} context context\n\t * @param {string[]} entries entry names\n\t * @param {TODO} options options\n\t */\n\tconstructor(context, entries, options) {\n\t\tthis.context = context;\n\t\tthis.entries = entries;\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DllEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst dllModuleFactory = new DllModuleFactory();\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tDllEntryDependency,\n\t\t\t\t\tdllModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.make.tapAsync(\"DllEntryPlugin\", (compilation, callback) => {\n\t\t\tcompilation.addEntry(\n\t\t\t\tthis.context,\n\t\t\t\tnew DllEntryDependency(\n\t\t\t\t\tthis.entries.map((e, idx) => {\n\t\t\t\t\t\tconst dep = new EntryDependency(e);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: this.options.name,\n\t\t\t\t\t\t\tindex: idx\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn dep;\n\t\t\t\t\t}),\n\t\t\t\t\tthis.options.name\n\t\t\t\t),\n\t\t\t\tthis.options,\n\t\t\t\terror => {\n\t\t\t\t\tif (error) return callback(error);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = DllEntryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,mCAAmC,CAAC;AACvE,MAAME,eAAe,GAAGF,OAAO,CAAC,gCAAgC,CAAC;;AAEjE;;AAEA,MAAMG,cAAc,CAAC;EACpB;AACD;AACA;AACA;AACA;EACCC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAE;IACtC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,gBAAgB,EAChB,CAACD,WAAW,EAAE;MAAEE;IAAoB,CAAC,KAAK;MACzC,MAAMC,gBAAgB,GAAG,IAAIf,gBAAgB,CAAC,CAAC;MAC/CY,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCf,kBAAkB,EAClBa,gBACD,CAAC;MACDH,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCd,eAAe,EACfW,mBACD,CAAC;IACF,CACD,CAAC;IACDJ,QAAQ,CAACC,KAAK,CAACO,IAAI,CAACC,QAAQ,CAAC,gBAAgB,EAAE,CAACP,WAAW,EAAEQ,QAAQ,KAAK;MACzER,WAAW,CAACS,QAAQ,CACnB,IAAI,CAACf,OAAO,EACZ,IAAIJ,kBAAkB,CACrB,IAAI,CAACK,OAAO,CAACe,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;QAC5B,MAAMC,GAAG,GAAG,IAAItB,eAAe,CAACoB,CAAC,CAAC;QAClCE,GAAG,CAACC,GAAG,GAAG;UACTC,IAAI,EAAE,IAAI,CAACnB,OAAO,CAACmB,IAAI;UACvBC,KAAK,EAAEJ;QACR,CAAC;QACD,OAAOC,GAAG;MACX,CAAC,CAAC,EACF,IAAI,CAACjB,OAAO,CAACmB,IACd,CAAC,EACD,IAAI,CAACnB,OAAO,EACZqB,KAAK,IAAI;QACR,IAAIA,KAAK,EAAE,OAAOT,QAAQ,CAACS,KAAK,CAAC;QACjCT,QAAQ,CAAC,CAAC;MACX,CACD,CAAC;IACF,CAAC,CAAC;EACH;AACD;AAEAU,MAAM,CAACC,OAAO,GAAG3B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}