{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst createHash = require(\"../util/createHash\");\nconst {\n  makePathsRelative\n} = require(\"../util/identifier\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssGeneratorExportsConvention} CssGeneratorExportsConvention */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssGeneratorLocalIdentName} CssGeneratorLocalIdentName */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../CssModule\")} CssModule */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../css/CssExportsGenerator\")} CssExportsGenerator */\n/** @typedef {import(\"../css/CssGenerator\")} CssGenerator */\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/**\n * @param {string} local css local\n * @param {CssModule} module module\n * @param {ChunkGraph} chunkGraph chunk graph\n * @param {RuntimeTemplate} runtimeTemplate runtime template\n * @returns {string} local ident\n */\nconst getLocalIdent = (local, module, chunkGraph, runtimeTemplate) => {\n  const localIdentName = /** @type {CssGenerator | CssExportsGenerator} */\n  module.generator.localIdentName;\n  const relativeResourcePath = makePathsRelative( /** @type {string} */module.context, module.resourceResolveData.path);\n  const {\n    hashFunction,\n    hashDigest,\n    hashDigestLength,\n    hashSalt,\n    uniqueName\n  } = runtimeTemplate.outputOptions;\n  const hash = createHash(hashFunction);\n  if (hashSalt) {\n    hash.update(hashSalt);\n  }\n  hash.update(relativeResourcePath);\n  if (!/\\[local\\]/.test(localIdentName)) {\n    hash.update(local);\n  }\n  const localIdentHash = /** @type {string} */hash.digest(hashDigest)\n  // Remove all leading digits\n  .replace(/^\\d+/, \"\")\n  // Replace all slashes with underscores (same as in base64url)\n  .replace(/\\//g, \"_\")\n  // Remove everything that is not an alphanumeric or underscore\n  .replace(/[^A-Za-z0-9_]+/g, \"_\").slice(0, hashDigestLength);\n  return runtimeTemplate.compilation.getPath(localIdentName, {\n    filename: relativeResourcePath,\n    hash: localIdentHash,\n    contentHash: localIdentHash,\n    chunkGraph,\n    module\n  }).replace(/\\[local\\]/g, local).replace(/\\[uniqueName\\]/g, uniqueName);\n};\nclass CssLocalIdentifierDependency extends NullDependency {\n  /**\n   * @param {string} name name\n   * @param {Range} range range\n   * @param {string=} prefix prefix\n   */\n  constructor(name, range, prefix = \"\") {\n    super();\n    this.name = name;\n    this.range = range;\n    this.prefix = prefix;\n  }\n  get type() {\n    return \"css local identifier\";\n  }\n\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n  getExports(moduleGraph) {\n    const name = this.name;\n    return {\n      exports: [{\n        name,\n        canMangle: true\n      }],\n      dependencies: undefined\n    };\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.name);\n    write(this.range);\n    write(this.prefix);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.name = read();\n    this.range = read();\n    this.prefix = read();\n    super.deserialize(context);\n  }\n}\n\n/**\n * @param {string} str string\n * @param {string | boolean} omitUnderscore true if you need to omit underscore\n * @returns {string} escaped css identifier\n */\nconst escapeCssIdentifier = (str, omitUnderscore) => {\n  const escaped = `${str}`.replace(\n  // cspell:word uffff\n  /[^a-zA-Z0-9_\\u0081-\\uffff-]/g, s => `\\\\${s}`);\n  return !omitUnderscore && /^(?!--)[0-9-]/.test(escaped) ? `_${escaped}` : escaped;\n};\nCssLocalIdentifierDependency.Template = class CssLocalIdentifierDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, {\n    module,\n    moduleGraph,\n    chunkGraph,\n    runtime,\n    runtimeTemplate,\n    cssExports\n  }) {\n    const dep = /** @type {CssLocalIdentifierDependency} */dependency;\n    const used = moduleGraph.getExportInfo(module, dep.name).getUsedName(dep.name, runtime);\n    if (!used) return;\n    const localIdent = dep.prefix + getLocalIdent(used, /** @type {CssModule} */module, chunkGraph, runtimeTemplate);\n    source.replace(dep.range[0], dep.range[1] - 1, escapeCssIdentifier(localIdent, dep.prefix));\n    if (used) cssExports.set(used, localIdent);\n  }\n};\nmakeSerializable(CssLocalIdentifierDependency, \"webpack/lib/dependencies/CssLocalIdentifierDependency\");\nmodule.exports = CssLocalIdentifierDependency;","map":{"version":3,"names":["createHash","require","makePathsRelative","makeSerializable","NullDependency","getLocalIdent","local","module","chunkGraph","runtimeTemplate","localIdentName","generator","relativeResourcePath","context","resourceResolveData","path","hashFunction","hashDigest","hashDigestLength","hashSalt","uniqueName","outputOptions","hash","update","test","localIdentHash","digest","replace","slice","compilation","getPath","filename","contentHash","CssLocalIdentifierDependency","constructor","name","range","prefix","type","getExports","moduleGraph","exports","canMangle","dependencies","undefined","serialize","write","deserialize","read","escapeCssIdentifier","str","omitUnderscore","escaped","s","Template","CssLocalIdentifierDependencyTemplate","apply","dependency","source","runtime","cssExports","dep","used","getExportInfo","getUsedName","localIdent","set"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/dependencies/CssLocalIdentifierDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst createHash = require(\"../util/createHash\");\nconst { makePathsRelative } = require(\"../util/identifier\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssGeneratorExportsConvention} CssGeneratorExportsConvention */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssGeneratorLocalIdentName} CssGeneratorLocalIdentName */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../CssModule\")} CssModule */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../css/CssExportsGenerator\")} CssExportsGenerator */\n/** @typedef {import(\"../css/CssGenerator\")} CssGenerator */\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/**\n * @param {string} local css local\n * @param {CssModule} module module\n * @param {ChunkGraph} chunkGraph chunk graph\n * @param {RuntimeTemplate} runtimeTemplate runtime template\n * @returns {string} local ident\n */\nconst getLocalIdent = (local, module, chunkGraph, runtimeTemplate) => {\n\tconst localIdentName =\n\t\t/** @type {CssGenerator | CssExportsGenerator} */\n\t\t(module.generator).localIdentName;\n\tconst relativeResourcePath = makePathsRelative(\n\t\t/** @type {string} */ (module.context),\n\t\tmodule.resourceResolveData.path\n\t);\n\tconst { hashFunction, hashDigest, hashDigestLength, hashSalt, uniqueName } =\n\t\truntimeTemplate.outputOptions;\n\tconst hash = createHash(hashFunction);\n\tif (hashSalt) {\n\t\thash.update(hashSalt);\n\t}\n\thash.update(relativeResourcePath);\n\tif (!/\\[local\\]/.test(localIdentName)) {\n\t\thash.update(local);\n\t}\n\tconst localIdentHash = /** @type {string} */ (hash.digest(hashDigest))\n\t\t// Remove all leading digits\n\t\t.replace(/^\\d+/, \"\")\n\t\t// Replace all slashes with underscores (same as in base64url)\n\t\t.replace(/\\//g, \"_\")\n\t\t// Remove everything that is not an alphanumeric or underscore\n\t\t.replace(/[^A-Za-z0-9_]+/g, \"_\")\n\t\t.slice(0, hashDigestLength);\n\treturn runtimeTemplate.compilation\n\t\t.getPath(localIdentName, {\n\t\t\tfilename: relativeResourcePath,\n\t\t\thash: localIdentHash,\n\t\t\tcontentHash: localIdentHash,\n\t\t\tchunkGraph,\n\t\t\tmodule\n\t\t})\n\t\t.replace(/\\[local\\]/g, local)\n\t\t.replace(/\\[uniqueName\\]/g, uniqueName);\n};\n\nclass CssLocalIdentifierDependency extends NullDependency {\n\t/**\n\t * @param {string} name name\n\t * @param {Range} range range\n\t * @param {string=} prefix prefix\n\t */\n\tconstructor(name, range, prefix = \"\") {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.prefix = prefix;\n\t}\n\n\tget type() {\n\t\treturn \"css local identifier\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\tconst name = this.name;\n\t\treturn {\n\t\t\texports: [\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tcanMangle: true\n\t\t\t\t}\n\t\t\t],\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.name);\n\t\twrite(this.range);\n\t\twrite(this.prefix);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.name = read();\n\t\tthis.range = read();\n\t\tthis.prefix = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\n/**\n * @param {string} str string\n * @param {string | boolean} omitUnderscore true if you need to omit underscore\n * @returns {string} escaped css identifier\n */\nconst escapeCssIdentifier = (str, omitUnderscore) => {\n\tconst escaped = `${str}`.replace(\n\t\t// cspell:word uffff\n\t\t/[^a-zA-Z0-9_\\u0081-\\uffff-]/g,\n\t\ts => `\\\\${s}`\n\t);\n\treturn !omitUnderscore && /^(?!--)[0-9-]/.test(escaped)\n\t\t? `_${escaped}`\n\t\t: escaped;\n};\n\nCssLocalIdentifierDependency.Template = class CssLocalIdentifierDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ module, moduleGraph, chunkGraph, runtime, runtimeTemplate, cssExports }\n\t) {\n\t\tconst dep = /** @type {CssLocalIdentifierDependency} */ (dependency);\n\t\tconst used = moduleGraph\n\t\t\t.getExportInfo(module, dep.name)\n\t\t\t.getUsedName(dep.name, runtime);\n\n\t\tif (!used) return;\n\n\t\tconst localIdent =\n\t\t\tdep.prefix +\n\t\t\tgetLocalIdent(\n\t\t\t\tused,\n\t\t\t\t/** @type {CssModule} */ (module),\n\t\t\t\tchunkGraph,\n\t\t\t\truntimeTemplate\n\t\t\t);\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\tescapeCssIdentifier(localIdent, dep.prefix)\n\t\t);\n\t\tif (used) cssExports.set(used, localIdent);\n\t}\n};\n\nmakeSerializable(\n\tCssLocalIdentifierDependency,\n\t\"webpack/lib/dependencies/CssLocalIdentifierDependency\"\n);\n\nmodule.exports = CssLocalIdentifierDependency;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}