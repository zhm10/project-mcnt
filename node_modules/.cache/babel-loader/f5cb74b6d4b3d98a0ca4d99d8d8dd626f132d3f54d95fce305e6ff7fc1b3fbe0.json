{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/Stories/Stories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Stories from \"react-insta-stories\";\nimport storiesData from \"../../data/stories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst context = require.context('../../assets/stories', true);\nfunction MCStories() {\n  _s();\n  const [stories, setStories] = useState([]);\n  useEffect(() => {\n    try {\n      const updatedStories = storiesData.map(story => {\n        // Проверка наличия файла\n        let filePath;\n        try {\n          filePath = context(`./${story.url}`);\n        } catch (error) {\n          console.error(`Error loading file: ${story.url}`, error);\n          filePath = ''; // Или задайте значение по умолчанию\n        }\n        return {\n          url: filePath,\n          type: story.type || 'image',\n          header: {\n            heading: story.overlay,\n            subheading: '',\n            profileImage: '' // Вы можете добавить ссылку на изображение профиля, если нужно\n          },\n          storyContent: {\n            width: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            margin: 'auto'\n          }\n        };\n      });\n      setStories(updatedStories);\n    } catch (error) {\n      console.error('Error processing stories data', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stories.length > 0 ? /*#__PURE__*/_jsxDEV(Stories, {\n      stories: stories,\n      defaultInterval: 4000,\n      width: \"100%\",\n      height: 800,\n      loop: true,\n      isPaused: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading stories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) // Добавьте элемент загрузки\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MCStories, \"cTz//Yl5IQLyRPBEoAItnTUhr1w=\");\n_c = MCStories;\nexport default MCStories;\nvar _c;\n$RefreshReg$(_c, \"MCStories\");","map":{"version":3,"names":["React","useEffect","useState","Stories","storiesData","jsxDEV","_jsxDEV","context","require","MCStories","_s","stories","setStories","updatedStories","map","story","filePath","url","error","console","type","header","heading","overlay","subheading","profileImage","storyContent","width","maxWidth","maxHeight","margin","children","length","defaultInterval","height","loop","isPaused","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/Stories/Stories.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Stories from \"react-insta-stories\";\nimport storiesData from \"../../data/stories.json\";\n\nconst context = require.context('../../assets/stories', true);\n\n\nfunction MCStories() {\n  const [stories, setStories] = useState([]);\n\n  useEffect(() => {\n    try {\n      const updatedStories = storiesData.map((story) => {\n        // Проверка наличия файла\n        let filePath;\n        try {\n          filePath = context(`./${story.url}`);\n        } catch (error) {\n          console.error(`Error loading file: ${story.url}`, error);\n          filePath = ''; // Или задайте значение по умолчанию\n        }\n\n        return {\n          url: filePath,\n          type: story.type || 'image',\n          header: {\n            heading: story.overlay,\n            subheading: '',\n            profileImage: '', // Вы можете добавить ссылку на изображение профиля, если нужно\n          },\n          storyContent: {\n            width: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            margin: 'auto',\n          }\n        };\n      });\n\n      setStories(updatedStories);\n    } catch (error) {\n      console.error('Error processing stories data', error);\n    }\n  }, []);\n\n  return (\n    <div>\n      {stories.length > 0 ? (\n        <Stories\n          stories={stories}\n          defaultInterval={4000}\n          width={\"100%\"}\n          height={800}\n          loop={true}\n          isPaused={true}\n        />\n      ) : (\n        <div>Loading stories...</div> // Добавьте элемент загрузки\n      )}\n    </div>\n  );\n}\n\nexport default MCStories;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC;AAG7D,SAASE,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMY,cAAc,GAAGT,WAAW,CAACU,GAAG,CAAEC,KAAK,IAAK;QAChD;QACA,IAAIC,QAAQ;QACZ,IAAI;UACFA,QAAQ,GAAGT,OAAO,CAAC,KAAKQ,KAAK,CAACE,GAAG,EAAE,CAAC;QACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBH,KAAK,CAACE,GAAG,EAAE,EAAEC,KAAK,CAAC;UACxDF,QAAQ,GAAG,EAAE,CAAC,CAAC;QACjB;QAEA,OAAO;UACLC,GAAG,EAAED,QAAQ;UACbI,IAAI,EAAEL,KAAK,CAACK,IAAI,IAAI,OAAO;UAC3BC,MAAM,EAAE;YACNC,OAAO,EAAEP,KAAK,CAACQ,OAAO;YACtBC,UAAU,EAAE,EAAE;YACdC,YAAY,EAAE,EAAE,CAAE;UACpB,CAAC;UACDC,YAAY,EAAE;YACZC,KAAK,EAAE,MAAM;YACbC,QAAQ,EAAE,MAAM;YAChBC,SAAS,EAAE,MAAM;YACjBC,MAAM,EAAE;UACV;QACF,CAAC;MACH,CAAC,CAAC;MAEFlB,UAAU,CAACC,cAAc,CAAC;IAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAyB,QAAA,EACGpB,OAAO,CAACqB,MAAM,GAAG,CAAC,gBACjB1B,OAAA,CAACH,OAAO;MACNQ,OAAO,EAAEA,OAAQ;MACjBsB,eAAe,EAAE,IAAK;MACtBN,KAAK,EAAE,MAAO;MACdO,MAAM,EAAE,GAAI;MACZC,IAAI,EAAE,IAAK;MACXC,QAAQ,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,gBAEFlC,OAAA;MAAAyB,QAAA,EAAK;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CAtDQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAwDlB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}