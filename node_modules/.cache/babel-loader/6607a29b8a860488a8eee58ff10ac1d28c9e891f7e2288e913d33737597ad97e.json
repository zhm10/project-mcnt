{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n  chunkHasJs,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").ReadOnlyRuntimeRequirements} ReadOnlyRuntimeRequirements */\n\nclass RequireChunkLoadingRuntimeModule extends RuntimeModule {\n  /**\n   * @param {ReadOnlyRuntimeRequirements} runtimeRequirements runtime requirements\n   */\n  constructor(runtimeRequirements) {\n    super(\"require chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @param {string} rootOutputDir root output directory\n   * @returns {string} generated code\n   */\n  _generateBaseUri(chunk, rootOutputDir) {\n    const options = chunk.getEntryOptions();\n    if (options && options.baseUri) {\n      return `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n    }\n    return `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${rootOutputDir !== \"./\" ? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}` : \"__filename\"});`;\n  }\n\n  /**\n   * @returns {string | null} runtime code\n   */\n  generate() {\n    const compilation = /** @type {Compilation} */this.compilation;\n    const chunkGraph = /** @type {ChunkGraph} */this.chunkGraph;\n    const chunk = /** @type {Chunk} */this.chunk;\n    const {\n      runtimeTemplate\n    } = compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withExternalInstallChunk = this.runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n    const withOnChunkLoad = this.runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n    const outputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, /** @type {string} */compilation.outputOptions.path, true);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_require` : undefined;\n    return Template.asString([withBaseURI ? this._generateBaseUri(chunk, rootOutputDir) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"1\" means \"loaded\", otherwise not loaded yet', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\",\\n\")), \"};\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.require = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId]\", \"chunkId\")};` : \"// no on chunks loaded\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\", \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`]), \"}\"]), \"}\", `if(runtime) runtime(${RuntimeGlobals.require});`, \"for(var i = 0; i < chunkIds.length; i++)\", Template.indent(\"installedChunks[chunkIds[i]] = 1;\"), withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])};` : \"// no chunk install function needed\", \"\", withLoading ? Template.asString([\"// require() chunk loading for javascript\", `${fn}.require = ${runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? ['// \"1\" is the signal for \"already loaded\"', \"if(!installedChunks[chunkId]) {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([`installChunk(require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)));`]), \"} else installedChunks[chunkId] = 1;\", \"\"]), \"}\"] : \"installedChunks[chunkId] = 1;\")};`]) : \"// no chunk loading\", \"\", withExternalInstallChunk ? Template.asString([`module.exports = ${RuntimeGlobals.require};`, `${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([`var update = require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`, \"var updatedModules = update.modules;\", \"var runtime = update.runtime;\", \"for(var moduleId in updatedModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`, Template.indent([`currentUpdate[moduleId] = updatedModules[moduleId];`, \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\"]), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"require\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = function() {`, Template.indent([\"return Promise.resolve().then(function() {\", Template.indent([`return require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getUpdateManifestFilename}());`]), \"})['catch'](function(err) { if(err.code !== 'MODULE_NOT_FOUND') throw err; });\"]), \"}\"]) : \"// no HMR manifest\"]);\n  }\n}\nmodule.exports = RequireChunkLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","chunkHasJs","getChunkFilenameTemplate","getInitialChunkIds","compileBooleanMatcher","getUndoPath","RequireChunkLoadingRuntimeModule","constructor","runtimeRequirements","STAGE_ATTACH","_generateBaseUri","chunk","rootOutputDir","options","getEntryOptions","baseUri","baseURI","JSON","stringify","generate","compilation","chunkGraph","runtimeTemplate","fn","ensureChunkHandlers","withBaseURI","has","withExternalInstallChunk","externalInstallChunk","withOnChunkLoad","onChunksLoaded","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","outputOptions","contentHashType","path","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","returningFunction","basicFunction","hasOwnProperty","moduleFactories","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/node/RequireChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tchunkHasJs,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").ReadOnlyRuntimeRequirements} ReadOnlyRuntimeRequirements */\n\nclass RequireChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {ReadOnlyRuntimeRequirements} runtimeRequirements runtime requirements\n\t */\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"require chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @param {string} rootOutputDir root output directory\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk, rootOutputDir) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\n\t\treturn `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${\n\t\t\trootOutputDir !== \"./\"\n\t\t\t\t? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}`\n\t\t\t\t: \"__filename\"\n\t\t});`;\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst chunkGraph = /** @type {ChunkGraph} */ (this.chunkGraph);\n\t\tconst chunk = /** @type {Chunk} */ (this.chunk);\n\t\tconst { runtimeTemplate } = compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withOnChunkLoad = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst outputName = compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\t/** @type {string} */ (compilation.outputOptions.path),\n\t\t\ttrue\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_require`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? this._generateBaseUri(chunk, rootOutputDir)\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"1\" means \"loaded\", otherwise not loaded yet',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t\t}.require = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId]\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t\t)};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\n\t\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\",\n\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t`if(runtime) runtime(${RuntimeGlobals.require});`,\n\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++)\",\n\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds[i]] = 1;\"),\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t\t])};`\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// require() chunk loading for javascript\",\n\t\t\t\t\t\t`${fn}.require = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`installChunk(require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId)));`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 1;\",\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t: \"installedChunks[chunkId] = 1;\"\n\t\t\t\t\t\t)};`\n\t\t\t\t\t])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`module.exports = ${RuntimeGlobals.require};`,\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t\t])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`var update = require(${JSON.stringify(rootOutputDir)} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkUpdateScriptFilename\n\t\t\t\t\t\t\t}(chunkId));`,\n\t\t\t\t\t\t\t\"var updatedModules = update.modules;\",\n\t\t\t\t\t\t\t\"var runtime = update.runtime;\",\n\t\t\t\t\t\t\t\"for(var moduleId in updatedModules) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`currentUpdate[moduleId] = updatedModules[moduleId];`,\n\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"require\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.hmrDownloadManifest} = function() {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return Promise.resolve().then(function() {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`return require(${JSON.stringify(rootOutputDir)} + ${\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t\t}());`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"})['catch'](function(err) { if(err.code !== 'MODULE_NOT_FOUND') throw err; });\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = RequireChunkLoadingRuntimeModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}