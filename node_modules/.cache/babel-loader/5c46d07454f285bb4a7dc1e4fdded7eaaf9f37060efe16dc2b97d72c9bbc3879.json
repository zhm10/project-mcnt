{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\n  /**\n   * @param {boolean} asyncChunkLoading use async chunk loading\n   */\n  constructor(asyncChunkLoading) {\n    super(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\n    this.asyncChunkLoading = asyncChunkLoading;\n  }\n\n  /**\n   * @returns {string | null} runtime code\n   */\n  generate() {\n    const chunkGraph = /** @type {ChunkGraph} */this.chunkGraph;\n    const chunk = /** @type {Chunk} */this.chunk;\n    const chunkIds = Array.from(chunkGraph.getChunkEntryDependentChunksIterable(chunk)).map(chunk => {\n      return chunk.id;\n    });\n    const compilation = /** @type {Compilation} */this.compilation;\n    const {\n      runtimeTemplate\n    } = compilation;\n    return Template.asString([`var next = ${RuntimeGlobals.startup};`, `${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\"\", !this.asyncChunkLoading ? chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`).concat(\"return next();\") : chunkIds.length === 1 ? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunkIds[0])}).then(next);` : chunkIds.length > 2 ? [\n    // using map is shorter for 3 or more chunks\n    `return Promise.all(${JSON.stringify(chunkIds)}.map(${RuntimeGlobals.ensureChunk}, ${RuntimeGlobals.require})).then(next);`] : [\n    // calling ensureChunk directly is shorter for 0 - 2 chunks\n    \"return Promise.all([\", Template.indent(chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`).join(\",\\n\")), \"]).then(next);\"])};`]);\n  }\n}\nmodule.exports = StartupChunkDependenciesRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","StartupChunkDependenciesRuntimeModule","constructor","asyncChunkLoading","STAGE_TRIGGER","generate","chunkGraph","chunk","chunkIds","Array","from","getChunkEntryDependentChunksIterable","map","id","compilation","runtimeTemplate","asString","startup","basicFunction","ensureChunk","JSON","stringify","concat","length","indent","join","module","exports"],"sources":["/Volumes/storage/projects/project-mcnt/node_modules/webpack/lib/runtime/StartupChunkDependenciesRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {boolean} asyncChunkLoading use async chunk loading\n\t */\n\tconstructor(asyncChunkLoading) {\n\t\tsuper(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\n\t\tthis.asyncChunkLoading = asyncChunkLoading;\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst chunkGraph = /** @type {ChunkGraph} */ (this.chunkGraph);\n\t\tconst chunk = /** @type {Chunk} */ (this.chunk);\n\t\tconst chunkIds = Array.from(\n\t\t\tchunkGraph.getChunkEntryDependentChunksIterable(chunk)\n\t\t).map(chunk => {\n\t\t\treturn chunk.id;\n\t\t});\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst { runtimeTemplate } = compilation;\n\t\treturn Template.asString([\n\t\t\t`var next = ${RuntimeGlobals.startup};`,\n\t\t\t`${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\n\t\t\t\t\"\",\n\t\t\t\t!this.asyncChunkLoading\n\t\t\t\t\t? chunkIds\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\tid => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.concat(\"return next();\")\n\t\t\t\t\t: chunkIds.length === 1\n\t\t\t\t\t\t? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(\n\t\t\t\t\t\t\t\tchunkIds[0]\n\t\t\t\t\t\t\t)}).then(next);`\n\t\t\t\t\t\t: chunkIds.length > 2\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t// using map is shorter for 3 or more chunks\n\t\t\t\t\t\t\t\t\t`return Promise.all(${JSON.stringify(chunkIds)}.map(${\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunk\n\t\t\t\t\t\t\t\t\t}, ${RuntimeGlobals.require})).then(next);`\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t// calling ensureChunk directly is shorter for 0 - 2 chunks\n\t\t\t\t\t\t\t\t\t\"return Promise.all([\",\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\tchunkIds\n\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\tid =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.join(\",\\n\")\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"]).then(next);\"\n\t\t\t\t\t\t\t\t]\n\t\t\t)};`\n\t\t]);\n\t}\n}\n\nmodule.exports = StartupChunkDependenciesRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEvC;AACA;AACA;;AAEA,MAAMG,qCAAqC,SAASF,aAAa,CAAC;EACjE;AACD;AACA;EACCG,WAAWA,CAACC,iBAAiB,EAAE;IAC9B,KAAK,CAAC,4BAA4B,EAAEJ,aAAa,CAACK,aAAa,CAAC;IAChE,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;EAC3C;;EAEA;AACD;AACA;EACCE,QAAQA,CAAA,EAAG;IACV,MAAMC,UAAU,GAAG,yBAA2B,IAAI,CAACA,UAAW;IAC9D,MAAMC,KAAK,GAAG,oBAAsB,IAAI,CAACA,KAAM;IAC/C,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAC1BJ,UAAU,CAACK,oCAAoC,CAACJ,KAAK,CACtD,CAAC,CAACK,GAAG,CAACL,KAAK,IAAI;MACd,OAAOA,KAAK,CAACM,EAAE;IAChB,CAAC,CAAC;IACF,MAAMC,WAAW,GAAG,0BAA4B,IAAI,CAACA,WAAY;IACjE,MAAM;MAAEC;IAAgB,CAAC,GAAGD,WAAW;IACvC,OAAOd,QAAQ,CAACgB,QAAQ,CAAC,CACxB,cAAcnB,cAAc,CAACoB,OAAO,GAAG,EACvC,GAAGpB,cAAc,CAACoB,OAAO,MAAMF,eAAe,CAACG,aAAa,CAC3D,EAAE,EACF,CAAC,IAAI,CAACf,iBAAiB,GACpBK,QAAQ,CACPI,GAAG,CACHC,EAAE,IAAI,GAAGhB,cAAc,CAACsB,WAAW,IAAIC,IAAI,CAACC,SAAS,CAACR,EAAE,CAAC,IAC1D,CAAC,CACAS,MAAM,CAAC,gBAAgB,CAAC,GACzBd,QAAQ,CAACe,MAAM,KAAK,CAAC,GACpB,UAAU1B,cAAc,CAACsB,WAAW,IAAIC,IAAI,CAACC,SAAS,CACtDb,QAAQ,CAAC,CAAC,CACX,CAAC,eAAe,GACfA,QAAQ,CAACe,MAAM,GAAG,CAAC,GAClB;IACA;IACA,sBAAsBH,IAAI,CAACC,SAAS,CAACb,QAAQ,CAAC,QAC7CX,cAAc,CAACsB,WAAW,KACtBtB,cAAc,CAACC,OAAO,gBAAgB,CAC3C,GACA;IACA;IACA,sBAAsB,EACtBE,QAAQ,CAACwB,MAAM,CACdhB,QAAQ,CACNI,GAAG,CACHC,EAAE,IACD,GAAGhB,cAAc,CAACsB,WAAW,IAAIC,IAAI,CAACC,SAAS,CAACR,EAAE,CAAC,GACrD,CAAC,CACAY,IAAI,CAAC,KAAK,CACb,CAAC,EACD,gBAAgB,CAEtB,CAAC,GAAG,CACJ,CAAC;EACH;AACD;AAEAC,MAAM,CAACC,OAAO,GAAG1B,qCAAqC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}