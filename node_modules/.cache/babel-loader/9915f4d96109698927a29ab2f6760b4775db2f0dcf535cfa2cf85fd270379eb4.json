{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport 'swiper/css/pagination';\nimport menuData from \"../../data/services.json\";\nimport { FreeMode, Pagination } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet blockHeight;\nlet firstBlockHeight;\nfunction ServicesMenu({\n  activeIndex = null,\n  setActiveIndex = null\n}) {\n  _s();\n  const [fixed, setFixed] = useState(false);\n  const wrapperMenuRef = useRef(null);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    const handleScroll = () => {\n      const block = wrapperMenuRef.current;\n      // const block = document.querySelector(\".servicesmenu-wrapper\");\n      const blockTop = block.getBoundingClientRect().top;\n      blockHeight = block.offsetHeight;\n      firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n      // console.log(\"blockTop=\" + blockTop, \"firstBlockHeight=\" + firstBlockHeight);\n      if (blockTop < firstBlockHeight) {\n        setFixed(true);\n      } else {\n        setFixed(false);\n      }\n      menuRef.current.swiper.updateSize();\n    };\n    const handleLoad = () => {\n      window.addEventListener('scroll', handleScroll);\n    };\n    handleLoad();\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleItemClick = index => {\n    setActiveIndex(index);\n    const category = document.querySelector('.services .service-id-' + index);\n    if (category) {\n      const bottomOffset = category.getBoundingClientRect().top + window.pageYOffset - 110;\n      window.scrollTo({\n        top: bottomOffset,\n        behavior: 'instant' // Плавная прокрутка\n      });\n    }\n    const activeElement = menuRef.current.querySelector(`.service-id-${index}`);\n    if (activeElement) {\n      const parentElement = activeElement.parentElement;\n      const containerRect = parentElement.getBoundingClientRect();\n      const elementRect = activeElement.getBoundingClientRect();\n      const containerWidth = parentElement.clientWidth; // Ширина видимой части контейнера\n      const elementWidth = activeElement.offsetWidth; // Ширина выбранного элемента\n      const offset = elementRect.left - containerRect.left - (containerWidth - elementWidth) / 2;\n      console.log(offset);\n      parentElement.scrollTo({\n        left: 500,\n        //parentElement.scrollLeft + offset,\n        behavior: 'smooth' // Плавная прокрутка\n      });\n      // menuRef.current.scrollBy(500, 500);\n    }\n  };\n  const pagination = {\n    clickable: true,\n    renderBullet: function (index, className) {\n      return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"servicesmenu-wrapper\",\n    ref: wrapperMenuRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fallback ${fixed ? 'fixed' : ''}`,\n      style: {\n        height: blockHeight\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'servicesmenu' + (fixed ? \" fixed\" : \"\"),\n      style: {\n        top: fixed ? firstBlockHeight + 'px' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 'auto',\n          freeMode: true,\n          pagination: pagination,\n          modules: [FreeMode],\n          ref: menuRef,\n          children: menuData.map(service => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            className: `item service-id-${service.id} ${activeIndex === service.id ? 'active-service' : ''}`,\n            onClick: () => handleItemClick(service.id),\n            children: service.name\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(ServicesMenu, \"oOe1RRf9tYcB3DPzmdpOAdGa5oY=\");\n_c = ServicesMenu;\nexport default ServicesMenu;\nvar _c;\n$RefreshReg$(_c, \"ServicesMenu\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Swiper","SwiperSlide","menuData","FreeMode","Pagination","jsxDEV","_jsxDEV","blockHeight","firstBlockHeight","ServicesMenu","activeIndex","setActiveIndex","_s","fixed","setFixed","wrapperMenuRef","menuRef","handleScroll","block","current","blockTop","getBoundingClientRect","top","offsetHeight","document","querySelector","swiper","updateSize","handleLoad","window","addEventListener","removeEventListener","handleItemClick","index","category","bottomOffset","pageYOffset","scrollTo","behavior","activeElement","parentElement","containerRect","elementRect","containerWidth","clientWidth","elementWidth","offsetWidth","offset","left","console","log","pagination","clickable","renderBullet","className","ref","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","slidesPerView","freeMode","modules","map","service","id","onClick","name","_c","$RefreshReg$"],"sources":["/Volumes/storage/projects/project-mcnt/src/components/ServicesMenu/ServicesMenu.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport './ServicesMenu.css';\nimport 'swiper/css';\nimport 'swiper/css/free-mode';\nimport 'swiper/css/pagination';\n\nimport menuData from \"../../data/services.json\";\nimport { FreeMode, Pagination } from 'swiper/modules';\n\nlet blockHeight;\nlet firstBlockHeight;\n\nfunction ServicesMenu({ activeIndex = null, setActiveIndex = null }) {\n    const [fixed, setFixed] = useState(false);\n    const wrapperMenuRef = useRef(null);\n    const menuRef = useRef(null);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const block = wrapperMenuRef.current;\n            // const block = document.querySelector(\".servicesmenu-wrapper\");\n            const blockTop = block.getBoundingClientRect().top;\n            blockHeight = block.offsetHeight;\n\n            firstBlockHeight = document.querySelector(\".header-wrapper .content\").offsetHeight;\n            // console.log(\"blockTop=\" + blockTop, \"firstBlockHeight=\" + firstBlockHeight);\n            if (blockTop < firstBlockHeight) {\n                setFixed(true);\n            } else {\n                setFixed(false);\n            }\n\n            menuRef.current.swiper.updateSize();\n        };\n\n        const handleLoad = () => {\n            window.addEventListener('scroll', handleScroll);\n        };\n\n        handleLoad();\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    const handleItemClick = (index) => {\n        setActiveIndex(index);\n\n        const category = document.querySelector('.services .service-id-' + index);\n        if (category) {\n            const bottomOffset = category.getBoundingClientRect().top + window.pageYOffset - 110;\n\n            window.scrollTo({\n                top: bottomOffset,\n                behavior: 'instant' // Плавная прокрутка\n            });\n        }\n\n        const activeElement = menuRef.current.querySelector(`.service-id-${index}`);\n        if (activeElement) {\n            const parentElement = activeElement.parentElement;\n            const containerRect = parentElement.getBoundingClientRect();\n            const elementRect = activeElement.getBoundingClientRect();\n            const containerWidth = parentElement.clientWidth; // Ширина видимой части контейнера\n            const elementWidth = activeElement.offsetWidth; // Ширина выбранного элемента\n            const offset = elementRect.left - containerRect.left - (containerWidth - elementWidth) / 2;\n            console.log(offset);\n\n            parentElement.scrollTo({\n                left: 500, //parentElement.scrollLeft + offset,\n                behavior: 'smooth' // Плавная прокрутка\n            });\n            // menuRef.current.scrollBy(500, 500);\n        }\n    };\n\n\n\n    const pagination = {\n        clickable: true,\n        renderBullet: function (index, className) {\n          return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\n        },\n      };\n\n    return (\n        <div className='servicesmenu-wrapper' ref={wrapperMenuRef}>\n            <div className={`fallback ${fixed ? 'fixed' : ''}`}\n                style={{ height: blockHeight }}\n            ></div>\n            <div className={'servicesmenu' + (fixed ? \" fixed\" : \"\")}\n                style={{ top: fixed ? firstBlockHeight + 'px' : '' }}\n            >\n                <div className='content'>\n                <Swiper\n                    slidesPerView={'auto'}\n                    freeMode={true}\n                    pagination={pagination}\n                    modules={[FreeMode]}\n                    ref={menuRef}\n                >\n                    {menuData.map(service => (\n                        <SwiperSlide\n                            className={`item service-id-${service.id} ${activeIndex === service.id ? 'active-service' : ''}`}\n                            key={service.id}\n                            onClick={() => handleItemClick(service.id)}\n                        >{service.name}</SwiperSlide>\n                    ))}\n                </Swiper>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ServicesMenu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}